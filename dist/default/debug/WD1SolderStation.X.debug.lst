

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Jul 08 11:11:54 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,minocg
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,inline,minocg
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,minocg
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,minocg
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,minocg
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,minocg
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,minocg
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,minocg
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,minocg
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,minocg
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1,minocg
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,minocg
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1,minocg
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1,minocg
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1,minocg
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1,minocg
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1,minocg
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1,minocg
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1,minocg
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    63                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1,minocg
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1,minocg
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1,minocg
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1,minocg
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    69                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    70  0000                     
    71                           ; Version 1.45
    72                           ; Generated 16/11/2017 GMT
    73                           ; 
    74                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F4620 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     
   106                           	psect	smallconst
   107  001000                     __psmallconst:
   108                           	opt stack 0
   109  001000  00                 	db	0
   110  001001                     _u32_AdcLsb:
   111                           	opt stack 0
   112  001001  1312               	dw	4882
   113  001003  0000               	dw	0
   114  001005                     __end_of_u32_AdcLsb:
   115                           	opt stack 0
   116  001005                     _si32_TempSensorOffset:
   117                           	opt stack 0
   118  001005  FFC6               	dw	65478
   119  001007  FFFF               	dw	65535
   120  001009                     __end_of_si32_TempSensorOffset:
   121                           	opt stack 0
   122  001009                     _si32_TempSensorGain:
   123                           	opt stack 0
   124  001009  007D               	dw	125
   125  00100B  0000               	dw	0
   126  00100D                     __end_of_si32_TempSensorGain:
   127                           	opt stack 0
   128  00100D                     _u8_SoftwareVersion:
   129                           	opt stack 0
   130  00100D  01                 	db	1
   131  00100E  00                 	db	0
   132  00100F                     __end_of_u8_SoftwareVersion:
   133                           	opt stack 0
   134  00100F                     _u8_LCD_BankSelect:
   135                           	opt stack 0
   136  00100F  78                 	db	120
   137  001010                     __end_of_u8_LCD_BankSelect:
   138                           	opt stack 0
   139  001010                     _u8_LCD_Blink:
   140                           	opt stack 0
   141  001010  70                 	db	112
   142  001011                     __end_of_u8_LCD_Blink:
   143                           	opt stack 0
   144  001011                     _u8_LCD_ModeSet:
   145                           	opt stack 0
   146  001011  4B                 	db	75
   147  001012                     __end_of_u8_LCD_ModeSet:
   148                           	opt stack 0
   149  001012                     _u8_LCD_DeviceSelect:
   150                           	opt stack 0
   151  001012  60                 	db	96
   152  001013                     __end_of_u8_LCD_DeviceSelect:
   153                           	opt stack 0
   154  0000                     _PORTCbits	set	3970
   155  0000                     _PORTD	set	3971
   156  0000                     _LATD	set	3980
   157  0000                     _TRISD	set	3989
   158  0000                     _LATC	set	3979
   159  0000                     _PORTC	set	3970
   160  0000                     _TRISC	set	3988
   161  0000                     _PORTB	set	3969
   162  0000                     _LATB	set	3978
   163  0000                     _TRISB	set	3987
   164  0000                     _PORTA	set	3968
   165  0000                     _LATA	set	3977
   166  0000                     _TRISA	set	3986
   167  0000                     _LATDbits	set	3980
   168  0000                     _LATAbits	set	3977
   169  0000                     _TRISC4	set	31908
   170  0000                     _TRISC3	set	31907
   171  0000                     _PLLEN	set	31966
   172  0000                     _ADRES	set	4035
   173  0000                     _EECON2	set	4007
   174  0000                     _EEDATA	set	4008
   175  0000                     _EEADR	set	4009
   176  0000                     _EECON1bits	set	4006
   177  0000                     _EECON1	set	4006
   178  0000                     _PIE1bits	set	3997
   179  0000                     _PR2	set	4043
   180  0000                     _TMR2	set	4044
   181  0000                     _T2CON	set	4042
   182  0000                     _SSPBUF	set	4041
   183  0000                     _SSPADD	set	4040
   184  0000                     _SSPCON2	set	4037
   185  0000                     _SSPCON1	set	4038
   186  0000                     _SSPSTAT	set	4039
   187  0000                     _OSCCON	set	4051
   188  0000                     _ADCON0bits	set	4034
   189  0000                     _ADCON2	set	4032
   190  0000                     _ADCON1	set	4033
   191  0000                     _ADCON0	set	4034
   192  0000                     _PIR1bits	set	3998
   193  0000                     _PEN	set	32298
   194  0000                     _SEN	set	32296
   195  0000                     _TMR2IP	set	31993
   196  0000                     _IOFS	set	32410
   197  0000                     _INTCONbits	set	4082
   198  0000                     _INTCON3	set	4080
   199  0000                     _INTCON2	set	4081
   200  0000                     _INTCON	set	4082
   201  0000                     _INTCON3bits	set	4080
   202                           
   203                           ; #config settings
   204  001013  00                 	db	0	; dummy byte at the end
   205  0000                     
   206                           	psect	cinit
   207  002AE4                     __pcinit:
   208                           	opt stack 0
   209  002AE4                     start_initialization:
   210                           	opt stack 0
   211  002AE4                     __initialization:
   212                           	opt stack 0
   213                           
   214                           ; Clear objects allocated to BANK1 (95 bytes)
   215  002AE4  EE01  F000         	lfsr	0,__pbssBANK1
   216  002AE8  0E5F               	movlw	95
   217  002AEA                     clear_0:
   218  002AEA  6AEE               	clrf	postinc0,c
   219  002AEC  06E8               	decf	wreg,f,c
   220  002AEE  E1FD               	bnz	clear_0
   221                           
   222                           ; Clear objects allocated to BANK0 (81 bytes)
   223  002AF0  EE00  F080         	lfsr	0,__pbssBANK0
   224  002AF4  0E51               	movlw	81
   225  002AF6                     clear_1:
   226  002AF6  6AEE               	clrf	postinc0,c
   227  002AF8  06E8               	decf	wreg,f,c
   228  002AFA  E1FD               	bnz	clear_1
   229  002AFC                     end_of_initialization:
   230                           	opt stack 0
   231  002AFC                     __end_of__initialization:
   232                           	opt stack 0
   233  002AFC  9028               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   234  002AFE  9228               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   235  002B00  0100               	movlb	0
   236  002B02  EF81  F013         	goto	_main	;jump to C main() function
   237                           postinc0	equ	0xFEE
   238                           wreg	equ	0xFE8
   239                           
   240                           	psect	bssBANK0
   241  000080                     __pbssBANK0:
   242                           	opt stack 0
   243  000080                     _t_Temperatures:
   244                           	opt stack 0
   245  000080                     	ds	10
   246  00008A                     _u8_ButtonSignal:
   247                           	opt stack 0
   248  00008A                     	ds	5
   249  00008F                     USER_Task@u32_WatchdogCounter:
   250                           	opt stack 0
   251  00008F                     	ds	4
   252  000093                     _s16_TemperatureCelcius:
   253                           	opt stack 0
   254  000093                     	ds	4
   255  000097                     _u16_SyncTime:
   256                           	opt stack 0
   257  000097                     	ds	2
   258  000099                     NVM_Task@u16_TempAddress:
   259                           	opt stack 0
   260  000099                     	ds	2
   261  00009B                     NVM_Task@u16_TempWriteData:
   262                           	opt stack 0
   263  00009B                     	ds	2
   264  00009D                     USER_Task@u16_ShowCurrentSettingCounter:
   265                           	opt stack 0
   266  00009D                     	ds	2
   267  00009F                     USER_Task@u16_SaveCurrentSettingCounter:
   268                           	opt stack 0
   269  00009F                     	ds	2
   270  0000A1                     USER_Task@u16_TemporarySaveSetpoint:
   271                           	opt stack 0
   272  0000A1                     	ds	2
   273  0000A3                     USER_Task@u16_TemporaryCurrentTemperature:
   274                           	opt stack 0
   275  0000A3                     	ds	2
   276  0000A5                     USER_Task@u16_TemporarySetpoint:
   277                           	opt stack 0
   278  0000A5                     	ds	2
   279  0000A7                     CONTROL_Task@s16_prevError:
   280                           	opt stack 0
   281  0000A7                     	ds	2
   282  0000A9                     CONTROL_Task@s16_Error:
   283                           	opt stack 0
   284  0000A9                     	ds	2
   285  0000AB                     _u16_ControlOutput:
   286                           	opt stack 0
   287  0000AB                     	ds	2
   288  0000AD                     _u8_LCD_State:
   289                           	opt stack 0
   290  0000AD                     	ds	2
   291  0000AF                     ADC_GetVoltageFiltered@u16_OutputBefore:
   292                           	opt stack 0
   293  0000AF                     	ds	2
   294  0000B1                     _u16_AdcVoltageMV:
   295                           	opt stack 0
   296  0000B1                     	ds	2
   297  0000B3                     _DebugVariable:
   298                           	opt stack 0
   299  0000B3                     	ds	2
   300  0000B5                     PWM_Task@u8_PeriodCount:
   301                           	opt stack 0
   302  0000B5                     	ds	1
   303  0000B6                     PWM_Task@u8_PwmCounter:
   304                           	opt stack 0
   305  0000B6                     	ds	1
   306  0000B7                     _u8_DutyCycle:
   307                           	opt stack 0
   308  0000B7                     	ds	1
   309  0000B8                     _bFlag_SyncTrigger:
   310                           	opt stack 0
   311  0000B8                     	ds	1
   312  0000B9                     NVM_Task@u8_TempWriteFlag:
   313                           	opt stack 0
   314  0000B9                     	ds	1
   315  0000BA                     NVM_Task@bFlag_StateWriteLowByte:
   316                           	opt stack 0
   317  0000BA                     	ds	1
   318  0000BB                     _u8_NVM_WriteRegister:
   319                           	opt stack 0
   320  0000BB                     	ds	1
   321  0000BC                     	ds	1
   322  0000BD                     _bFlag_SysTick:
   323                           	opt stack 0
   324  0000BD                     	ds	1
   325  0000BE                     USER_FastDecrementSetpoint@u8_FastDecrementCounter:
   326                           	opt stack 0
   327  0000BE                     	ds	1
   328  0000BF                     USER_FastIncrementSetpoint@u8_FastIncrementCounter:
   329                           	opt stack 0
   330  0000BF                     	ds	1
   331  0000C0                     USER_Task@bFlag_AutoOff:
   332                           	opt stack 0
   333  0000C0                     	ds	1
   334  0000C1                     USER_Task@u8_DisplayChangeCounter:
   335                           	opt stack 0
   336  0000C1                     	ds	1
   337  0000C2                     USER_Task@u8_ErroState:
   338                           	opt stack 0
   339  0000C2                     	ds	1
   340  0000C3                     	ds	1
   341  0000C4                     	ds	1
   342  0000C5                     LCD_Task@bFlag_SecondaryData:
   343                           	opt stack 0
   344  0000C5                     	ds	1
   345  0000C6                     LCD_Task@u8_Status:
   346                           	opt stack 0
   347  0000C6                     	ds	1
   348  0000C7                     LCD_Task@u8_LCD_DataCounter:
   349                           	opt stack 0
   350  0000C7                     	ds	1
   351  0000C8                     _u8_LCD_Datapointer:
   352                           	opt stack 0
   353  0000C8                     	ds	1
   354  0000C9                     	ds	1
   355  0000CA                     BUTTONS_Task@u8_ButtonsStatusPressed:
   356                           	opt stack 0
   357  0000CA                     	ds	1
   358  0000CB                     _u8_ErrorRegister:
   359                           	opt stack 0
   360  0000CB                     	ds	1
   361  0000CC                     _t_Buttons:
   362                           	opt stack 0
   363  0000CC                     	ds	5
   364                           postinc0	equ	0xFEE
   365                           wreg	equ	0xFE8
   366                           
   367                           	psect	bssBANK1
   368  000100                     __pbssBANK1:
   369                           	opt stack 0
   370  000100                     _u8_LCD_Data_Ext:
   371                           	opt stack 0
   372  000100                     	ds	16
   373  000110                     _u8_LCD_Data:
   374                           	opt stack 0
   375  000110                     	ds	16
   376  000120                     BUTTONS_Task@u16_ButtonsHoldCounter:
   377                           	opt stack 0
   378  000120                     	ds	16
   379  000130                     BUTTONS_Task@u16_ButtonsDebounceCounter:
   380                           	opt stack 0
   381  000130                     	ds	16
   382  000140                     _u16_NVM_WriteBuffer:
   383                           	opt stack 0
   384  000140                     	ds	10
   385  00014A                     USER_TemperatureFilter@u16_FilterArray:
   386                           	opt stack 0
   387  00014A                     	ds	8
   388  000152                     	ds	5
   389  000157                     _u32_SysTickCounter:
   390                           	opt stack 0
   391  000157                     	ds	4
   392  00015B                     main@u32_TimeStamp:
   393                           	opt stack 0
   394  00015B                     	ds	4
   395                           postinc0	equ	0xFEE
   396                           wreg	equ	0xFE8
   397                           
   398                           	psect	cstackBANK1
   399  00015F                     __pcstackBANK1:
   400                           	opt stack 0
   401  00015F                     ??_ADC_Task:
   402  00015F                     LCD_SetMainDigits@u8_TempArray:
   403                           	opt stack 0
   404  00015F                     LCD_SetPresetDigits@u8_TempArray:
   405                           	opt stack 0
   406                           
   407                           ; 3 bytes @ 0x0
   408  00015F                     	ds	3
   409  000162                     USER_Init@u16_StartupCounter:
   410                           	opt stack 0
   411  000162                     USER_Task@u16_AdcPT20Voltage:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x3
   415  000162                     	ds	1
   416  000163                     _ADC_Task$1620:
   417                           	opt stack 0
   418                           
   419                           ; 4 bytes @ 0x4
   420  000163                     	ds	1
   421  000164                     USER_Init@u16_TempNvmData:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x5
   425  000164                     	ds	3
   426  000167                     ADC_Task@u16_AdcResult:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x8
   430  000167                     	ds	2
   431  000169                     ADC_Task@si32_AdcTemporary:
   432                           	opt stack 0
   433                           
   434                           ; 4 bytes @ 0xA
   435  000169                     	ds	4
   436  00016D                     ?_main:
   437                           	opt stack 0
   438  00016D                     
   439                           ; 2 bytes @ 0xE
   440  00016D                     	ds	2
   441  00016F                     
   442                           ; 3 bytes @ 0x10
   443  00016F                     	ds	3
   444  000172                     main@u8_TaskCounter100ms:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0x13
   448  000172                     	ds	1
   449                           postinc0	equ	0xFEE
   450                           wreg	equ	0xFE8
   451                           
   452                           	psect	cstackBANK0
   453  0000D1                     __pcstackBANK0:
   454                           	opt stack 0
   455  0000D1                     ??_ISR:
   456                           
   457                           ; 1 bytes @ 0x0
   458  0000D1                     	ds	18
   459  0000E3                     ??_PWM_Task:
   460  0000E3                     ??_NVM_Task:
   461  0000E3                     ??_LCD_GetData:
   462  0000E3                     ??_I2C_SendData:
   463  0000E3                     ?_NVM_Read:
   464                           	opt stack 0
   465  0000E3                     ?_ADC_GetTemperature:
   466                           	opt stack 0
   467  0000E3                     ?_ADC_GetVoltageMV:
   468                           	opt stack 0
   469  0000E3                     ?_ADC_GetVoltageFiltered:
   470                           	opt stack 0
   471  0000E3                     ?_TIMER_GetSysTick:
   472                           	opt stack 0
   473  0000E3                     BUTTONS_Task@u8_ButtonsTemporaryInput:
   474                           	opt stack 0
   475  0000E3                     LCD_Bcd2Segment@u8_DigitType:
   476                           	opt stack 0
   477  0000E3                     LCD_SetData@u8_Position:
   478                           	opt stack 0
   479  0000E3                     ADC_GetVoltageFiltered@u16_Input:
   480                           	opt stack 0
   481  0000E3                     BUTTONS_GetState@t_Buttons:
   482                           	opt stack 0
   483  0000E3                     LCD_Dec2Bcd@u16_DecimalData:
   484                           	opt stack 0
   485  0000E3                     NVM_Init@u16_TempData:
   486                           	opt stack 0
   487  0000E3                     NVM_Write@u16_Data:
   488                           	opt stack 0
   489  0000E3                     NVM_Read@u16_Address:
   490                           	opt stack 0
   491  0000E3                     PWM_SetDutyCycle@u16_DutyCycle:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x12
   495  0000E3                     	ds	1
   496  0000E4                     ??_LCD_SetData:
   497  0000E4                     I2C_SendData@u8_Data:
   498                           	opt stack 0
   499  0000E4                     LCD_Bcd2Segment@u8_Data:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x13
   503  0000E4                     	ds	1
   504  0000E5                     ??_NVM_Write:
   505  0000E5                     ??_ADC_GetVoltageFiltered:
   506  0000E5                     ?_USER_TemperatureFilter:
   507                           	opt stack 0
   508  0000E5                     LCD_GetData@u8_Position:
   509                           	opt stack 0
   510  0000E5                     LCD_Dec2Bcd@ptrBCD:
   511                           	opt stack 0
   512  0000E5                     NVM_Read@u16_Temp:
   513                           	opt stack 0
   514                           
   515                           ; 2 bytes @ 0x14
   516  0000E5                     	ds	1
   517  0000E6                     LCD_SetData@u8_Data:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x15
   521  0000E6                     	ds	1
   522  0000E7                     ??_I2C_Start:
   523  0000E7                     LCD_SetIcons@u8_Icon:
   524                           	opt stack 0
   525  0000E7                     LCD_Clear@u8_Temp:
   526                           	opt stack 0
   527  0000E7                     NVM_Write@u8_Address:
   528                           	opt stack 0
   529  0000E7                     LCD_SetMainDigits@u16_MainData:
   530                           	opt stack 0
   531  0000E7                     LCD_SetPresetDigits@u16_PresetData:
   532                           	opt stack 0
   533  0000E7                     USER_TemperatureFilter@u16_FilterTemporary:
   534                           	opt stack 0
   535  0000E7                     ADC_GetVoltageFiltered@s32_FilterTemporary:
   536                           	opt stack 0
   537                           
   538                           ; 4 bytes @ 0x16
   539  0000E7                     	ds	1
   540  0000E8                     LCD_SetIcons@u8_Temp:
   541                           	opt stack 0
   542                           
   543                           ; 1 bytes @ 0x17
   544  0000E8                     	ds	1
   545  0000E9                     I2C_Start@u8_Address:
   546                           	opt stack 0
   547  0000E9                     LCD_SetMainDigits@bFlag_Number:
   548                           	opt stack 0
   549  0000E9                     LCD_SetPresetDigits@u8_Preset:
   550                           	opt stack 0
   551                           
   552                           ; 1 bytes @ 0x18
   553  0000E9                     	ds	1
   554  0000EA                     ??_LCD_SetMainDigits:
   555  0000EA                     LCD_SetPresetDigits@bFlag_Number:
   556                           	opt stack 0
   557  0000EA                     I2C_Start@u16_Timeout:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x19
   561  0000EA                     	ds	1
   562  0000EB                     ??_LCD_SetPresetDigits:
   563                           
   564                           ; 1 bytes @ 0x1A
   565  0000EB                     	ds	1
   566  0000EC                     ??_LCD_Init:
   567  0000EC                     ??_LCD_Task:
   568                           
   569                           ; 1 bytes @ 0x1B
   570  0000EC                     	ds	1
   571  0000ED                     LCD_Init@u8_Temp:
   572                           	opt stack 0
   573                           
   574                           ; 1 bytes @ 0x1C
   575  0000ED                     	ds	1
   576  0000EE                     postinc0	equ	0xFEE
   577                           wreg	equ	0xFE8
   578                           
   579                           ; 1 bytes @ 0x1D
   580                           
   581                           	psect	cstackCOMRAM
   582  000001                     __pcstackCOMRAM:
   583                           	opt stack 0
   584  000001                     ?___lwdiv:
   585                           	opt stack 0
   586  000001                     ?___lmul:
   587                           	opt stack 0
   588  000001                     ___lwdiv@dividend:
   589                           	opt stack 0
   590  000001                     ___lmul@multiplier:
   591                           	opt stack 0
   592                           
   593                           ; 4 bytes @ 0x0
   594  000001                     	ds	2
   595  000003                     ___lwdiv@divisor:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0x2
   599  000003                     	ds	2
   600  000005                     ___lwdiv@counter:
   601                           	opt stack 0
   602  000005                     ___lmul@multiplicand:
   603                           	opt stack 0
   604                           
   605                           ; 4 bytes @ 0x4
   606  000005                     	ds	1
   607  000006                     ___lwdiv@quotient:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x5
   611  000006                     	ds	2
   612  000008                     ?___lwmod:
   613                           	opt stack 0
   614  000008                     ___lwmod@dividend:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0x7
   618  000008                     	ds	1
   619  000009                     ___lmul@product:
   620                           	opt stack 0
   621                           
   622                           ; 4 bytes @ 0x8
   623  000009                     	ds	1
   624  00000A                     ___lwmod@divisor:
   625                           	opt stack 0
   626                           
   627                           ; 2 bytes @ 0x9
   628  00000A                     	ds	2
   629  00000C                     ___lwmod@counter:
   630                           	opt stack 0
   631                           
   632                           ; 1 bytes @ 0xB
   633  00000C                     	ds	1
   634  00000D                     ?___aldiv:
   635                           	opt stack 0
   636  00000D                     ___aldiv@dividend:
   637                           	opt stack 0
   638                           
   639                           ; 4 bytes @ 0xC
   640  00000D                     	ds	4
   641  000011                     ___aldiv@divisor:
   642                           	opt stack 0
   643                           
   644                           ; 4 bytes @ 0x10
   645  000011                     	ds	4
   646  000015                     ___aldiv@counter:
   647                           	opt stack 0
   648                           
   649                           ; 1 bytes @ 0x14
   650  000015                     	ds	1
   651  000016                     ___aldiv@sign:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0x15
   655  000016                     	ds	1
   656  000017                     ___aldiv@quotient:
   657                           	opt stack 0
   658                           
   659                           ; 4 bytes @ 0x16
   660  000017                     	ds	4
   661  00001B                     ?___lldiv:
   662                           	opt stack 0
   663  00001B                     ___lldiv@dividend:
   664                           	opt stack 0
   665                           
   666                           ; 4 bytes @ 0x1A
   667  00001B                     	ds	4
   668  00001F                     ___lldiv@divisor:
   669                           	opt stack 0
   670                           
   671                           ; 4 bytes @ 0x1E
   672  00001F                     	ds	4
   673  000023                     ___lldiv@quotient:
   674                           	opt stack 0
   675                           
   676                           ; 4 bytes @ 0x22
   677  000023                     	ds	4
   678  000027                     ___lldiv@counter:
   679                           	opt stack 0
   680                           
   681                           ; 1 bytes @ 0x26
   682  000027                     	ds	1
   683                           postinc0	equ	0xFEE
   684                           wreg	equ	0xFE8
   685                           
   686 ;;
   687 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   688 ;;
   689 ;; *************** function _main *****************
   690 ;; Defined at:
   691 ;;		line 25 in file "main.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;  argc            2   14[BANK1 ] int 
   694 ;;  argv            3   16[BANK1 ] PTR PTR unsigned char 
   695 ;; Auto vars:     Size  Location     Type
   696 ;;  u8_TaskCount    1   19[BANK1 ] unsigned char 
   697 ;; Return value:  Size  Location     Type
   698 ;;                  2   14[BANK1 ] int 
   699 ;; Registers used:
   700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   701 ;; Tracked objects:
   702 ;;		On entry : 0/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   706 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   707 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   709 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   710 ;;Total ram usage:        6 bytes
   711 ;; Hardware stack levels required when called:    6
   712 ;; This function calls:
   713 ;;		_ADC_Init
   714 ;;		_ADC_Task
   715 ;;		_BUTTONS_Task
   716 ;;		_GPIO_Init
   717 ;;		_I2C_Init
   718 ;;		_LCD_Init
   719 ;;		_LCD_Task
   720 ;;		_LCD_Update
   721 ;;		_NVM_Init
   722 ;;		_NVM_Task
   723 ;;		_PWM_Task
   724 ;;		_SYSTEM_EnableInterrupts
   725 ;;		_SYSTEM_Init
   726 ;;		_TIMER_GetSysTickFlag
   727 ;;		_TIMER_Init
   728 ;;		_TIMER_ResetSysTickFlag
   729 ;;		_USER_Init
   730 ;;		_USER_Task
   731 ;; This function is called by:
   732 ;;		Startup code after reset
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           	psect	text0
   737  002702                     __ptext0:
   738                           	opt stack 0
   739  002702                     _main:
   740                           	opt stack 25
   741                           
   742                           ;main.c: 29: static volatile uint32_t u32_TimeStamp= 0;
   743                           ;main.c: 31: uint8_t u8_TaskCounter100ms= 0;
   744                           
   745                           ;incstack = 0
   746  002702  0E00               	movlw	0
   747  002704  0101               	movlb	1	; force () banked
   748  002706  6F72               	movwf	main@u8_TaskCounter100ms& (0+255),b
   749                           
   750                           ; BSR set to: 1
   751                           ;main.c: 35: SYSTEM_Init();
   752  002708  EC02  F016         	call	_SYSTEM_Init	;wreg free
   753                           
   754                           ;main.c: 36: GPIO_Init();
   755  00270C  ECCF  F014         	call	_GPIO_Init	;wreg free
   756                           
   757                           ;main.c: 37: TIMER_Init();
   758  002710  ECF8  F015         	call	_TIMER_Init	;wreg free
   759                           
   760                           ;main.c: 38: ADC_Init();
   761  002714  ECD2  F015         	call	_ADC_Init	;wreg free
   762                           
   763                           ;main.c: 39: I2C_Init();
   764  002718  ECC3  F015         	call	_I2C_Init	;wreg free
   765                           
   766                           ;main.c: 40: LCD_Init();
   767  00271C  EC43  F00D         	call	_LCD_Init	;wreg free
   768                           
   769                           ;main.c: 41: NVM_Init();
   770  002720  EC88  F014         	call	_NVM_Init	;wreg free
   771                           
   772                           ;main.c: 43: SYSTEM_EnableInterrupts();
   773  002724  EC39  F016         	call	_SYSTEM_EnableInterrupts	;wreg free
   774                           
   775                           ;main.c: 44: USER_Init();
   776  002728  ECBD  F00E         	call	_USER_Init	;wreg free
   777  00272C                     
   778                           ;main.c: 48: {
   779                           ;main.c: 51: if(TIMER_GetSysTickFlag() == 1)
   780  00272C  EC36  F016         	call	_TIMER_GetSysTickFlag	;wreg free
   781  002730  06E8               	decf	wreg,f,c
   782  002732  A4D8               	btfss	status,2,c
   783  002734  D00A               	goto	l64
   784                           
   785                           ;main.c: 52: {
   786                           ;main.c: 53: TIMER_ResetSysTickFlag();
   787  002736  EC26  F016         	call	_TIMER_ResetSysTickFlag	;wreg free
   788                           
   789                           ;main.c: 54: PWM_Task();
   790  00273A  EC4B  F013         	call	_PWM_Task	;wreg free
   791                           
   792                           ;main.c: 55: BUTTONS_Task();
   793  00273E  ECF6  F009         	call	_BUTTONS_Task	;wreg free
   794                           
   795                           ;main.c: 56: USER_Task();
   796  002742  EC0A  F008         	call	_USER_Task	;wreg free
   797                           
   798                           ;main.c: 58: ++u8_TaskCounter100ms;
   799  002746  0101               	movlb	1	; force () banked
   800  002748  2B72               	incf	main@u8_TaskCounter100ms& (0+255),f,b
   801  00274A                     l64:
   802                           
   803                           ;main.c: 59: }
   804                           ;main.c: 62: if(u8_TaskCounter100ms > ((uint32_t)99-1))
   805                           
   806                           ; BSR set to: 1
   807  00274A  0E62               	movlw	98
   808  00274C  0101               	movlb	1	; force () banked
   809  00274E  6572               	cpfsgt	main@u8_TaskCounter100ms& (0+255),b
   810  002750  D007               	goto	l65
   811                           
   812                           ; BSR set to: 1
   813                           ;main.c: 63: {
   814                           ;main.c: 64: ADC_Task();
   815  002752  EC3A  F00B         	call	_ADC_Task	;wreg free
   816                           
   817                           ;main.c: 69: LCD_Update();
   818  002756  ECED  F015         	call	_LCD_Update	;wreg free
   819                           
   820                           ;main.c: 70: u8_TaskCounter100ms= 0;
   821  00275A  0E00               	movlw	0
   822  00275C  0101               	movlb	1	; force () banked
   823  00275E  6F72               	movwf	main@u8_TaskCounter100ms& (0+255),b
   824  002760                     l65:
   825                           
   826                           ; BSR set to: 1
   827                           ;main.c: 71: }
   828                           ;main.c: 72: LCD_Task();
   829                           
   830                           ; BSR set to: 1
   831  002760  ECA8  F010         	call	_LCD_Task	;wreg free
   832                           
   833                           ;main.c: 73: NVM_Task();
   834  002764  EC0C  F00E         	call	_NVM_Task	;wreg free
   835  002768  D7E1               	goto	l63
   836                           
   837                           ;main.c: 74: }
   838                           ;main.c: 75: return (0);
   839  00276A  0101               	movlb	1	; force () banked
   840  00276C                     __end_of_main:
   841                           	opt stack 0
   842                           postinc0	equ	0xFEE
   843                           wreg	equ	0xFE8
   844                           status	equ	0xFD8
   845                           
   846 ;; *************** function _USER_Task *****************
   847 ;; Defined at:
   848 ;;		line 86 in file "apl/user.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  u16_AdcPT20V    2    3[BANK1 ] volatile unsigned int 
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   865 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   866 ;;Total ram usage:        2 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; Hardware stack levels required when called:    5
   869 ;; This function calls:
   870 ;;		_ADC_GetVoltageMV
   871 ;;		_BUTTONS_GetState
   872 ;;		_LCD_Clear
   873 ;;		_LCD_SetIcons
   874 ;;		_LCD_SetMainDigits
   875 ;;		_LCD_SetPresetDigits
   876 ;;		_NVM_Read
   877 ;;		_NVM_Write
   878 ;;		_PWM_SetDutyCycle
   879 ;;		_USER_DecrementSetpoint
   880 ;;		_USER_FastDecrementSetpoint
   881 ;;		_USER_FastIncrementSetpoint
   882 ;;		_USER_IncrementSetpoint
   883 ;;		_USER_TemperatureFilter
   884 ;; This function is called by:
   885 ;;		_main
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text1
   890  001014                     __ptext1:
   891                           	opt stack 0
   892  001014                     _USER_Task:
   893                           	opt stack 25
   894                           
   895                           ;user.c: 88: static uint8_t u8_ErroState= 0;
   896                           ;user.c: 89: static uint16_t u16_TemporarySetpoint= 0;
   897                           ;user.c: 90: static uint16_t u16_TemporaryCurrentTemperature= 0;
   898                           ;user.c: 92: static uint16_t u16_TemporarySaveSetpoint= 0;
   899                           ;user.c: 93: static uint16_t u16_SaveCurrentSettingCounter= 0;
   900                           ;user.c: 95: static uint16_t u16_ShowCurrentSettingCounter= 0;
   901                           ;user.c: 96: static uint8_t u8_DisplayChangeCounter= 0;
   902                           ;user.c: 98: volatile static uint32_t u32_WatchdogCounter= 0;
   903                           ;user.c: 99: static bool bFlag_AutoOff= 0;
   904                           ;user.c: 101: volatile uint16_t u16_AdcPT20Voltage= 0;
   905                           
   906                           ; BSR set to: 1
   907                           ;incstack = 0
   908  001014  0E00               	movlw	0
   909  001016  0101               	movlb	1	; force () banked
   910  001018  6F63               	movwf	(USER_Task@u16_AdcPT20Voltage+1)& (0+255),b	;volatile
   911  00101A  0E00               	movlw	0
   912  00101C  6F62               	movwf	USER_Task@u16_AdcPT20Voltage& (0+255),b	;volatile
   913                           
   914                           ;user.c: 103: if(bFlag_AutoOff == 0)
   915  00101E  0100               	movlb	0	; force () banked
   916  001020  51C0               	movf	USER_Task@bFlag_AutoOff& (0+255),w,b
   917  001022  A4D8               	btfss	status,2,c
   918  001024  D159               	goto	l651
   919                           
   920                           ; BSR set to: 0
   921                           ;user.c: 104: {
   922                           ;user.c: 107: u16_AdcPT20Voltage= ADC_GetVoltageMV();
   923  001026  EC21  F016         	call	_ADC_GetVoltageMV	;wreg free
   924  00102A  C0E3  F162         	movff	?_ADC_GetVoltageMV,USER_Task@u16_AdcPT20Voltage	;volatile
   925  00102E  C0E4  F163         	movff	?_ADC_GetVoltageMV+1,USER_Task@u16_AdcPT20Voltage+1	;volatile
   926                           
   927                           ;user.c: 109: if(u16_AdcPT20Voltage > (uint16_t)4850)
   928  001032  0EF3               	movlw	243
   929  001034  0101               	movlb	1	; force () banked
   930  001036  5D62               	subwf	USER_Task@u16_AdcPT20Voltage& (0+255),w,b	;volatile
   931  001038  0E12               	movlw	18
   932  00103A  5963               	subwfb	(USER_Task@u16_AdcPT20Voltage+1)& (0+255),w,b	;volatile
   933  00103C  B0D8               	btfsc	status,0,c
   934  00103E  D00E               	goto	l624
   935                           
   936                           ; BSR set to: 1
   937                           ;user.c: 113: else if(u16_AdcPT20Voltage < (uint16_t)1000)
   938                           
   939                           ; BSR set to: 1
   940                           
   941                           ; BSR set to: 1
   942                           ;user.c: 112: }
   943  001040  0EE8               	movlw	232
   944  001042  0101               	movlb	1	; force () banked
   945  001044  5D62               	subwf	USER_Task@u16_AdcPT20Voltage& (0+255),w,b	;volatile
   946  001046  0E03               	movlw	3
   947  001048  5963               	subwfb	(USER_Task@u16_AdcPT20Voltage+1)& (0+255),w,b	;volatile
   948  00104A  A0D8               	btfss	status,0,c
   949  00104C  D007               	goto	l624
   950                           
   951                           ; BSR set to: 1
   952                           ;user.c: 120: {
   953                           ;user.c: 121: u8_ErroState&= ~0;
   954                           
   955                           ; BSR set to: 1
   956                           ;user.c: 114: {
   957                           ;user.c: 115: ;
   958                           ;user.c: 116: }
   959  00104E  0100               	movlb	0	; force () banked
   960  001050  A1C2               	btfss	USER_Task@u8_ErroState& (0+255),0,b
   961  001052  D004               	goto	l624
   962                           
   963                           ; BSR set to: 0
   964                           ;user.c: 122: t_Temperatures.SetpointTemperature= u16_TemporarySetpoint;
   965  001054  C0A5  F082         	movff	USER_Task@u16_TemporarySetpoint,_t_Temperatures+2
   966  001058  C0A6  F083         	movff	USER_Task@u16_TemporarySetpoint+1,_t_Temperatures+3
   967  00105C                     l624:
   968                           
   969                           ;user.c: 123: }
   970                           ;user.c: 124: }
   971                           ;user.c: 126: if(!u8_ErroState)
   972                           
   973                           ; BSR set to: 0
   974                           
   975                           ; BSR set to: 0
   976                           
   977                           ; BSR set to: 0
   978  00105C  0100               	movlb	0	; force () banked
   979  00105E  51C2               	movf	USER_Task@u8_ErroState& (0+255),w,b
   980  001060  A4D8               	btfss	status,2,c
   981  001062  D059               	goto	l625
   982                           
   983                           ; BSR set to: 0
   984                           ;user.c: 127: {
   985                           ;user.c: 128: if(t_Temperatures.SetpointTemperature != u16_TemporarySetpoint)
   986  001064  0100               	movlb	0	; force () banked
   987  001066  51A5               	movf	USER_Task@u16_TemporarySetpoint& (0+255),w,b
   988  001068  0100               	movlb	0	; force () banked
   989  00106A  1982               	xorwf	(_t_Temperatures+2)& (0+255),w,b
   990  00106C  E106               	bnz	u5280
   991  00106E  0100               	movlb	0	; force () banked
   992  001070  51A6               	movf	(USER_Task@u16_TemporarySetpoint+1)& (0+255),w,b
   993  001072  0100               	movlb	0	; force () banked
   994  001074  1983               	xorwf	(_t_Temperatures+3)& (0+255),w,b
   995  001076  B4D8               	btfsc	status,2,c
   996  001078  D022               	goto	l626
   997  00107A                     u5280:
   998                           
   999                           ; BSR set to: 0
  1000                           ;user.c: 129: {
  1001                           ;user.c: 130: if(t_Temperatures.SetpointTemperature > 450 )
  1002  00107A  0EC3               	movlw	195
  1003  00107C  0100               	movlb	0	; force () banked
  1004  00107E  5D82               	subwf	(_t_Temperatures+2)& (0+255),w,b
  1005  001080  0E01               	movlw	1
  1006  001082  5983               	subwfb	(_t_Temperatures+3)& (0+255),w,b
  1007  001084  A0D8               	btfss	status,0,c
  1008  001086  D005               	goto	l627
  1009                           
  1010                           ; BSR set to: 0
  1011                           ;user.c: 131: {
  1012                           ;user.c: 132: t_Temperatures.SetpointTemperature= 450;
  1013  001088  0E01               	movlw	1
  1014  00108A  0100               	movlb	0	; force () banked
  1015  00108C  6F83               	movwf	(_t_Temperatures+3)& (0+255),b
  1016  00108E  0EC2               	movlw	194
  1017  001090  6F82               	movwf	(_t_Temperatures+2)& (0+255),b
  1018  001092                     l627:
  1019                           
  1020                           ; BSR set to: 0
  1021                           ;user.c: 133: }
  1022                           ;user.c: 135: LCD_SetMainDigits(t_Temperatures.SetpointTemperature, 1);
  1023                           
  1024                           ; BSR set to: 0
  1025  001092  C082  F0E7         	movff	_t_Temperatures+2,LCD_SetMainDigits@u16_MainData
  1026  001096  C083  F0E8         	movff	_t_Temperatures+3,LCD_SetMainDigits@u16_MainData+1
  1027  00109A  0E01               	movlw	1
  1028  00109C  0100               	movlb	0	; force () banked
  1029  00109E  6FE9               	movwf	LCD_SetMainDigits@bFlag_Number& (0+255),b
  1030  0010A0  EC09  F010         	call	_LCD_SetMainDigits	;wreg free
  1031                           
  1032                           ;user.c: 136: LCD_SetIcons(0);
  1033  0010A4  0E00               	movlw	0
  1034  0010A6  EC0E  F015         	call	_LCD_SetIcons
  1035                           
  1036                           ;user.c: 137: u16_TemporarySetpoint= t_Temperatures.SetpointTemperature;
  1037  0010AA  C082  F0A5         	movff	_t_Temperatures+2,USER_Task@u16_TemporarySetpoint
  1038  0010AE  C083  F0A6         	movff	_t_Temperatures+3,USER_Task@u16_TemporarySetpoint+1
  1039                           
  1040                           ;user.c: 138: u16_ShowCurrentSettingCounter= 0;
  1041  0010B2  0E00               	movlw	0
  1042  0010B4  0100               	movlb	0	; force () banked
  1043  0010B6  6F9E               	movwf	(USER_Task@u16_ShowCurrentSettingCounter+1)& (0+255),b
  1044  0010B8  0E00               	movlw	0
  1045  0010BA  6F9D               	movwf	USER_Task@u16_ShowCurrentSettingCounter& (0+255),b
  1046                           
  1047                           ;user.c: 139: }
  1048  0010BC  D05C               	goto	l636
  1049  0010BE                     l626:
  1050                           
  1051                           ; BSR set to: 0
  1052                           ;user.c: 140: else
  1053                           ;user.c: 141: {
  1054                           ;user.c: 142: if(u16_ShowCurrentSettingCounter < 2000)
  1055                           
  1056                           ; BSR set to: 0
  1057  0010BE  0ED0               	movlw	208
  1058  0010C0  0100               	movlb	0	; force () banked
  1059  0010C2  5D9D               	subwf	USER_Task@u16_ShowCurrentSettingCounter& (0+255),w,b
  1060  0010C4  0E07               	movlw	7
  1061  0010C6  599E               	subwfb	(USER_Task@u16_ShowCurrentSettingCounter+1)& (0+255),w,b
  1062  0010C8  B0D8               	btfsc	status,0,c
  1063  0010CA  D004               	goto	l629
  1064                           
  1065                           ; BSR set to: 0
  1066                           ;user.c: 143: {
  1067                           ;user.c: 144: ++u16_ShowCurrentSettingCounter;
  1068  0010CC  0100               	movlb	0	; force () banked
  1069  0010CE  4B9D               	infsnz	USER_Task@u16_ShowCurrentSettingCounter& (0+255),f,b
  1070  0010D0  2B9E               	incf	(USER_Task@u16_ShowCurrentSettingCounter+1)& (0+255),f,b
  1071                           
  1072                           ;user.c: 145: }
  1073  0010D2  D051               	goto	l636
  1074  0010D4                     l629:
  1075                           
  1076                           ; BSR set to: 0
  1077                           ;user.c: 146: else
  1078                           ;user.c: 147: {
  1079                           ;user.c: 148: if(u8_DisplayChangeCounter > 250)
  1080                           
  1081                           ; BSR set to: 0
  1082  0010D4  0EFA               	movlw	250
  1083  0010D6  0100               	movlb	0	; force () banked
  1084  0010D8  65C1               	cpfsgt	USER_Task@u8_DisplayChangeCounter& (0+255),b
  1085  0010DA  D01A               	goto	l631
  1086                           
  1087                           ; BSR set to: 0
  1088                           ;user.c: 149: {
  1089                           ;user.c: 150: t_Temperatures.CurrentTemperature= USER_TemperatureFilter();
  1090  0010DC  EC0E  F013         	call	_USER_TemperatureFilter	;wreg free
  1091  0010E0  C0E5  F080         	movff	?_USER_TemperatureFilter,_t_Temperatures
  1092  0010E4  C0E6  F081         	movff	?_USER_TemperatureFilter+1,_t_Temperatures+1
  1093                           
  1094                           ;user.c: 151: LCD_SetMainDigits(t_Temperatures.CurrentTemperature,1);
  1095  0010E8  C080  F0E7         	movff	_t_Temperatures,LCD_SetMainDigits@u16_MainData
  1096  0010EC  C081  F0E8         	movff	_t_Temperatures+1,LCD_SetMainDigits@u16_MainData+1
  1097  0010F0  0E01               	movlw	1
  1098  0010F2  0100               	movlb	0	; force () banked
  1099  0010F4  6FE9               	movwf	LCD_SetMainDigits@bFlag_Number& (0+255),b
  1100  0010F6  EC09  F010         	call	_LCD_SetMainDigits	;wreg free
  1101                           
  1102                           ;user.c: 152: LCD_SetIcons(0);
  1103  0010FA  0E00               	movlw	0
  1104  0010FC  EC0E  F015         	call	_LCD_SetIcons
  1105                           
  1106                           ;user.c: 154: u16_TemporaryCurrentTemperature= t_Temperatures.CurrentTemperature;
  1107  001100  C080  F0A3         	movff	_t_Temperatures,USER_Task@u16_TemporaryCurrentTemperature
  1108  001104  C081  F0A4         	movff	_t_Temperatures+1,USER_Task@u16_TemporaryCurrentTemperature+1
  1109                           
  1110                           ;user.c: 155: u8_DisplayChangeCounter= 0;
  1111  001108  0E00               	movlw	0
  1112  00110A  0100               	movlb	0	; force () banked
  1113  00110C  6FC1               	movwf	USER_Task@u8_DisplayChangeCounter& (0+255),b
  1114                           
  1115                           ;user.c: 156: }
  1116  00110E  D033               	goto	l636
  1117  001110                     l631:
  1118                           
  1119                           ; BSR set to: 0
  1120                           ;user.c: 157: else
  1121                           ;user.c: 158: {
  1122                           ;user.c: 159: ++u8_DisplayChangeCounter;
  1123                           
  1124                           ; BSR set to: 0
  1125  001110  0100               	movlb	0	; force () banked
  1126  001112  2BC1               	incf	USER_Task@u8_DisplayChangeCounter& (0+255),f,b
  1127                           
  1128                           ; BSR set to: 0
  1129                           ;user.c: 160: }
  1130                           ;user.c: 161: }
  1131                           ;user.c: 162: }
  1132                           ;user.c: 163: }
  1133                           
  1134                           ; BSR set to: 0
  1135                           
  1136                           ; BSR set to: 0
  1137  001114  D030               	goto	l636
  1138  001116                     l625:
  1139                           
  1140                           ; BSR set to: 0
  1141                           ;user.c: 164: else
  1142                           ;user.c: 165: {
  1143                           ;user.c: 166: if(u8_ErroState & (1<< 0))
  1144  001116  0100               	movlb	0	; force () banked
  1145  001118  A1C2               	btfss	USER_Task@u8_ErroState& (0+255),0,b
  1146  00111A  D014               	goto	l634
  1147                           
  1148                           ; BSR set to: 0
  1149                           ;user.c: 167: {
  1150                           ;user.c: 168: u16_TemporarySetpoint= t_Temperatures.SetpointTemperature;
  1151  00111C  C082  F0A5         	movff	_t_Temperatures+2,USER_Task@u16_TemporarySetpoint
  1152  001120  C083  F0A6         	movff	_t_Temperatures+3,USER_Task@u16_TemporarySetpoint+1
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;user.c: 169: t_Temperatures.SetpointTemperature= 0;
  1156  001124  0E00               	movlw	0
  1157  001126  0100               	movlb	0	; force () banked
  1158  001128  6F83               	movwf	(_t_Temperatures+3)& (0+255),b
  1159  00112A  0E00               	movlw	0
  1160  00112C  6F82               	movwf	(_t_Temperatures+2)& (0+255),b
  1161                           
  1162                           ; BSR set to: 0
  1163                           ;user.c: 170: LCD_SetMainDigits(4,0);
  1164  00112E  0E00               	movlw	0
  1165  001130  0100               	movlb	0	; force () banked
  1166  001132  6FE8               	movwf	(LCD_SetMainDigits@u16_MainData+1)& (0+255),b
  1167  001134  0E04               	movlw	4
  1168  001136  6FE7               	movwf	LCD_SetMainDigits@u16_MainData& (0+255),b
  1169  001138  0E00               	movlw	0
  1170  00113A  0100               	movlb	0	; force () banked
  1171  00113C  6FE9               	movwf	LCD_SetMainDigits@bFlag_Number& (0+255),b
  1172  00113E  EC09  F010         	call	_LCD_SetMainDigits	;wreg free
  1173                           
  1174                           ;user.c: 171: }
  1175  001142  D019               	goto	l636
  1176  001144                     l634:
  1177                           
  1178                           ; BSR set to: 0
  1179                           ;user.c: 172: else if(u8_ErroState & (1<< 1))
  1180  001144  0100               	movlb	0	; force () banked
  1181  001146  A3C2               	btfss	USER_Task@u8_ErroState& (0+255),1,b
  1182  001148  D016               	goto	l636
  1183                           
  1184                           ; BSR set to: 0
  1185                           ;user.c: 173: {
  1186                           ;user.c: 174: t_Temperatures.SetpointTemperature= 0;
  1187  00114A  0E00               	movlw	0
  1188  00114C  0100               	movlb	0	; force () banked
  1189  00114E  6F83               	movwf	(_t_Temperatures+3)& (0+255),b
  1190  001150  0E00               	movlw	0
  1191  001152  6F82               	movwf	(_t_Temperatures+2)& (0+255),b
  1192                           
  1193                           ; BSR set to: 0
  1194                           ;user.c: 175: PWM_SetDutyCycle(0);
  1195  001154  0E00               	movlw	0
  1196  001156  0100               	movlb	0	; force () banked
  1197  001158  6FE4               	movwf	(PWM_SetDutyCycle@u16_DutyCycle+1)& (0+255),b
  1198  00115A  0E00               	movlw	0
  1199  00115C  6FE3               	movwf	PWM_SetDutyCycle@u16_DutyCycle& (0+255),b
  1200  00115E  ECB4  F015         	call	_PWM_SetDutyCycle	;wreg free
  1201                           
  1202                           ;user.c: 176: LCD_SetMainDigits(5,0);
  1203  001162  0E00               	movlw	0
  1204  001164  0100               	movlb	0	; force () banked
  1205  001166  6FE8               	movwf	(LCD_SetMainDigits@u16_MainData+1)& (0+255),b
  1206  001168  0E05               	movlw	5
  1207  00116A  6FE7               	movwf	LCD_SetMainDigits@u16_MainData& (0+255),b
  1208  00116C  0E00               	movlw	0
  1209  00116E  0100               	movlb	0	; force () banked
  1210  001170  6FE9               	movwf	LCD_SetMainDigits@bFlag_Number& (0+255),b
  1211  001172  EC09  F010         	call	_LCD_SetMainDigits	;wreg free
  1212  001176                     l636:
  1213                           
  1214                           ;user.c: 177: }
  1215                           ;user.c: 178: }
  1216                           ;user.c: 181: BUTTONS_GetState(&t_Buttons);
  1217  001176  0ECC               	movlw	low _t_Buttons
  1218  001178  0100               	movlb	0	; force () banked
  1219  00117A  6FE3               	movwf	BUTTONS_GetState@t_Buttons& (0+255),b
  1220  00117C  0E00               	movlw	high _t_Buttons
  1221  00117E  6FE4               	movwf	(BUTTONS_GetState@t_Buttons+1)& (0+255),b
  1222  001180  ECB6  F013         	call	_BUTTONS_GetState	;wreg free
  1223                           
  1224                           ;user.c: 190: if(t_Buttons.Up == 1)
  1225  001184  0100               	movlb	0	; force () banked
  1226  001186  05CC               	decf	_t_Buttons& (0+255),w,b
  1227  001188  A4D8               	btfss	status,2,c
  1228  00118A  D003               	goto	l637
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;user.c: 191: {
  1232                           ;user.c: 192: USER_IncrementSetpoint();
  1233  00118C  EC94  F015         	call	_USER_IncrementSetpoint	;wreg free
  1234                           
  1235                           ;user.c: 193: }
  1236  001190  D006               	goto	l639
  1237  001192                     l637:
  1238                           
  1239                           ;user.c: 194: else if(t_Buttons.Up == 2)
  1240  001192  0E02               	movlw	2
  1241  001194  0100               	movlb	0	; force () banked
  1242  001196  19CC               	xorwf	_t_Buttons& (0+255),w,b
  1243  001198  B4D8               	btfsc	status,2,c
  1244                           
  1245                           ; BSR set to: 0
  1246                           ;user.c: 195: {
  1247                           ;user.c: 196: USER_FastIncrementSetpoint();
  1248  00119A  EC2B  F015         	call	_USER_FastIncrementSetpoint	;wreg free
  1249  00119E                     l639:
  1250                           
  1251                           ;user.c: 197: }
  1252                           ;user.c: 200: if(t_Buttons.Down == 1)
  1253  00119E  0100               	movlb	0	; force () banked
  1254  0011A0  05CD               	decf	(_t_Buttons+1)& (0+255),w,b
  1255  0011A2  A4D8               	btfss	status,2,c
  1256  0011A4  D003               	goto	l640
  1257                           
  1258                           ; BSR set to: 0
  1259                           ;user.c: 201: {
  1260                           ;user.c: 202: USER_DecrementSetpoint();
  1261  0011A6  ECE1  F015         	call	_USER_DecrementSetpoint	;wreg free
  1262                           
  1263                           ;user.c: 203: }
  1264  0011AA  D006               	goto	l642
  1265  0011AC                     l640:
  1266                           
  1267                           ;user.c: 204: else if(t_Buttons.Down == 2)
  1268  0011AC  0E02               	movlw	2
  1269  0011AE  0100               	movlb	0	; force () banked
  1270  0011B0  19CD               	xorwf	(_t_Buttons+1)& (0+255),w,b
  1271  0011B2  B4D8               	btfsc	status,2,c
  1272                           
  1273                           ; BSR set to: 0
  1274                           ;user.c: 205: {
  1275                           ;user.c: 206: USER_FastDecrementSetpoint();
  1276  0011B4  EC5D  F015         	call	_USER_FastDecrementSetpoint	;wreg free
  1277  0011B8                     l642:
  1278                           
  1279                           ;user.c: 207: }
  1280                           ;user.c: 211: if(t_Buttons.Temp1 == 1)
  1281  0011B8  0100               	movlb	0	; force () banked
  1282  0011BA  05CE               	decf	(_t_Buttons+2)& (0+255),w,b
  1283  0011BC  A4D8               	btfss	status,2,c
  1284  0011BE  D010               	goto	l643
  1285                           
  1286                           ; BSR set to: 0
  1287                           ;user.c: 212: {
  1288                           ;user.c: 213: t_Temperatures.PresetTemperature1= NVM_Read(0x0002);
  1289  0011C0  0E00               	movlw	0
  1290  0011C2  0100               	movlb	0	; force () banked
  1291  0011C4  6FE4               	movwf	(NVM_Read@u16_Address+1)& (0+255),b
  1292  0011C6  0E02               	movlw	2
  1293  0011C8  6FE3               	movwf	NVM_Read@u16_Address& (0+255),b
  1294  0011CA  EC0C  F014         	call	_NVM_Read	;wreg free
  1295  0011CE  C0E3  F084         	movff	?_NVM_Read,_t_Temperatures+4
  1296  0011D2  C0E4  F085         	movff	?_NVM_Read+1,_t_Temperatures+5
  1297                           
  1298                           ;user.c: 214: t_Temperatures.SetpointTemperature= t_Temperatures.PresetTemperature1;
  1299  0011D6  C084  F082         	movff	_t_Temperatures+4,_t_Temperatures+2
  1300  0011DA  C085  F083         	movff	_t_Temperatures+5,_t_Temperatures+3
  1301                           
  1302                           ;user.c: 215: }
  1303  0011DE  D01C               	goto	l645
  1304  0011E0                     l643:
  1305                           
  1306                           ;user.c: 216: else if(t_Buttons.Temp1 == 2)
  1307  0011E0  0E02               	movlw	2
  1308  0011E2  0100               	movlb	0	; force () banked
  1309  0011E4  19CE               	xorwf	(_t_Buttons+2)& (0+255),w,b
  1310  0011E6  A4D8               	btfss	status,2,c
  1311  0011E8  D017               	goto	l645
  1312                           
  1313                           ; BSR set to: 0
  1314                           ;user.c: 217: {
  1315                           ;user.c: 218: t_Temperatures.PresetTemperature1= t_Temperatures.SetpointTemperature;
  1316  0011EA  C082  F084         	movff	_t_Temperatures+2,_t_Temperatures+4
  1317  0011EE  C083  F085         	movff	_t_Temperatures+3,_t_Temperatures+5
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;user.c: 219: LCD_SetPresetDigits(t_Temperatures.PresetTemperature1,3, 1);
  1321  0011F2  C084  F0E7         	movff	_t_Temperatures+4,LCD_SetPresetDigits@u16_PresetData
  1322  0011F6  C085  F0E8         	movff	_t_Temperatures+5,LCD_SetPresetDigits@u16_PresetData+1
  1323  0011FA  0E03               	movlw	3
  1324  0011FC  0100               	movlb	0	; force () banked
  1325  0011FE  6FE9               	movwf	LCD_SetPresetDigits@u8_Preset& (0+255),b
  1326  001200  0E01               	movlw	1
  1327  001202  0100               	movlb	0	; force () banked
  1328  001204  6FEA               	movwf	LCD_SetPresetDigits@bFlag_Number& (0+255),b
  1329  001206  EC48  F00C         	call	_LCD_SetPresetDigits	;wreg free
  1330                           
  1331                           ;user.c: 220: NVM_Write(1, t_Temperatures.PresetTemperature1);
  1332  00120A  C084  F0E3         	movff	_t_Temperatures+4,NVM_Write@u16_Data
  1333  00120E  C085  F0E4         	movff	_t_Temperatures+5,NVM_Write@u16_Data+1
  1334  001212  0E01               	movlw	1
  1335  001214  ECEF  F014         	call	_NVM_Write
  1336  001218                     l645:
  1337                           
  1338                           ;user.c: 221: }
  1339                           ;user.c: 223: if(t_Buttons.Temp2 == 1)
  1340  001218  0100               	movlb	0	; force () banked
  1341  00121A  05CF               	decf	(_t_Buttons+3)& (0+255),w,b
  1342  00121C  A4D8               	btfss	status,2,c
  1343  00121E  D010               	goto	l646
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;user.c: 224: {
  1347                           ;user.c: 225: t_Temperatures.PresetTemperature2= NVM_Read(0x0004);
  1348  001220  0E00               	movlw	0
  1349  001222  0100               	movlb	0	; force () banked
  1350  001224  6FE4               	movwf	(NVM_Read@u16_Address+1)& (0+255),b
  1351  001226  0E04               	movlw	4
  1352  001228  6FE3               	movwf	NVM_Read@u16_Address& (0+255),b
  1353  00122A  EC0C  F014         	call	_NVM_Read	;wreg free
  1354  00122E  C0E3  F086         	movff	?_NVM_Read,_t_Temperatures+6
  1355  001232  C0E4  F087         	movff	?_NVM_Read+1,_t_Temperatures+7
  1356                           
  1357                           ;user.c: 226: t_Temperatures.SetpointTemperature= t_Temperatures.PresetTemperature2;
  1358  001236  C086  F082         	movff	_t_Temperatures+6,_t_Temperatures+2
  1359  00123A  C087  F083         	movff	_t_Temperatures+7,_t_Temperatures+3
  1360                           
  1361                           ;user.c: 227: }
  1362  00123E  D01C               	goto	l648
  1363  001240                     l646:
  1364                           
  1365                           ;user.c: 228: else if(t_Buttons.Temp2 == 2)
  1366  001240  0E02               	movlw	2
  1367  001242  0100               	movlb	0	; force () banked
  1368  001244  19CF               	xorwf	(_t_Buttons+3)& (0+255),w,b
  1369  001246  A4D8               	btfss	status,2,c
  1370  001248  D017               	goto	l648
  1371                           
  1372                           ; BSR set to: 0
  1373                           ;user.c: 229: {
  1374                           ;user.c: 230: t_Temperatures.PresetTemperature2= t_Temperatures.SetpointTemperature;
  1375  00124A  C082  F086         	movff	_t_Temperatures+2,_t_Temperatures+6
  1376  00124E  C083  F087         	movff	_t_Temperatures+3,_t_Temperatures+7
  1377                           
  1378                           ; BSR set to: 0
  1379                           ;user.c: 231: LCD_SetPresetDigits(t_Temperatures.PresetTemperature2,6, 1);
  1380  001252  C086  F0E7         	movff	_t_Temperatures+6,LCD_SetPresetDigits@u16_PresetData
  1381  001256  C087  F0E8         	movff	_t_Temperatures+7,LCD_SetPresetDigits@u16_PresetData+1
  1382  00125A  0E06               	movlw	6
  1383  00125C  0100               	movlb	0	; force () banked
  1384  00125E  6FE9               	movwf	LCD_SetPresetDigits@u8_Preset& (0+255),b
  1385  001260  0E01               	movlw	1
  1386  001262  0100               	movlb	0	; force () banked
  1387  001264  6FEA               	movwf	LCD_SetPresetDigits@bFlag_Number& (0+255),b
  1388  001266  EC48  F00C         	call	_LCD_SetPresetDigits	;wreg free
  1389                           
  1390                           ;user.c: 232: NVM_Write(2, t_Temperatures.PresetTemperature2);
  1391  00126A  C086  F0E3         	movff	_t_Temperatures+6,NVM_Write@u16_Data
  1392  00126E  C087  F0E4         	movff	_t_Temperatures+7,NVM_Write@u16_Data+1
  1393  001272  0E02               	movlw	2
  1394  001274  ECEF  F014         	call	_NVM_Write
  1395  001278                     l648:
  1396                           
  1397                           ;user.c: 233: }
  1398                           ;user.c: 235: if(t_Buttons.Temp3 == 1)
  1399  001278  0100               	movlb	0	; force () banked
  1400  00127A  05D0               	decf	(_t_Buttons+4)& (0+255),w,b
  1401  00127C  A4D8               	btfss	status,2,c
  1402  00127E  D010               	goto	l649
  1403                           
  1404                           ; BSR set to: 0
  1405                           ;user.c: 236: {
  1406                           ;user.c: 237: t_Temperatures.PresetTemperature3= NVM_Read(0x0006);
  1407  001280  0E00               	movlw	0
  1408  001282  0100               	movlb	0	; force () banked
  1409  001284  6FE4               	movwf	(NVM_Read@u16_Address+1)& (0+255),b
  1410  001286  0E06               	movlw	6
  1411  001288  6FE3               	movwf	NVM_Read@u16_Address& (0+255),b
  1412  00128A  EC0C  F014         	call	_NVM_Read	;wreg free
  1413  00128E  C0E3  F088         	movff	?_NVM_Read,_t_Temperatures+8
  1414  001292  C0E4  F089         	movff	?_NVM_Read+1,_t_Temperatures+9
  1415                           
  1416                           ;user.c: 238: t_Temperatures.SetpointTemperature= t_Temperatures.PresetTemperature3;
  1417  001296  C088  F082         	movff	_t_Temperatures+8,_t_Temperatures+2
  1418  00129A  C089  F083         	movff	_t_Temperatures+9,_t_Temperatures+3
  1419                           
  1420                           ;user.c: 239: }
  1421  00129E  D01C               	goto	l651
  1422  0012A0                     l649:
  1423                           
  1424                           ;user.c: 240: else if(t_Buttons.Temp3 == 2)
  1425  0012A0  0E02               	movlw	2
  1426  0012A2  0100               	movlb	0	; force () banked
  1427  0012A4  19D0               	xorwf	(_t_Buttons+4)& (0+255),w,b
  1428  0012A6  A4D8               	btfss	status,2,c
  1429  0012A8  D017               	goto	l651
  1430                           
  1431                           ; BSR set to: 0
  1432                           ;user.c: 241: {
  1433                           ;user.c: 242: t_Temperatures.PresetTemperature3= t_Temperatures.SetpointTemperature;
  1434  0012AA  C082  F088         	movff	_t_Temperatures+2,_t_Temperatures+8
  1435  0012AE  C083  F089         	movff	_t_Temperatures+3,_t_Temperatures+9
  1436                           
  1437                           ; BSR set to: 0
  1438                           ;user.c: 243: LCD_SetPresetDigits(t_Temperatures.PresetTemperature3,9, 1);
  1439  0012B2  C088  F0E7         	movff	_t_Temperatures+8,LCD_SetPresetDigits@u16_PresetData
  1440  0012B6  C089  F0E8         	movff	_t_Temperatures+9,LCD_SetPresetDigits@u16_PresetData+1
  1441  0012BA  0E09               	movlw	9
  1442  0012BC  0100               	movlb	0	; force () banked
  1443  0012BE  6FE9               	movwf	LCD_SetPresetDigits@u8_Preset& (0+255),b
  1444  0012C0  0E01               	movlw	1
  1445  0012C2  0100               	movlb	0	; force () banked
  1446  0012C4  6FEA               	movwf	LCD_SetPresetDigits@bFlag_Number& (0+255),b
  1447  0012C6  EC48  F00C         	call	_LCD_SetPresetDigits	;wreg free
  1448                           
  1449                           ;user.c: 244: NVM_Write(3, t_Temperatures.PresetTemperature3);
  1450  0012CA  C088  F0E3         	movff	_t_Temperatures+8,NVM_Write@u16_Data
  1451  0012CE  C089  F0E4         	movff	_t_Temperatures+9,NVM_Write@u16_Data+1
  1452  0012D2  0E03               	movlw	3
  1453  0012D4  ECEF  F014         	call	_NVM_Write
  1454  0012D8                     l651:
  1455                           
  1456                           ;user.c: 245: }
  1457                           ;user.c: 246: }
  1458                           ;user.c: 250: if(u16_SaveCurrentSettingCounter > 20000)
  1459  0012D8  0E21               	movlw	33
  1460  0012DA  0100               	movlb	0	; force () banked
  1461  0012DC  5D9F               	subwf	USER_Task@u16_SaveCurrentSettingCounter& (0+255),w,b
  1462  0012DE  0E4E               	movlw	78
  1463  0012E0  59A0               	subwfb	(USER_Task@u16_SaveCurrentSettingCounter+1)& (0+255),w,b
  1464  0012E2  A0D8               	btfss	status,0,c
  1465  0012E4  D00D               	goto	l652
  1466                           
  1467                           ; BSR set to: 0
  1468                           ;user.c: 251: {
  1469                           ;user.c: 252: u16_SaveCurrentSettingCounter= 0;
  1470  0012E6  0E00               	movlw	0
  1471  0012E8  0100               	movlb	0	; force () banked
  1472  0012EA  6FA0               	movwf	(USER_Task@u16_SaveCurrentSettingCounter+1)& (0+255),b
  1473  0012EC  0E00               	movlw	0
  1474  0012EE  6F9F               	movwf	USER_Task@u16_SaveCurrentSettingCounter& (0+255),b
  1475                           
  1476                           ; BSR set to: 0
  1477                           ;user.c: 253: NVM_Write(0x000E, t_Temperatures.SetpointTemperature);
  1478  0012F0  C082  F0E3         	movff	_t_Temperatures+2,NVM_Write@u16_Data
  1479  0012F4  C083  F0E4         	movff	_t_Temperatures+3,NVM_Write@u16_Data+1
  1480  0012F8  0E0E               	movlw	14
  1481  0012FA  ECEF  F014         	call	_NVM_Write
  1482                           
  1483                           ;user.c: 254: }
  1484  0012FE  D014               	goto	l655
  1485  001300                     l652:
  1486                           
  1487                           ;user.c: 255: else
  1488                           ;user.c: 256: {
  1489                           ;user.c: 257: if(u16_TemporarySaveSetpoint == t_Temperatures.SetpointTemperature)
  1490  001300  0100               	movlb	0	; force () banked
  1491  001302  51A1               	movf	USER_Task@u16_TemporarySaveSetpoint& (0+255),w,b
  1492  001304  0100               	movlb	0	; force () banked
  1493  001306  1982               	xorwf	(_t_Temperatures+2)& (0+255),w,b
  1494  001308  E10A               	bnz	l5374
  1495  00130A  0100               	movlb	0	; force () banked
  1496  00130C  51A2               	movf	(USER_Task@u16_TemporarySaveSetpoint+1)& (0+255),w,b
  1497  00130E  0100               	movlb	0	; force () banked
  1498  001310  1983               	xorwf	(_t_Temperatures+3)& (0+255),w,b
  1499  001312  A4D8               	btfss	status,2,c
  1500  001314  D004               	goto	l654
  1501                           
  1502                           ; BSR set to: 0
  1503                           ;user.c: 258: {
  1504                           ;user.c: 259: ++u16_SaveCurrentSettingCounter;
  1505  001316  0100               	movlb	0	; force () banked
  1506  001318  4B9F               	infsnz	USER_Task@u16_SaveCurrentSettingCounter& (0+255),f,b
  1507  00131A  2BA0               	incf	(USER_Task@u16_SaveCurrentSettingCounter+1)& (0+255),f,b
  1508                           
  1509                           ;user.c: 260: }
  1510  00131C  D005               	goto	l655
  1511  00131E                     l654:
  1512  00131E                     l5374:
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;user.c: 261: else
  1516                           ;user.c: 262: {
  1517                           ;user.c: 263: u16_SaveCurrentSettingCounter= 0;
  1518  00131E  0E00               	movlw	0
  1519  001320  0100               	movlb	0	; force () banked
  1520  001322  6FA0               	movwf	(USER_Task@u16_SaveCurrentSettingCounter+1)& (0+255),b
  1521  001324  0E00               	movlw	0
  1522  001326  6F9F               	movwf	USER_Task@u16_SaveCurrentSettingCounter& (0+255),b
  1523  001328                     l655:
  1524                           
  1525                           ;user.c: 264: }
  1526                           ;user.c: 265: }
  1527                           ;user.c: 266: u16_TemporarySaveSetpoint= t_Temperatures.SetpointTemperature;
  1528                           
  1529                           ; BSR set to: 0
  1530                           
  1531                           ; BSR set to: 0
  1532  001328  C082  F0A1         	movff	_t_Temperatures+2,USER_Task@u16_TemporarySaveSetpoint
  1533  00132C  C083  F0A2         	movff	_t_Temperatures+3,USER_Task@u16_TemporarySaveSetpoint+1
  1534                           
  1535                           ;user.c: 270: if( (t_Buttons.Up == 0) &&
  1536                           ;user.c: 271: (t_Buttons.Down == 0) &&
  1537                           ;user.c: 272: (t_Buttons.Temp1 == 0) &&
  1538                           ;user.c: 273: (t_Buttons.Temp2 == 0) &&
  1539                           ;user.c: 274: (t_Buttons.Temp3 == 0) &&
  1540                           ;user.c: 275: (bFlag_AutoOff == 0) )
  1541  001330  0100               	movlb	0	; force () banked
  1542  001332  51CC               	movf	_t_Buttons& (0+255),w,b
  1543  001334  A4D8               	btfss	status,2,c
  1544  001336  D050               	goto	l656
  1545                           
  1546                           ; BSR set to: 0
  1547  001338  0100               	movlb	0	; force () banked
  1548  00133A  51CD               	movf	(_t_Buttons+1)& (0+255),w,b
  1549  00133C  A4D8               	btfss	status,2,c
  1550  00133E  D04C               	goto	l656
  1551                           
  1552                           ; BSR set to: 0
  1553  001340  0100               	movlb	0	; force () banked
  1554  001342  51CE               	movf	(_t_Buttons+2)& (0+255),w,b
  1555  001344  A4D8               	btfss	status,2,c
  1556  001346  D048               	goto	l656
  1557                           
  1558                           ; BSR set to: 0
  1559  001348  0100               	movlb	0	; force () banked
  1560  00134A  51CF               	movf	(_t_Buttons+3)& (0+255),w,b
  1561  00134C  A4D8               	btfss	status,2,c
  1562  00134E  D044               	goto	l656
  1563                           
  1564                           ; BSR set to: 0
  1565  001350  0100               	movlb	0	; force () banked
  1566  001352  51D0               	movf	(_t_Buttons+4)& (0+255),w,b
  1567  001354  A4D8               	btfss	status,2,c
  1568  001356  D040               	goto	l656
  1569                           
  1570                           ; BSR set to: 0
  1571  001358  0100               	movlb	0	; force () banked
  1572  00135A  51C0               	movf	USER_Task@bFlag_AutoOff& (0+255),w,b
  1573  00135C  A4D8               	btfss	status,2,c
  1574  00135E  D03C               	goto	l656
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;user.c: 276: {
  1578                           ;user.c: 277: ++u32_WatchdogCounter;
  1579  001360  0E01               	movlw	1
  1580  001362  0100               	movlb	0	; force () banked
  1581  001364  278F               	addwf	USER_Task@u32_WatchdogCounter& (0+255),f,b	;volatile
  1582  001366  0E00               	movlw	0
  1583  001368  2390               	addwfc	(USER_Task@u32_WatchdogCounter+1)& (0+255),f,b	;volatile
  1584  00136A  2391               	addwfc	(USER_Task@u32_WatchdogCounter+2)& (0+255),f,b	;volatile
  1585  00136C  2392               	addwfc	(USER_Task@u32_WatchdogCounter+3)& (0+255),f,b	;volatile
  1586                           
  1587                           ;user.c: 278: if(u32_WatchdogCounter > (uint32_t)60000)
  1588  00136E  5192               	movf	(USER_Task@u32_WatchdogCounter+3)& (0+255),w,b	;volatile
  1589  001370  1191               	iorwf	(USER_Task@u32_WatchdogCounter+2)& (0+255),w,b	;volatile
  1590  001372  E106               	bnz	u5520
  1591  001374  0E61               	movlw	97
  1592  001376  5D8F               	subwf	USER_Task@u32_WatchdogCounter& (0+255),w,b	;volatile
  1593  001378  0EEA               	movlw	234
  1594  00137A  5990               	subwfb	(USER_Task@u32_WatchdogCounter+1)& (0+255),w,b	;volatile
  1595  00137C  A0D8               	btfss	status,0,c
  1596  00137E  D005               	goto	l657
  1597  001380                     u5520:
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;user.c: 279: {
  1601                           ;user.c: 280: t_Temperatures.SetpointTemperature= 120;
  1602  001380  0E00               	movlw	0
  1603  001382  0100               	movlb	0	; force () banked
  1604  001384  6F83               	movwf	(_t_Temperatures+3)& (0+255),b
  1605  001386  0E78               	movlw	120
  1606  001388  6F82               	movwf	(_t_Temperatures+2)& (0+255),b
  1607  00138A                     l657:
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;user.c: 281: }
  1611                           ;user.c: 283: if(u32_WatchdogCounter > (uint32_t)80000)
  1612                           
  1613                           ; BSR set to: 0
  1614  00138A  0100               	movlb	0	; force () banked
  1615  00138C  5192               	movf	(USER_Task@u32_WatchdogCounter+3)& (0+255),w,b	;volatile
  1616  00138E  E108               	bnz	u5530
  1617  001390  0E81               	movlw	129
  1618  001392  5D8F               	subwf	USER_Task@u32_WatchdogCounter& (0+255),w,b	;volatile
  1619  001394  0E38               	movlw	56
  1620  001396  5990               	subwfb	(USER_Task@u32_WatchdogCounter+1)& (0+255),w,b	;volatile
  1621  001398  0E01               	movlw	1
  1622  00139A  5991               	subwfb	(USER_Task@u32_WatchdogCounter+2)& (0+255),w,b	;volatile
  1623  00139C  A0D8               	btfss	status,0,c
  1624  00139E  0012               	return	
  1625  0013A0                     u5530:
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;user.c: 284: {
  1629                           ;user.c: 285: bFlag_AutoOff= 1;
  1630  0013A0  0E01               	movlw	1
  1631  0013A2  0100               	movlb	0	; force () banked
  1632  0013A4  6FC0               	movwf	USER_Task@bFlag_AutoOff& (0+255),b
  1633                           
  1634                           ;user.c: 286: t_Temperatures.SetpointTemperature= 0;
  1635  0013A6  0E00               	movlw	0
  1636  0013A8  0100               	movlb	0	; force () banked
  1637  0013AA  6F83               	movwf	(_t_Temperatures+3)& (0+255),b
  1638  0013AC  0E00               	movlw	0
  1639  0013AE  6F82               	movwf	(_t_Temperatures+2)& (0+255),b
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;user.c: 287: PWM_SetDutyCycle(0);
  1643  0013B0  0E00               	movlw	0
  1644  0013B2  0100               	movlb	0	; force () banked
  1645  0013B4  6FE4               	movwf	(PWM_SetDutyCycle@u16_DutyCycle+1)& (0+255),b
  1646  0013B6  0E00               	movlw	0
  1647  0013B8  6FE3               	movwf	PWM_SetDutyCycle@u16_DutyCycle& (0+255),b
  1648  0013BA  ECB4  F015         	call	_PWM_SetDutyCycle	;wreg free
  1649                           
  1650                           ;user.c: 288: LCD_Clear();
  1651  0013BE  ECA4  F015         	call	_LCD_Clear	;wreg free
  1652                           
  1653                           ;user.c: 289: LCD_SetMainDigits(6,0);
  1654  0013C2  0E00               	movlw	0
  1655  0013C4  0100               	movlb	0	; force () banked
  1656  0013C6  6FE8               	movwf	(LCD_SetMainDigits@u16_MainData+1)& (0+255),b
  1657  0013C8  0E06               	movlw	6
  1658  0013CA  6FE7               	movwf	LCD_SetMainDigits@u16_MainData& (0+255),b
  1659  0013CC  0E00               	movlw	0
  1660  0013CE  0100               	movlb	0	; force () banked
  1661  0013D0  6FE9               	movwf	LCD_SetMainDigits@bFlag_Number& (0+255),b
  1662  0013D2  EC09  F010         	call	_LCD_SetMainDigits	;wreg free
  1663                           
  1664                           ;user.c: 290: }
  1665                           ;user.c: 291: }
  1666  0013D6  0012               	return	
  1667  0013D8                     l656:
  1668                           
  1669                           ;user.c: 292: else
  1670                           ;user.c: 293: {
  1671                           ;user.c: 294: u32_WatchdogCounter= 0;
  1672  0013D8  0E00               	movlw	0
  1673  0013DA  0100               	movlb	0	; force () banked
  1674  0013DC  6F8F               	movwf	USER_Task@u32_WatchdogCounter& (0+255),b	;volatile
  1675  0013DE  0E00               	movlw	0
  1676  0013E0  6F90               	movwf	(USER_Task@u32_WatchdogCounter+1)& (0+255),b	;volatile
  1677  0013E2  0E00               	movlw	0
  1678  0013E4  6F91               	movwf	(USER_Task@u32_WatchdogCounter+2)& (0+255),b	;volatile
  1679  0013E6  0E00               	movlw	0
  1680  0013E8  6F92               	movwf	(USER_Task@u32_WatchdogCounter+3)& (0+255),b	;volatile
  1681  0013EA  0012               	return	
  1682  0013EC                     __end_of_USER_Task:
  1683                           	opt stack 0
  1684                           postinc0	equ	0xFEE
  1685                           wreg	equ	0xFE8
  1686                           status	equ	0xFD8
  1687                           
  1688 ;; *************** function _USER_TemperatureFilter *****************
  1689 ;; Defined at:
  1690 ;;		line 370 in file "apl/user.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;		None
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;  u16_FilterTe    2   22[BANK0 ] unsigned int 
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  2   20[BANK0 ] unsigned int 
  1697 ;; Registers used:
  1698 ;;		wreg, status,2, status,0, cstack
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1704 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1705 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1707 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;Total ram usage:        4 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; Hardware stack levels required when called:    3
  1711 ;; This function calls:
  1712 ;;		_ADC_GetTemperature
  1713 ;; This function is called by:
  1714 ;;		_USER_Task
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text2
  1719  00261C                     __ptext2:
  1720                           	opt stack 0
  1721  00261C                     _USER_TemperatureFilter:
  1722                           	opt stack 26
  1723                           
  1724                           ;user.c: 372: static uint16_t u16_FilterArray[4];
  1725                           ;user.c: 373: uint16_t u16_FilterTemporary= 0;
  1726                           
  1727                           ;incstack = 0
  1728  00261C  0E00               	movlw	0
  1729  00261E  0100               	movlb	0	; force () banked
  1730  002620  6FE8               	movwf	(USER_TemperatureFilter@u16_FilterTemporary+1)& (0+255),b
  1731  002622  0E00               	movlw	0
  1732  002624  6FE7               	movwf	USER_TemperatureFilter@u16_FilterTemporary& (0+255),b
  1733                           
  1734                           ; BSR set to: 0
  1735                           ;user.c: 374: u16_FilterTemporary= ADC_GetTemperature() + u16_FilterArray[1] + u16_Filte
      +                          rArray[2] + u16_FilterArray[3];
  1736  002626  EC1C  F016         	call	_ADC_GetTemperature	;wreg free
  1737  00262A  0101               	movlb	1	; force () banked
  1738  00262C  514C               	movf	(USER_TemperatureFilter@u16_FilterArray+2)& (0+255),w,b
  1739  00262E  0100               	movlb	0	; force () banked
  1740  002630  27E3               	addwf	?_ADC_GetTemperature& (0+255),f,b
  1741  002632  0101               	movlb	1	; force () banked
  1742  002634  514D               	movf	(USER_TemperatureFilter@u16_FilterArray+3)& (0+255),w,b
  1743  002636  0100               	movlb	0	; force () banked
  1744  002638  23E4               	addwfc	(?_ADC_GetTemperature+1)& (0+255),f,b
  1745  00263A  0101               	movlb	1	; force () banked
  1746  00263C  514E               	movf	(USER_TemperatureFilter@u16_FilterArray+4)& (0+255),w,b
  1747  00263E  0100               	movlb	0	; force () banked
  1748  002640  27E3               	addwf	?_ADC_GetTemperature& (0+255),f,b
  1749  002642  0101               	movlb	1	; force () banked
  1750  002644  514F               	movf	(USER_TemperatureFilter@u16_FilterArray+5)& (0+255),w,b
  1751  002646  0100               	movlb	0	; force () banked
  1752  002648  23E4               	addwfc	(?_ADC_GetTemperature+1)& (0+255),f,b
  1753  00264A  0101               	movlb	1	; force () banked
  1754  00264C  5150               	movf	(USER_TemperatureFilter@u16_FilterArray+6)& (0+255),w,b
  1755  00264E  0100               	movlb	0	; force () banked
  1756  002650  25E3               	addwf	?_ADC_GetTemperature& (0+255),w,b
  1757  002652  0100               	movlb	0	; force () banked
  1758  002654  6FE7               	movwf	USER_TemperatureFilter@u16_FilterTemporary& (0+255),b
  1759  002656  0101               	movlb	1	; force () banked
  1760  002658  5151               	movf	(USER_TemperatureFilter@u16_FilterArray+7)& (0+255),w,b
  1761  00265A  0100               	movlb	0	; force () banked
  1762  00265C  21E4               	addwfc	(?_ADC_GetTemperature+1)& (0+255),w,b
  1763  00265E  0100               	movlb	0	; force () banked
  1764  002660  6FE8               	movwf	(USER_TemperatureFilter@u16_FilterTemporary+1)& (0+255),b
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;user.c: 375: u16_FilterTemporary/= 4;
  1768  002662  0100               	movlb	0	; force () banked
  1769  002664  90D8               	bcf	status,0,c
  1770  002666  33E8               	rrcf	(USER_TemperatureFilter@u16_FilterTemporary+1)& (0+255),f,b
  1771  002668  33E7               	rrcf	USER_TemperatureFilter@u16_FilterTemporary& (0+255),f,b
  1772  00266A  90D8               	bcf	status,0,c
  1773  00266C  33E8               	rrcf	(USER_TemperatureFilter@u16_FilterTemporary+1)& (0+255),f,b
  1774  00266E  33E7               	rrcf	USER_TemperatureFilter@u16_FilterTemporary& (0+255),f,b
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;user.c: 376: u16_FilterArray[3]= u16_FilterArray[2];
  1778  002670  C14E  F150         	movff	USER_TemperatureFilter@u16_FilterArray+4,USER_TemperatureFilter@u16_FilterArray+6
  1779  002674  C14F  F151         	movff	USER_TemperatureFilter@u16_FilterArray+5,USER_TemperatureFilter@u16_FilterArray+7
  1780                           
  1781                           ; BSR set to: 0
  1782                           ;user.c: 377: u16_FilterArray[2]= u16_FilterArray[1];
  1783  002678  C14C  F14E         	movff	USER_TemperatureFilter@u16_FilterArray+2,USER_TemperatureFilter@u16_FilterArray+4
  1784  00267C  C14D  F14F         	movff	USER_TemperatureFilter@u16_FilterArray+3,USER_TemperatureFilter@u16_FilterArray+5
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;user.c: 378: u16_FilterArray[1]= ADC_GetTemperature();
  1788  002680  EC1C  F016         	call	_ADC_GetTemperature	;wreg free
  1789  002684  C0E3  F14C         	movff	?_ADC_GetTemperature,USER_TemperatureFilter@u16_FilterArray+2
  1790  002688  C0E4  F14D         	movff	?_ADC_GetTemperature+1,USER_TemperatureFilter@u16_FilterArray+3
  1791                           
  1792                           ;user.c: 380: return u16_FilterTemporary;
  1793  00268C  C0E7  F0E5         	movff	USER_TemperatureFilter@u16_FilterTemporary,?_USER_TemperatureFilter
  1794  002690  C0E8  F0E6         	movff	USER_TemperatureFilter@u16_FilterTemporary+1,?_USER_TemperatureFilter+1
  1795  002694  0012               	return	
  1796  002696                     __end_of_USER_TemperatureFilter:
  1797                           	opt stack 0
  1798                           postinc0	equ	0xFEE
  1799                           wreg	equ	0xFE8
  1800                           status	equ	0xFD8
  1801                           
  1802 ;; *************** function _ADC_GetTemperature *****************
  1803 ;; Defined at:
  1804 ;;		line 42 in file "hal/adc.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;		None
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;		None
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  2   18[BANK0 ] unsigned int 
  1811 ;; Registers used:
  1812 ;;		None
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1818 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;Total ram usage:        2 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; Hardware stack levels required when called:    2
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_USER_TemperatureFilter
  1829 ;;		_CONTROL_Task
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text3
  1834  002C38                     __ptext3:
  1835                           	opt stack 0
  1836  002C38                     _ADC_GetTemperature:
  1837                           	opt stack 26
  1838                           
  1839                           ;adc.c: 44: return s16_TemperatureCelcius;
  1840                           
  1841                           ;incstack = 0
  1842  002C38  C093  F0E3         	movff	_s16_TemperatureCelcius,?_ADC_GetTemperature
  1843  002C3C  C094  F0E4         	movff	_s16_TemperatureCelcius+1,?_ADC_GetTemperature+1
  1844  002C40  0012               	return		;funcret
  1845  002C42                     __end_of_ADC_GetTemperature:
  1846                           	opt stack 0
  1847                           postinc0	equ	0xFEE
  1848                           wreg	equ	0xFE8
  1849                           status	equ	0xFD8
  1850                           
  1851 ;; *************** function _USER_IncrementSetpoint *****************
  1852 ;; Defined at:
  1853 ;;		line 318 in file "apl/user.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;		None
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;		None
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		wreg, status,2, status,0
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1871 ;;Total ram usage:        0 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:    2
  1874 ;; This function calls:
  1875 ;;		Nothing
  1876 ;; This function is called by:
  1877 ;;		_USER_Task
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           	psect	text4
  1882  002B28                     __ptext4:
  1883                           	opt stack 0
  1884  002B28                     _USER_IncrementSetpoint:
  1885                           	opt stack 27
  1886                           
  1887                           ;user.c: 320: ++t_Temperatures.SetpointTemperature;
  1888                           
  1889                           ;incstack = 0
  1890  002B28  0100               	movlb	0	; force () banked
  1891  002B2A  4B82               	infsnz	(_t_Temperatures+2)& (0+255),f,b
  1892  002B2C  2B83               	incf	(_t_Temperatures+3)& (0+255),f,b
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;user.c: 321: if(t_Temperatures.SetpointTemperature > 450)
  1896  002B2E  0EC3               	movlw	195
  1897  002B30  0100               	movlb	0	; force () banked
  1898  002B32  5D82               	subwf	(_t_Temperatures+2)& (0+255),w,b
  1899  002B34  0E01               	movlw	1
  1900  002B36  5983               	subwfb	(_t_Temperatures+3)& (0+255),w,b
  1901  002B38  A0D8               	btfss	status,0,c
  1902  002B3A  0012               	return	
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;user.c: 322: {
  1906                           ;user.c: 323: t_Temperatures.SetpointTemperature= 450;
  1907  002B3C  0E01               	movlw	1
  1908  002B3E  0100               	movlb	0	; force () banked
  1909  002B40  6F83               	movwf	(_t_Temperatures+3)& (0+255),b
  1910  002B42  0EC2               	movlw	194
  1911  002B44  6F82               	movwf	(_t_Temperatures+2)& (0+255),b
  1912  002B46  0012               	return	
  1913  002B48                     __end_of_USER_IncrementSetpoint:
  1914                           	opt stack 0
  1915                           postinc0	equ	0xFEE
  1916                           wreg	equ	0xFE8
  1917                           status	equ	0xFD8
  1918                           
  1919 ;; *************** function _USER_FastIncrementSetpoint *****************
  1920 ;; Defined at:
  1921 ;;		line 337 in file "apl/user.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;		None
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;		None
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		wreg, status,2, status,0
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;Total ram usage:        0 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; Hardware stack levels required when called:    2
  1942 ;; This function calls:
  1943 ;;		Nothing
  1944 ;; This function is called by:
  1945 ;;		_USER_Task
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           	psect	text5
  1950  002A56                     __ptext5:
  1951                           	opt stack 0
  1952  002A56                     _USER_FastIncrementSetpoint:
  1953                           	opt stack 27
  1954                           
  1955                           ;user.c: 339: static uint8_t u8_FastIncrementCounter= 0;
  1956                           ;user.c: 340: ++u8_FastIncrementCounter;
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;incstack = 0
  1960  002A56  0100               	movlb	0	; force () banked
  1961  002A58  2BBF               	incf	USER_FastIncrementSetpoint@u8_FastIncrementCounter& (0+255),f,b
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;user.c: 341: if(u8_FastIncrementCounter > 20)
  1965  002A5A  0E14               	movlw	20
  1966  002A5C  0100               	movlb	0	; force () banked
  1967  002A5E  65BF               	cpfsgt	USER_FastIncrementSetpoint@u8_FastIncrementCounter& (0+255),b
  1968  002A60  0012               	return	
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;user.c: 342: {
  1972                           ;user.c: 343: u8_FastIncrementCounter= 0;
  1973  002A62  0E00               	movlw	0
  1974  002A64  0100               	movlb	0	; force () banked
  1975  002A66  6FBF               	movwf	USER_FastIncrementSetpoint@u8_FastIncrementCounter& (0+255),b
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;user.c: 344: ++t_Temperatures.SetpointTemperature;
  1979  002A68  0100               	movlb	0	; force () banked
  1980  002A6A  4B82               	infsnz	(_t_Temperatures+2)& (0+255),f,b
  1981  002A6C  2B83               	incf	(_t_Temperatures+3)& (0+255),f,b
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;user.c: 346: if(t_Temperatures.SetpointTemperature > 450)
  1985  002A6E  0EC3               	movlw	195
  1986  002A70  0100               	movlb	0	; force () banked
  1987  002A72  5D82               	subwf	(_t_Temperatures+2)& (0+255),w,b
  1988  002A74  0E01               	movlw	1
  1989  002A76  5983               	subwfb	(_t_Temperatures+3)& (0+255),w,b
  1990  002A78  A0D8               	btfss	status,0,c
  1991  002A7A  0012               	return	
  1992                           
  1993                           ; BSR set to: 0
  1994                           ;user.c: 347: {
  1995                           ;user.c: 348: t_Temperatures.SetpointTemperature= 450;
  1996  002A7C  0E01               	movlw	1
  1997  002A7E  0100               	movlb	0	; force () banked
  1998  002A80  6F83               	movwf	(_t_Temperatures+3)& (0+255),b
  1999  002A82  0EC2               	movlw	194
  2000  002A84  6F82               	movwf	(_t_Temperatures+2)& (0+255),b
  2001                           
  2002                           ; BSR set to: 0
  2003  002A86  0012               	return	
  2004  002A88                     __end_of_USER_FastIncrementSetpoint:
  2005                           	opt stack 0
  2006                           postinc0	equ	0xFEE
  2007                           wreg	equ	0xFE8
  2008                           status	equ	0xFD8
  2009                           
  2010 ;; *************** function _USER_FastDecrementSetpoint *****************
  2011 ;; Defined at:
  2012 ;;		line 354 in file "apl/user.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;		None
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;		None
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      void 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2, status,0
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2030 ;;Total ram usage:        0 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:    2
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_USER_Task
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text6
  2041  002ABA                     __ptext6:
  2042                           	opt stack 0
  2043  002ABA                     _USER_FastDecrementSetpoint:
  2044                           	opt stack 27
  2045                           
  2046                           ;user.c: 356: static uint8_t u8_FastDecrementCounter= 0;
  2047                           ;user.c: 357: ++u8_FastDecrementCounter;
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;incstack = 0
  2051  002ABA  0100               	movlb	0	; force () banked
  2052  002ABC  2BBE               	incf	USER_FastDecrementSetpoint@u8_FastDecrementCounter& (0+255),f,b
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;user.c: 358: if(u8_FastDecrementCounter > 20)
  2056  002ABE  0E14               	movlw	20
  2057  002AC0  0100               	movlb	0	; force () banked
  2058  002AC2  65BE               	cpfsgt	USER_FastDecrementSetpoint@u8_FastDecrementCounter& (0+255),b
  2059  002AC4  0012               	return	
  2060                           
  2061                           ; BSR set to: 0
  2062                           ;user.c: 359: {
  2063                           ;user.c: 360: if(t_Temperatures.SetpointTemperature > 50)
  2064  002AC6  0100               	movlb	0	; force () banked
  2065  002AC8  5183               	movf	(_t_Temperatures+3)& (0+255),w,b
  2066  002ACA  E104               	bnz	u4590
  2067  002ACC  0E33               	movlw	51
  2068  002ACE  5D82               	subwf	(_t_Temperatures+2)& (0+255),w,b
  2069  002AD0  A0D8               	btfss	status,0,c
  2070  002AD2  0012               	return	
  2071  002AD4                     u4590:
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;user.c: 361: {
  2075                           ;user.c: 362: u8_FastDecrementCounter= 0;
  2076  002AD4  0E00               	movlw	0
  2077  002AD6  0100               	movlb	0	; force () banked
  2078  002AD8  6FBE               	movwf	USER_FastDecrementSetpoint@u8_FastDecrementCounter& (0+255),b
  2079                           
  2080                           ; BSR set to: 0
  2081                           ;user.c: 363: --t_Temperatures.SetpointTemperature;
  2082  002ADA  0100               	movlb	0	; force () banked
  2083  002ADC  0782               	decf	(_t_Temperatures+2)& (0+255),f,b
  2084  002ADE  A0D8               	btfss	status,0,c
  2085  002AE0  0783               	decf	(_t_Temperatures+3)& (0+255),f,b
  2086                           
  2087                           ; BSR set to: 0
  2088  002AE2  0012               	return	
  2089  002AE4                     __end_of_USER_FastDecrementSetpoint:
  2090                           	opt stack 0
  2091                           postinc0	equ	0xFEE
  2092                           wreg	equ	0xFE8
  2093                           status	equ	0xFD8
  2094                           
  2095 ;; *************** function _USER_DecrementSetpoint *****************
  2096 ;; Defined at:
  2097 ;;		line 328 in file "apl/user.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		wreg, status,2, status,0
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;Total ram usage:        0 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:    2
  2118 ;; This function calls:
  2119 ;;		Nothing
  2120 ;; This function is called by:
  2121 ;;		_USER_Task
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           	psect	text7
  2126  002BC2                     __ptext7:
  2127                           	opt stack 0
  2128  002BC2                     _USER_DecrementSetpoint:
  2129                           	opt stack 27
  2130                           
  2131                           ;user.c: 330: if(t_Temperatures.SetpointTemperature > 50)
  2132                           
  2133                           ; BSR set to: 0
  2134                           ;incstack = 0
  2135  002BC2  0100               	movlb	0	; force () banked
  2136  002BC4  5183               	movf	(_t_Temperatures+3)& (0+255),w,b
  2137  002BC6  E104               	bnz	u4570
  2138  002BC8  0E33               	movlw	51
  2139  002BCA  5D82               	subwf	(_t_Temperatures+2)& (0+255),w,b
  2140  002BCC  A0D8               	btfss	status,0,c
  2141  002BCE  0012               	return	
  2142  002BD0                     u4570:
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;user.c: 331: {
  2146                           ;user.c: 332: --t_Temperatures.SetpointTemperature;
  2147  002BD0  0100               	movlb	0	; force () banked
  2148  002BD2  0782               	decf	(_t_Temperatures+2)& (0+255),f,b
  2149  002BD4  A0D8               	btfss	status,0,c
  2150  002BD6  0783               	decf	(_t_Temperatures+3)& (0+255),f,b
  2151  002BD8  0012               	return	
  2152  002BDA                     __end_of_USER_DecrementSetpoint:
  2153                           	opt stack 0
  2154                           postinc0	equ	0xFEE
  2155                           wreg	equ	0xFE8
  2156                           status	equ	0xFD8
  2157                           
  2158 ;; *************** function _PWM_SetDutyCycle *****************
  2159 ;; Defined at:
  2160 ;;		line 57 in file "hal/pwm.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  u16_DutyCycl    2   18[BANK0 ] unsigned int 
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;		None
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1    wreg      void 
  2167 ;; Registers used:
  2168 ;;		wreg, status,2, status,0
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2174 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;Total ram usage:        2 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; Hardware stack levels required when called:    2
  2181 ;; This function calls:
  2182 ;;		Nothing
  2183 ;; This function is called by:
  2184 ;;		_USER_Task
  2185 ;;		_CONTROL_Task
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           	psect	text8
  2190  002B68                     __ptext8:
  2191                           	opt stack 0
  2192  002B68                     _PWM_SetDutyCycle:
  2193                           	opt stack 27
  2194                           
  2195                           ;pwm.c: 59: if(u16_DutyCycle > 10)
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;incstack = 0
  2199  002B68  0100               	movlb	0	; force () banked
  2200  002B6A  51E4               	movf	(PWM_SetDutyCycle@u16_DutyCycle+1)& (0+255),w,b
  2201  002B6C  E104               	bnz	u4520
  2202  002B6E  0E0B               	movlw	11
  2203  002B70  5DE3               	subwf	PWM_SetDutyCycle@u16_DutyCycle& (0+255),w,b
  2204  002B72  A0D8               	btfss	status,0,c
  2205  002B74  D005               	goto	l816
  2206  002B76                     u4520:
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;pwm.c: 60: {
  2210                           ;pwm.c: 61: u16_DutyCycle= 10;
  2211  002B76  0E00               	movlw	0
  2212  002B78  0100               	movlb	0	; force () banked
  2213  002B7A  6FE4               	movwf	(PWM_SetDutyCycle@u16_DutyCycle+1)& (0+255),b
  2214  002B7C  0E0A               	movlw	10
  2215  002B7E  6FE3               	movwf	PWM_SetDutyCycle@u16_DutyCycle& (0+255),b
  2216  002B80                     l816:
  2217                           
  2218                           ; BSR set to: 0
  2219                           ;pwm.c: 62: }
  2220                           ;pwm.c: 64: u8_DutyCycle= (uint8_t) u16_DutyCycle;
  2221                           
  2222                           ; BSR set to: 0
  2223  002B80  C0E3  F0B7         	movff	PWM_SetDutyCycle@u16_DutyCycle,_u8_DutyCycle
  2224                           
  2225                           ; BSR set to: 0
  2226  002B84  0012               	return		;funcret
  2227  002B86                     __end_of_PWM_SetDutyCycle:
  2228                           	opt stack 0
  2229                           postinc0	equ	0xFEE
  2230                           wreg	equ	0xFE8
  2231                           status	equ	0xFD8
  2232                           
  2233 ;; *************** function _NVM_Write *****************
  2234 ;; Defined at:
  2235 ;;		line 140 in file "hal/nvm.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  u8_Address      1    wreg     unsigned char 
  2238 ;;  u16_Data        2   18[BANK0 ] unsigned int 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  u8_Address      1   22[BANK0 ] unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      void 
  2243 ;; Registers used:
  2244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2250 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2253 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2254 ;;Total ram usage:        5 bytes
  2255 ;; Hardware stack levels used:    1
  2256 ;; Hardware stack levels required when called:    2
  2257 ;; This function calls:
  2258 ;;		Nothing
  2259 ;; This function is called by:
  2260 ;;		_USER_Task
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           	psect	text9
  2265  0029DE                     __ptext9:
  2266                           	opt stack 0
  2267  0029DE                     _NVM_Write:
  2268                           	opt stack 27
  2269                           
  2270                           ; BSR set to: 0
  2271                           ;incstack = 0
  2272                           ;NVM_Write@u8_Address stored from wreg
  2273  0029DE  0100               	movlb	0	; force () banked
  2274  0029E0  6FE7               	movwf	NVM_Write@u8_Address& (0+255),b
  2275                           
  2276                           ;nvm.c: 142: u16_NVM_WriteBuffer[u8_Address]= u16_Data;
  2277  0029E2  0100               	movlb	0	; force () banked
  2278  0029E4  51E7               	movf	NVM_Write@u8_Address& (0+255),w,b
  2279  0029E6  0D02               	mullw	2
  2280  0029E8  0E40               	movlw	low _u16_NVM_WriteBuffer
  2281  0029EA  24F3               	addwf	prodl,w,c
  2282  0029EC  6ED9               	movwf	fsr2l,c
  2283  0029EE  0E01               	movlw	high _u16_NVM_WriteBuffer
  2284  0029F0  20F4               	addwfc	prodh,w,c
  2285  0029F2  6EDA               	movwf	fsr2h,c
  2286  0029F4  C0E3  FFDE         	movff	NVM_Write@u16_Data,postinc2
  2287  0029F8  C0E4  FFDD         	movff	NVM_Write@u16_Data+1,postdec2
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;nvm.c: 143: u8_NVM_WriteRegister|= (1<<u8_Address);
  2291  0029FC  C0E7  F0E5         	movff	NVM_Write@u8_Address,??_NVM_Write
  2292  002A00  0E01               	movlw	1
  2293  002A02  0100               	movlb	0	; force () banked
  2294  002A04  6FE6               	movwf	(??_NVM_Write+1)& (0+255),b
  2295  002A06  2BE5               	incf	??_NVM_Write& (0+255),f,b
  2296  002A08  D002               	goto	u4604
  2297  002A0A                     u4605:
  2298  002A0A  90D8               	bcf	status,0,c
  2299  002A0C  37E6               	rlcf	(??_NVM_Write+1)& (0+255),f,b
  2300  002A0E                     u4604:
  2301  002A0E  2FE5               	decfsz	??_NVM_Write& (0+255),f,b
  2302  002A10  D7FC               	goto	u4605
  2303  002A12  0100               	movlb	0	; force () banked
  2304  002A14  51E6               	movf	(??_NVM_Write+1)& (0+255),w,b
  2305  002A16  0100               	movlb	0	; force () banked
  2306  002A18  13BB               	iorwf	_u8_NVM_WriteRegister& (0+255),f,b
  2307                           
  2308                           ; BSR set to: 0
  2309  002A1A  0012               	return		;funcret
  2310  002A1C                     __end_of_NVM_Write:
  2311                           	opt stack 0
  2312                           prodh	equ	0xFF4
  2313                           prodl	equ	0xFF3
  2314                           postinc0	equ	0xFEE
  2315                           wreg	equ	0xFE8
  2316                           postinc2	equ	0xFDE
  2317                           postdec2	equ	0xFDD
  2318                           fsr2h	equ	0xFDA
  2319                           fsr2l	equ	0xFD9
  2320                           status	equ	0xFD8
  2321                           
  2322 ;; *************** function _LCD_SetMainDigits *****************
  2323 ;; Defined at:
  2324 ;;		line 109 in file "mid/lcd.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;  u16_MainData    2   22[BANK0 ] unsigned int 
  2327 ;;  bFlag_Number    1   24[BANK0 ] unsigned char 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;  u8_TempArray    3    0[BANK1 ] unsigned char [3]
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2339 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2340 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2342 ;;      Totals:         0       5       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2343 ;;Total ram usage:        8 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:    4
  2346 ;; This function calls:
  2347 ;;		_LCD_Bcd2Segment
  2348 ;;		_LCD_Dec2Bcd
  2349 ;;		_LCD_SetData
  2350 ;; This function is called by:
  2351 ;;		_USER_Task
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           	psect	text10
  2356  002012                     __ptext10:
  2357                           	opt stack 0
  2358  002012                     _LCD_SetMainDigits:
  2359                           	opt stack 25
  2360                           
  2361                           ;lcd.c: 111: uint8_t u8_TempArray[3];
  2362                           ;lcd.c: 112: LCD_Dec2Bcd(u16_MainData, &u8_TempArray[0]);
  2363                           
  2364                           ; BSR set to: 0
  2365                           ;incstack = 0
  2366  002012  C0E7  F0E3         	movff	LCD_SetMainDigits@u16_MainData,LCD_Dec2Bcd@u16_DecimalData
  2367  002016  C0E8  F0E4         	movff	LCD_SetMainDigits@u16_MainData+1,LCD_Dec2Bcd@u16_DecimalData+1
  2368  00201A  0E5F               	movlw	low LCD_SetMainDigits@u8_TempArray
  2369  00201C  0100               	movlb	0	; force () banked
  2370  00201E  6FE5               	movwf	LCD_Dec2Bcd@ptrBCD& (0+255),b
  2371  002020  0E01               	movlw	high LCD_SetMainDigits@u8_TempArray
  2372  002022  6FE6               	movwf	(LCD_Dec2Bcd@ptrBCD+1)& (0+255),b
  2373  002024  EC37  F012         	call	_LCD_Dec2Bcd	;wreg free
  2374                           
  2375                           ;lcd.c: 114: if(bFlag_Number == 1)
  2376  002028  0100               	movlb	0	; force () banked
  2377  00202A  05E9               	decf	LCD_SetMainDigits@bFlag_Number& (0+255),w,b
  2378  00202C  A4D8               	btfss	status,2,c
  2379  00202E  D07C               	goto	l381
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;lcd.c: 115: {
  2383                           ;lcd.c: 117: if(u16_MainData > 99)
  2384  002030  0100               	movlb	0	; force () banked
  2385  002032  51E8               	movf	(LCD_SetMainDigits@u16_MainData+1)& (0+255),w,b
  2386  002034  E104               	bnz	u4410
  2387  002036  0E64               	movlw	100
  2388  002038  5DE7               	subwf	LCD_SetMainDigits@u16_MainData& (0+255),w,b
  2389  00203A  A0D8               	btfss	status,0,c
  2390  00203C  D008               	goto	l376
  2391  00203E                     u4410:
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;lcd.c: 118: {
  2395                           ;lcd.c: 119: u8_TempArray[0]= LCD_Bcd2Segment(u8_TempArray[0],0);
  2396  00203E  0E00               	movlw	0
  2397  002040  0100               	movlb	0	; force () banked
  2398  002042  6FE3               	movwf	LCD_Bcd2Segment@u8_DigitType& (0+255),b
  2399  002044  0101               	movlb	1	; force () banked
  2400  002046  515F               	movf	LCD_SetMainDigits@u8_TempArray& (0+255),w,b
  2401  002048  EC63  F00F         	call	_LCD_Bcd2Segment
  2402  00204C  D001               	goto	L1
  2403  00204E                     l376:
  2404                           
  2405                           ;lcd.c: 121: else
  2406                           ;lcd.c: 122: {
  2407                           ;lcd.c: 123: u8_TempArray[0]= 0;
  2408                           
  2409                           ; BSR set to: 1
  2410  00204E  0E00               	movlw	0
  2411  002050                     L1:
  2412  002050  0101               	movlb	1	; force () banked
  2413  002052  6F5F               	movwf	LCD_SetMainDigits@u8_TempArray& (0+255),b
  2414                           
  2415                           ; BSR set to: 1
  2416                           ;lcd.c: 124: }
  2417                           ;lcd.c: 127: if(u16_MainData > 9)
  2418                           
  2419                           ; BSR set to: 1
  2420  002054  0100               	movlb	0	; force () banked
  2421  002056  51E8               	movf	(LCD_SetMainDigits@u16_MainData+1)& (0+255),w,b
  2422  002058  E104               	bnz	u4420
  2423  00205A  0E0A               	movlw	10
  2424  00205C  5DE7               	subwf	LCD_SetMainDigits@u16_MainData& (0+255),w,b
  2425  00205E  A0D8               	btfss	status,0,c
  2426  002060  D008               	goto	l378
  2427  002062                     u4420:
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;lcd.c: 128: {
  2431                           ;lcd.c: 129: u8_TempArray[1]= LCD_Bcd2Segment(u8_TempArray[1],0);
  2432  002062  0E00               	movlw	0
  2433  002064  0100               	movlb	0	; force () banked
  2434  002066  6FE3               	movwf	LCD_Bcd2Segment@u8_DigitType& (0+255),b
  2435  002068  0101               	movlb	1	; force () banked
  2436  00206A  5160               	movf	(LCD_SetMainDigits@u8_TempArray+1)& (0+255),w,b
  2437  00206C  EC63  F00F         	call	_LCD_Bcd2Segment
  2438  002070  D001               	goto	L2
  2439  002072                     l378:
  2440                           
  2441                           ;lcd.c: 131: else
  2442                           ;lcd.c: 132: {
  2443                           ;lcd.c: 133: u8_TempArray[1]= 0;
  2444                           
  2445                           ; BSR set to: 1
  2446  002072  0E00               	movlw	0
  2447  002074                     L2:
  2448  002074  0101               	movlb	1	; force () banked
  2449  002076  6F60               	movwf	(LCD_SetMainDigits@u8_TempArray+1)& (0+255),b
  2450                           
  2451                           ; BSR set to: 1
  2452                           ;lcd.c: 134: }
  2453                           ;lcd.c: 136: u8_TempArray[2]= LCD_Bcd2Segment(u8_TempArray[2],0);
  2454                           
  2455                           ; BSR set to: 1
  2456  002078  0E00               	movlw	0
  2457  00207A  0100               	movlb	0	; force () banked
  2458  00207C  6FE3               	movwf	LCD_Bcd2Segment@u8_DigitType& (0+255),b
  2459  00207E  0101               	movlb	1	; force () banked
  2460  002080  5161               	movf	(LCD_SetMainDigits@u8_TempArray+2)& (0+255),w,b
  2461  002082  EC63  F00F         	call	_LCD_Bcd2Segment
  2462  002086  0101               	movlb	1	; force () banked
  2463  002088  6F61               	movwf	(LCD_SetMainDigits@u8_TempArray+2)& (0+255),b
  2464                           
  2465                           ; BSR set to: 1
  2466                           ;lcd.c: 138: LCD_SetData(u8_TempArray[0],0);
  2467  00208A  0E00               	movlw	0
  2468  00208C  0100               	movlb	0	; force () banked
  2469  00208E  6FE3               	movwf	LCD_SetData@u8_Position& (0+255),b
  2470  002090  0101               	movlb	1	; force () banked
  2471  002092  515F               	movf	LCD_SetMainDigits@u8_TempArray& (0+255),w,b
  2472  002094  EC5F  F014         	call	_LCD_SetData
  2473                           
  2474                           ;lcd.c: 139: LCD_SetData(u8_TempArray[1],1);
  2475  002098  0E01               	movlw	1
  2476  00209A  0100               	movlb	0	; force () banked
  2477  00209C  6FE3               	movwf	LCD_SetData@u8_Position& (0+255),b
  2478  00209E  0101               	movlb	1	; force () banked
  2479  0020A0  5160               	movf	(LCD_SetMainDigits@u8_TempArray+1)& (0+255),w,b
  2480  0020A2  EC5F  F014         	call	_LCD_SetData
  2481                           
  2482                           ;lcd.c: 140: LCD_SetData(u8_TempArray[2],2);
  2483  0020A6  0E02               	movlw	2
  2484  0020A8  0100               	movlb	0	; force () banked
  2485  0020AA  6FE3               	movwf	LCD_SetData@u8_Position& (0+255),b
  2486  0020AC  0101               	movlb	1	; force () banked
  2487  0020AE  5161               	movf	(LCD_SetMainDigits@u8_TempArray+2)& (0+255),w,b
  2488  0020B0  EC5F  F014         	call	_LCD_SetData
  2489                           
  2490                           ;lcd.c: 142: }
  2491  0020B4  0012               	return	
  2492  0020B6                     
  2493                           ;lcd.c: 148: LCD_SetData(0b00001000,0);
  2494  0020B6  0E00               	movlw	0
  2495  0020B8  0100               	movlb	0	; force () banked
  2496  0020BA  6FE3               	movwf	LCD_SetData@u8_Position& (0+255),b
  2497  0020BC  0E08               	movlw	8
  2498  0020BE  EC5F  F014         	call	_LCD_SetData
  2499                           
  2500                           ;lcd.c: 149: LCD_SetData(0b00001000,1);
  2501  0020C2  0E01               	movlw	1
  2502  0020C4  0100               	movlb	0	; force () banked
  2503  0020C6  6FE3               	movwf	LCD_SetData@u8_Position& (0+255),b
  2504  0020C8  0E08               	movlw	8
  2505  0020CA  EC5F  F014         	call	_LCD_SetData
  2506                           
  2507                           ;lcd.c: 150: LCD_SetData(0b00001000,2);
  2508  0020CE  0E02               	movlw	2
  2509  0020D0  0100               	movlb	0	; force () banked
  2510  0020D2  6FE3               	movwf	LCD_SetData@u8_Position& (0+255),b
  2511  0020D4  0E08               	movlw	8
  2512  0020D6  EC5F  F014         	call	_LCD_SetData
  2513                           
  2514                           ;lcd.c: 151: break;
  2515  0020DA  0012               	return	
  2516  0020DC                     
  2517                           ;lcd.c: 154: LCD_SetData(0b00011111,0);
  2518  0020DC  0E00               	movlw	0
  2519  0020DE  0100               	movlb	0	; force () banked
  2520  0020E0  6FE3               	movwf	LCD_SetData@u8_Position& (0+255),b
  2521  0020E2  0E1F               	movlw	31
  2522  0020E4  EC5F  F014         	call	_LCD_SetData
  2523                           
  2524                           ;lcd.c: 155: LCD_SetData(0b00001001,1);
  2525  0020E8  0E01               	movlw	1
  2526  0020EA  0100               	movlb	0	; force () banked
  2527  0020EC  6FE3               	movwf	LCD_SetData@u8_Position& (0+255),b
  2528  0020EE  0E09               	movlw	9
  2529  0020F0  EC5F  F014         	call	_LCD_SetData
  2530                           
  2531                           ;lcd.c: 156: LCD_SetData(0b00001001,2);
  2532  0020F4  0E02               	movlw	2
  2533  0020F6  0100               	movlb	0	; force () banked
  2534  0020F8  6FE3               	movwf	LCD_SetData@u8_Position& (0+255),b
  2535  0020FA  0E09               	movlw	9
  2536  0020FC  EC5F  F014         	call	_LCD_SetData
  2537                           
  2538                           ;lcd.c: 157: break;
  2539  002100  0012               	return	
  2540  002102                     
  2541                           ;lcd.c: 160: LCD_SetData(0b11010111,0);
  2542  002102  0E00               	movlw	0
  2543  002104  0100               	movlb	0	; force () banked
  2544  002106  6FE3               	movwf	LCD_SetData@u8_Position& (0+255),b
  2545  002108  0ED7               	movlw	215
  2546  00210A  EC5F  F014         	call	_LCD_SetData
  2547                           
  2548                           ;lcd.c: 161: LCD_SetData(0b00011011,1);
  2549  00210E  0E01               	movlw	1
  2550  002110  0100               	movlb	0	; force () banked
  2551  002112  6FE3               	movwf	LCD_SetData@u8_Position& (0+255),b
  2552  002114  0E1B               	movlw	27
  2553  002116  EC5F  F014         	call	_LCD_SetData
  2554                           
  2555                           ;lcd.c: 162: LCD_SetData(0b00011011,2);
  2556  00211A  0E02               	movlw	2
  2557  00211C  0100               	movlb	0	; force () banked
  2558  00211E  6FE3               	movwf	LCD_SetData@u8_Position& (0+255),b
  2559  002120  0E1B               	movlw	27
  2560  002122  EC5F  F014         	call	_LCD_SetData
  2561                           
  2562                           ;lcd.c: 166: }
  2563                           
  2564                           ;lcd.c: 165: default: break;
  2565                           
  2566                           ;lcd.c: 163: break;
  2567  002126  0012               	return	
  2568  002128                     l381:
  2569  002128  C0E7  F0EA         	movff	LCD_SetMainDigits@u16_MainData,??_LCD_SetMainDigits
  2570  00212C  C0E8  F0EB         	movff	LCD_SetMainDigits@u16_MainData+1,??_LCD_SetMainDigits+1
  2571                           
  2572                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2573                           ; Switch size 1, requested type "space"
  2574                           ; Number of cases is 1, Range of values is 0 to 0
  2575                           ; switch strategies available:
  2576                           ; Name         Instructions Cycles
  2577                           ; simple_byte            4     3 (average)
  2578                           ;	Chosen strategy is simple_byte
  2579  002130  0100               	movlb	0	; force () banked
  2580  002132  51EB               	movf	(??_LCD_SetMainDigits+1)& (0+255),w,b
  2581  002134  0A00               	xorlw	0	; case 0
  2582  002136  A4D8               	btfss	status,2,c
  2583  002138  0012               	return	
  2584                           
  2585                           ; BSR set to: 0
  2586                           ; Switch size 1, requested type "space"
  2587                           ; Number of cases is 3, Range of values is 4 to 6
  2588                           ; switch strategies available:
  2589                           ; Name         Instructions Cycles
  2590                           ; simple_byte           10     6 (average)
  2591                           ;	Chosen strategy is simple_byte
  2592  00213A  51EA               	movf	??_LCD_SetMainDigits& (0+255),w,b
  2593  00213C  0A04               	xorlw	4	; case 4
  2594  00213E  B4D8               	btfsc	status,2,c
  2595  002140  D7BA               	goto	l382
  2596  002142  0A01               	xorlw	1	; case 5
  2597  002144  B4D8               	btfsc	status,2,c
  2598  002146  D7CA               	goto	l384
  2599  002148  0A03               	xorlw	3	; case 6
  2600  00214A  A4D8               	btfss	status,2,c
  2601                           
  2602                           ; BSR set to: 0
  2603  00214C  0012               	return	
  2604  00214E  D7D9               	goto	l385
  2605  002150                     __end_of_LCD_SetMainDigits:
  2606                           	opt stack 0
  2607                           prodh	equ	0xFF4
  2608                           prodl	equ	0xFF3
  2609                           postinc0	equ	0xFEE
  2610                           wreg	equ	0xFE8
  2611                           postinc2	equ	0xFDE
  2612                           postdec2	equ	0xFDD
  2613                           fsr2h	equ	0xFDA
  2614                           fsr2l	equ	0xFD9
  2615                           status	equ	0xFD8
  2616                           
  2617 ;; *************** function _BUTTONS_GetState *****************
  2618 ;; Defined at:
  2619 ;;		line 19 in file "mid/buttons.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  t_Buttons       2   18[BANK0 ] PTR struct .
  2622 ;;		 -> t_Buttons(5), 
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;		None
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2634 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;Total ram usage:        2 bytes
  2639 ;; Hardware stack levels used:    1
  2640 ;; Hardware stack levels required when called:    2
  2641 ;; This function calls:
  2642 ;;		Nothing
  2643 ;; This function is called by:
  2644 ;;		_USER_Task
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           	psect	text11
  2649  00276C                     __ptext11:
  2650                           	opt stack 0
  2651  00276C                     _BUTTONS_GetState:
  2652                           	opt stack 27
  2653                           
  2654                           ;buttons.c: 21: t_Buttons->Up= u8_ButtonSignal[0];
  2655                           
  2656                           ;incstack = 0
  2657  00276C  C0E3  FFD9         	movff	BUTTONS_GetState@t_Buttons,fsr2l
  2658  002770  C0E4  FFDA         	movff	BUTTONS_GetState@t_Buttons+1,fsr2h
  2659  002774  C08A  FFDF         	movff	_u8_ButtonSignal,indf2
  2660                           
  2661                           ;buttons.c: 22: t_Buttons->Down= u8_ButtonSignal[1];
  2662  002778  0100               	movlb	0	; force () banked
  2663  00277A  EE20 F001          	lfsr	2,1
  2664  00277E  51E3               	movf	BUTTONS_GetState@t_Buttons& (0+255),w,b
  2665  002780  26D9               	addwf	fsr2l,f,c
  2666  002782  51E4               	movf	(BUTTONS_GetState@t_Buttons+1)& (0+255),w,b
  2667  002784  22DA               	addwfc	fsr2h,f,c
  2668  002786  C08B  FFDF         	movff	_u8_ButtonSignal+1,indf2
  2669                           
  2670                           ; BSR set to: 0
  2671                           ;buttons.c: 23: t_Buttons->Temp1= u8_ButtonSignal[2];
  2672  00278A  0100               	movlb	0	; force () banked
  2673  00278C  EE20 F002          	lfsr	2,2
  2674  002790  51E3               	movf	BUTTONS_GetState@t_Buttons& (0+255),w,b
  2675  002792  26D9               	addwf	fsr2l,f,c
  2676  002794  51E4               	movf	(BUTTONS_GetState@t_Buttons+1)& (0+255),w,b
  2677  002796  22DA               	addwfc	fsr2h,f,c
  2678  002798  C08C  FFDF         	movff	_u8_ButtonSignal+2,indf2
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;buttons.c: 24: t_Buttons->Temp2= u8_ButtonSignal[3];
  2682  00279C  0100               	movlb	0	; force () banked
  2683  00279E  EE20 F003          	lfsr	2,3
  2684  0027A2  51E3               	movf	BUTTONS_GetState@t_Buttons& (0+255),w,b
  2685  0027A4  26D9               	addwf	fsr2l,f,c
  2686  0027A6  51E4               	movf	(BUTTONS_GetState@t_Buttons+1)& (0+255),w,b
  2687  0027A8  22DA               	addwfc	fsr2h,f,c
  2688  0027AA  C08D  FFDF         	movff	_u8_ButtonSignal+3,indf2
  2689                           
  2690                           ; BSR set to: 0
  2691                           ;buttons.c: 25: t_Buttons->Temp3= u8_ButtonSignal[4];
  2692  0027AE  0100               	movlb	0	; force () banked
  2693  0027B0  EE20 F004          	lfsr	2,4
  2694  0027B4  51E3               	movf	BUTTONS_GetState@t_Buttons& (0+255),w,b
  2695  0027B6  26D9               	addwf	fsr2l,f,c
  2696  0027B8  51E4               	movf	(BUTTONS_GetState@t_Buttons+1)& (0+255),w,b
  2697  0027BA  22DA               	addwfc	fsr2h,f,c
  2698  0027BC  C08E  FFDF         	movff	_u8_ButtonSignal+4,indf2
  2699                           
  2700                           ; BSR set to: 0
  2701  0027C0  0012               	return		;funcret
  2702  0027C2                     __end_of_BUTTONS_GetState:
  2703                           	opt stack 0
  2704                           prodh	equ	0xFF4
  2705                           prodl	equ	0xFF3
  2706                           postinc0	equ	0xFEE
  2707                           wreg	equ	0xFE8
  2708                           indf2	equ	0xFDF
  2709                           postinc2	equ	0xFDE
  2710                           postdec2	equ	0xFDD
  2711                           fsr2h	equ	0xFDA
  2712                           fsr2l	equ	0xFD9
  2713                           status	equ	0xFD8
  2714                           
  2715 ;; *************** function _ADC_GetVoltageMV *****************
  2716 ;; Defined at:
  2717 ;;		line 47 in file "hal/adc.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;		None
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;		None
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  2   18[BANK0 ] unsigned int 
  2724 ;; Registers used:
  2725 ;;		None
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2731 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2734 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2735 ;;Total ram usage:        2 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:    2
  2738 ;; This function calls:
  2739 ;;		Nothing
  2740 ;; This function is called by:
  2741 ;;		_USER_Task
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           	psect	text12
  2746  002C42                     __ptext12:
  2747                           	opt stack 0
  2748  002C42                     _ADC_GetVoltageMV:
  2749                           	opt stack 27
  2750                           
  2751                           ;adc.c: 49: return u16_AdcVoltageMV;
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;incstack = 0
  2755  002C42  C0B1  F0E3         	movff	_u16_AdcVoltageMV,?_ADC_GetVoltageMV
  2756  002C46  C0B2  F0E4         	movff	_u16_AdcVoltageMV+1,?_ADC_GetVoltageMV+1
  2757  002C4A  0012               	return		;funcret
  2758  002C4C                     __end_of_ADC_GetVoltageMV:
  2759                           	opt stack 0
  2760                           prodh	equ	0xFF4
  2761                           prodl	equ	0xFF3
  2762                           postinc0	equ	0xFEE
  2763                           wreg	equ	0xFE8
  2764                           indf2	equ	0xFDF
  2765                           postinc2	equ	0xFDE
  2766                           postdec2	equ	0xFDD
  2767                           fsr2h	equ	0xFDA
  2768                           fsr2l	equ	0xFD9
  2769                           status	equ	0xFD8
  2770                           
  2771 ;; *************** function _USER_Init *****************
  2772 ;; Defined at:
  2773 ;;		line 20 in file "apl/user.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;		None
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  u16_TempNvmD    2    5[BANK1 ] unsigned int 
  2778 ;;  u16_StartupC    2    3[BANK1 ] unsigned int 
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2791 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2792 ;;Total ram usage:        4 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    5
  2795 ;; This function calls:
  2796 ;;		_LCD_Clear
  2797 ;;		_LCD_SetIcons
  2798 ;;		_LCD_SetPresetDigits
  2799 ;;		_LCD_Update
  2800 ;;		_NVM_Read
  2801 ;; This function is called by:
  2802 ;;		_main
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           	psect	text13
  2807  001D7A                     __ptext13:
  2808                           	opt stack 0
  2809  001D7A                     _USER_Init:
  2810                           	opt stack 25
  2811                           
  2812                           ;user.c: 22: uint16_t u16_StartupCounter= 0;
  2813                           
  2814                           ;incstack = 0
  2815  001D7A  0E00               	movlw	0
  2816  001D7C  0101               	movlb	1	; force () banked
  2817  001D7E  6F63               	movwf	(USER_Init@u16_StartupCounter+1)& (0+255),b
  2818  001D80  0E00               	movlw	0
  2819  001D82  6F62               	movwf	USER_Init@u16_StartupCounter& (0+255),b
  2820                           
  2821                           ;user.c: 23: uint16_t u16_TempNvmData= 0;
  2822  001D84  0E00               	movlw	0
  2823  001D86  0101               	movlb	1	; force () banked
  2824  001D88  6F65               	movwf	(USER_Init@u16_TempNvmData+1)& (0+255),b
  2825  001D8A  0E00               	movlw	0
  2826  001D8C  6F64               	movwf	USER_Init@u16_TempNvmData& (0+255),b
  2827                           
  2828                           ; BSR set to: 1
  2829                           ;user.c: 26: u16_TempNvmData= NVM_Read(0x000E);
  2830  001D8E  0E00               	movlw	0
  2831  001D90  0100               	movlb	0	; force () banked
  2832  001D92  6FE4               	movwf	(NVM_Read@u16_Address+1)& (0+255),b
  2833  001D94  0E0E               	movlw	14
  2834  001D96  6FE3               	movwf	NVM_Read@u16_Address& (0+255),b
  2835  001D98  EC0C  F014         	call	_NVM_Read	;wreg free
  2836  001D9C  C0E3  F164         	movff	?_NVM_Read,USER_Init@u16_TempNvmData
  2837  001DA0  C0E4  F165         	movff	?_NVM_Read+1,USER_Init@u16_TempNvmData+1
  2838                           
  2839                           ;user.c: 27: if(u16_TempNvmData <= 450)
  2840  001DA4  0EC3               	movlw	195
  2841  001DA6  0101               	movlb	1	; force () banked
  2842  001DA8  5D64               	subwf	USER_Init@u16_TempNvmData& (0+255),w,b
  2843  001DAA  0E01               	movlw	1
  2844  001DAC  5965               	subwfb	(USER_Init@u16_TempNvmData+1)& (0+255),w,b
  2845  001DAE  B0D8               	btfsc	status,0,c
  2846  001DB0  D005               	goto	l590
  2847                           
  2848                           ; BSR set to: 1
  2849                           ;user.c: 28: {
  2850                           ;user.c: 29: t_Temperatures.SetpointTemperature= u16_TempNvmData;
  2851  001DB2  C164  F082         	movff	USER_Init@u16_TempNvmData,_t_Temperatures+2
  2852  001DB6  C165  F083         	movff	USER_Init@u16_TempNvmData+1,_t_Temperatures+3
  2853                           
  2854                           ;user.c: 30: }
  2855  001DBA  D005               	goto	l591
  2856  001DBC                     l590:
  2857                           
  2858                           ; BSR set to: 1
  2859                           ;user.c: 31: else
  2860                           ;user.c: 32: {
  2861                           ;user.c: 33: t_Temperatures.SetpointTemperature= 360;
  2862                           
  2863                           ; BSR set to: 1
  2864  001DBC  0E01               	movlw	1
  2865  001DBE  0100               	movlb	0	; force () banked
  2866  001DC0  6F83               	movwf	(_t_Temperatures+3)& (0+255),b
  2867  001DC2  0E68               	movlw	104
  2868  001DC4  6F82               	movwf	(_t_Temperatures+2)& (0+255),b
  2869  001DC6                     l591:
  2870                           
  2871                           ;user.c: 34: }
  2872                           ;user.c: 36: u16_TempNvmData= NVM_Read(0x0002);
  2873                           
  2874                           ; BSR set to: 0
  2875  001DC6  0E00               	movlw	0
  2876  001DC8  0100               	movlb	0	; force () banked
  2877  001DCA  6FE4               	movwf	(NVM_Read@u16_Address+1)& (0+255),b
  2878  001DCC  0E02               	movlw	2
  2879  001DCE  6FE3               	movwf	NVM_Read@u16_Address& (0+255),b
  2880  001DD0  EC0C  F014         	call	_NVM_Read	;wreg free
  2881  001DD4  C0E3  F164         	movff	?_NVM_Read,USER_Init@u16_TempNvmData
  2882  001DD8  C0E4  F165         	movff	?_NVM_Read+1,USER_Init@u16_TempNvmData+1
  2883                           
  2884                           ;user.c: 37: if(u16_TempNvmData <= 450)
  2885  001DDC  0EC3               	movlw	195
  2886  001DDE  0101               	movlb	1	; force () banked
  2887  001DE0  5D64               	subwf	USER_Init@u16_TempNvmData& (0+255),w,b
  2888  001DE2  0E01               	movlw	1
  2889  001DE4  5965               	subwfb	(USER_Init@u16_TempNvmData+1)& (0+255),w,b
  2890  001DE6  B0D8               	btfsc	status,0,c
  2891  001DE8  D005               	goto	l592
  2892                           
  2893                           ; BSR set to: 1
  2894                           ;user.c: 38: {
  2895                           ;user.c: 39: t_Temperatures.PresetTemperature1= u16_TempNvmData;
  2896  001DEA  C164  F084         	movff	USER_Init@u16_TempNvmData,_t_Temperatures+4
  2897  001DEE  C165  F085         	movff	USER_Init@u16_TempNvmData+1,_t_Temperatures+5
  2898                           
  2899                           ;user.c: 40: }
  2900  001DF2  D005               	goto	l593
  2901  001DF4                     l592:
  2902                           
  2903                           ; BSR set to: 1
  2904                           ;user.c: 41: else
  2905                           ;user.c: 42: {
  2906                           ;user.c: 43: t_Temperatures.PresetTemperature1= 250;
  2907                           
  2908                           ; BSR set to: 1
  2909  001DF4  0E00               	movlw	0
  2910  001DF6  0100               	movlb	0	; force () banked
  2911  001DF8  6F85               	movwf	(_t_Temperatures+5)& (0+255),b
  2912  001DFA  0EFA               	movlw	250
  2913  001DFC  6F84               	movwf	(_t_Temperatures+4)& (0+255),b
  2914  001DFE                     l593:
  2915                           
  2916                           ;user.c: 44: }
  2917                           ;user.c: 46: u16_TempNvmData= NVM_Read(0x0004);
  2918                           
  2919                           ; BSR set to: 0
  2920  001DFE  0E00               	movlw	0
  2921  001E00  0100               	movlb	0	; force () banked
  2922  001E02  6FE4               	movwf	(NVM_Read@u16_Address+1)& (0+255),b
  2923  001E04  0E04               	movlw	4
  2924  001E06  6FE3               	movwf	NVM_Read@u16_Address& (0+255),b
  2925  001E08  EC0C  F014         	call	_NVM_Read	;wreg free
  2926  001E0C  C0E3  F164         	movff	?_NVM_Read,USER_Init@u16_TempNvmData
  2927  001E10  C0E4  F165         	movff	?_NVM_Read+1,USER_Init@u16_TempNvmData+1
  2928                           
  2929                           ;user.c: 47: if(u16_TempNvmData <= 450)
  2930  001E14  0EC3               	movlw	195
  2931  001E16  0101               	movlb	1	; force () banked
  2932  001E18  5D64               	subwf	USER_Init@u16_TempNvmData& (0+255),w,b
  2933  001E1A  0E01               	movlw	1
  2934  001E1C  5965               	subwfb	(USER_Init@u16_TempNvmData+1)& (0+255),w,b
  2935  001E1E  B0D8               	btfsc	status,0,c
  2936  001E20  D005               	goto	l594
  2937                           
  2938                           ; BSR set to: 1
  2939                           ;user.c: 48: {
  2940                           ;user.c: 49: t_Temperatures.PresetTemperature2= u16_TempNvmData;
  2941  001E22  C164  F086         	movff	USER_Init@u16_TempNvmData,_t_Temperatures+6
  2942  001E26  C165  F087         	movff	USER_Init@u16_TempNvmData+1,_t_Temperatures+7
  2943                           
  2944                           ;user.c: 50: }
  2945  001E2A  D005               	goto	l595
  2946  001E2C                     l594:
  2947                           
  2948                           ; BSR set to: 1
  2949                           ;user.c: 51: else
  2950                           ;user.c: 52: {
  2951                           ;user.c: 53: t_Temperatures.PresetTemperature2= 360;
  2952                           
  2953                           ; BSR set to: 1
  2954  001E2C  0E01               	movlw	1
  2955  001E2E  0100               	movlb	0	; force () banked
  2956  001E30  6F87               	movwf	(_t_Temperatures+7)& (0+255),b
  2957  001E32  0E68               	movlw	104
  2958  001E34  6F86               	movwf	(_t_Temperatures+6)& (0+255),b
  2959  001E36                     l595:
  2960                           
  2961                           ;user.c: 54: }
  2962                           ;user.c: 56: u16_TempNvmData= NVM_Read(0x0006);
  2963                           
  2964                           ; BSR set to: 0
  2965  001E36  0E00               	movlw	0
  2966  001E38  0100               	movlb	0	; force () banked
  2967  001E3A  6FE4               	movwf	(NVM_Read@u16_Address+1)& (0+255),b
  2968  001E3C  0E06               	movlw	6
  2969  001E3E  6FE3               	movwf	NVM_Read@u16_Address& (0+255),b
  2970  001E40  EC0C  F014         	call	_NVM_Read	;wreg free
  2971  001E44  C0E3  F164         	movff	?_NVM_Read,USER_Init@u16_TempNvmData
  2972  001E48  C0E4  F165         	movff	?_NVM_Read+1,USER_Init@u16_TempNvmData+1
  2973                           
  2974                           ;user.c: 57: if(u16_TempNvmData <= 450)
  2975  001E4C  0EC3               	movlw	195
  2976  001E4E  0101               	movlb	1	; force () banked
  2977  001E50  5D64               	subwf	USER_Init@u16_TempNvmData& (0+255),w,b
  2978  001E52  0E01               	movlw	1
  2979  001E54  5965               	subwfb	(USER_Init@u16_TempNvmData+1)& (0+255),w,b
  2980  001E56  B0D8               	btfsc	status,0,c
  2981  001E58  D005               	goto	l596
  2982                           
  2983                           ; BSR set to: 1
  2984                           ;user.c: 58: {
  2985                           ;user.c: 59: t_Temperatures.PresetTemperature3= u16_TempNvmData;
  2986  001E5A  C164  F088         	movff	USER_Init@u16_TempNvmData,_t_Temperatures+8
  2987  001E5E  C165  F089         	movff	USER_Init@u16_TempNvmData+1,_t_Temperatures+9
  2988                           
  2989                           ;user.c: 60: }
  2990  001E62  D005               	goto	l597
  2991  001E64                     l596:
  2992                           
  2993                           ; BSR set to: 1
  2994                           ;user.c: 61: else
  2995                           ;user.c: 62: {
  2996                           ;user.c: 63: t_Temperatures.PresetTemperature3= 420;
  2997                           
  2998                           ; BSR set to: 1
  2999  001E64  0E01               	movlw	1
  3000  001E66  0100               	movlb	0	; force () banked
  3001  001E68  6F89               	movwf	(_t_Temperatures+9)& (0+255),b
  3002  001E6A  0EA4               	movlw	164
  3003  001E6C  6F88               	movwf	(_t_Temperatures+8)& (0+255),b
  3004  001E6E                     l597:
  3005                           
  3006                           ;user.c: 64: }
  3007                           ;user.c: 78: LCD_Clear();
  3008                           
  3009                           ; BSR set to: 0
  3010  001E6E  ECA4  F015         	call	_LCD_Clear	;wreg free
  3011                           
  3012                           ;user.c: 79: LCD_SetPresetDigits(t_Temperatures.PresetTemperature1,3, 1);
  3013  001E72  C084  F0E7         	movff	_t_Temperatures+4,LCD_SetPresetDigits@u16_PresetData
  3014  001E76  C085  F0E8         	movff	_t_Temperatures+5,LCD_SetPresetDigits@u16_PresetData+1
  3015  001E7A  0E03               	movlw	3
  3016  001E7C  0100               	movlb	0	; force () banked
  3017  001E7E  6FE9               	movwf	LCD_SetPresetDigits@u8_Preset& (0+255),b
  3018  001E80  0E01               	movlw	1
  3019  001E82  0100               	movlb	0	; force () banked
  3020  001E84  6FEA               	movwf	LCD_SetPresetDigits@bFlag_Number& (0+255),b
  3021  001E86  EC48  F00C         	call	_LCD_SetPresetDigits	;wreg free
  3022                           
  3023                           ;user.c: 80: LCD_SetPresetDigits(t_Temperatures.PresetTemperature2,6, 1);
  3024  001E8A  C086  F0E7         	movff	_t_Temperatures+6,LCD_SetPresetDigits@u16_PresetData
  3025  001E8E  C087  F0E8         	movff	_t_Temperatures+7,LCD_SetPresetDigits@u16_PresetData+1
  3026  001E92  0E06               	movlw	6
  3027  001E94  0100               	movlb	0	; force () banked
  3028  001E96  6FE9               	movwf	LCD_SetPresetDigits@u8_Preset& (0+255),b
  3029  001E98  0E01               	movlw	1
  3030  001E9A  0100               	movlb	0	; force () banked
  3031  001E9C  6FEA               	movwf	LCD_SetPresetDigits@bFlag_Number& (0+255),b
  3032  001E9E  EC48  F00C         	call	_LCD_SetPresetDigits	;wreg free
  3033                           
  3034                           ;user.c: 81: LCD_SetPresetDigits(t_Temperatures.PresetTemperature3,9, 1);
  3035  001EA2  C088  F0E7         	movff	_t_Temperatures+8,LCD_SetPresetDigits@u16_PresetData
  3036  001EA6  C089  F0E8         	movff	_t_Temperatures+9,LCD_SetPresetDigits@u16_PresetData+1
  3037  001EAA  0E09               	movlw	9
  3038  001EAC  0100               	movlb	0	; force () banked
  3039  001EAE  6FE9               	movwf	LCD_SetPresetDigits@u8_Preset& (0+255),b
  3040  001EB0  0E01               	movlw	1
  3041  001EB2  0100               	movlb	0	; force () banked
  3042  001EB4  6FEA               	movwf	LCD_SetPresetDigits@bFlag_Number& (0+255),b
  3043  001EB6  EC48  F00C         	call	_LCD_SetPresetDigits	;wreg free
  3044                           
  3045                           ;user.c: 82: LCD_SetIcons(0);
  3046  001EBA  0E00               	movlw	0
  3047  001EBC  EC0E  F015         	call	_LCD_SetIcons
  3048                           
  3049                           ;user.c: 83: LCD_Update();
  3050  001EC0  ECED  F015         	call	_LCD_Update	;wreg free
  3051  001EC4  0012               	return		;funcret
  3052  001EC6                     __end_of_USER_Init:
  3053                           	opt stack 0
  3054                           prodh	equ	0xFF4
  3055                           prodl	equ	0xFF3
  3056                           postinc0	equ	0xFEE
  3057                           wreg	equ	0xFE8
  3058                           indf2	equ	0xFDF
  3059                           postinc2	equ	0xFDE
  3060                           postdec2	equ	0xFDD
  3061                           fsr2h	equ	0xFDA
  3062                           fsr2l	equ	0xFD9
  3063                           status	equ	0xFD8
  3064                           
  3065 ;; *************** function _NVM_Read *****************
  3066 ;; Defined at:
  3067 ;;		line 148 in file "hal/nvm.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  u16_Address     2   18[BANK0 ] unsigned int 
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  u16_Temp        2   20[BANK0 ] unsigned int 
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  2   18[BANK0 ] unsigned int 
  3074 ;; Registers used:
  3075 ;;		wreg, status,2, status,0
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3081 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3082 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;Total ram usage:        4 bytes
  3086 ;; Hardware stack levels used:    1
  3087 ;; Hardware stack levels required when called:    2
  3088 ;; This function calls:
  3089 ;;		Nothing
  3090 ;; This function is called by:
  3091 ;;		_USER_Init
  3092 ;;		_USER_Task
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           	psect	text14
  3097  002818                     __ptext14:
  3098                           	opt stack 0
  3099  002818                     _NVM_Read:
  3100                           	opt stack 27
  3101                           
  3102                           ;nvm.c: 150: uint16_t u16_Temp= 0;
  3103                           
  3104                           ;incstack = 0
  3105  002818  0E00               	movlw	0
  3106  00281A  0100               	movlb	0	; force () banked
  3107  00281C  6FE6               	movwf	(NVM_Read@u16_Temp+1)& (0+255),b
  3108  00281E  0E00               	movlw	0
  3109  002820  6FE5               	movwf	NVM_Read@u16_Temp& (0+255),b
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;nvm.c: 151: if(u16_Address < 0x03FF)
  3113  002822  0100               	movlb	0	; force () banked
  3114  002824  29E3               	incf	NVM_Read@u16_Address& (0+255),w,b
  3115  002826  0E03               	movlw	3
  3116  002828  59E4               	subwfb	(NVM_Read@u16_Address+1)& (0+255),w,b
  3117  00282A  B0D8               	btfsc	status,0,c
  3118  00282C  D019               	goto	l791
  3119                           
  3120                           ; BSR set to: 0
  3121                           ;nvm.c: 152: {
  3122                           ;nvm.c: 153: EEADR= u16_Address;
  3123  00282E  C0E3  FFA9         	movff	NVM_Read@u16_Address,4009	;volatile
  3124                           
  3125                           ;nvm.c: 154: EECON1bits.EEPGD= 0;
  3126  002832  9EA6               	bcf	4006,7,c	;volsfr
  3127                           
  3128                           ;nvm.c: 155: EECON1bits.CFGS= 0;
  3129  002834  9CA6               	bcf	4006,6,c	;volsfr
  3130                           
  3131                           ;nvm.c: 156: EECON1bits.RD= 1;
  3132  002836  80A6               	bsf	4006,0,c	;volsfr
  3133                           
  3134                           ;nvm.c: 157: u16_Temp= EEDATA;
  3135  002838  CFA8 F0E5          	movff	4008,NVM_Read@u16_Temp	;volatile
  3136  00283C  0100               	movlb	0	; force () banked
  3137  00283E  6BE6               	clrf	(NVM_Read@u16_Temp+1)& (0+255),b
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;nvm.c: 158: u16_Temp= u16_Temp << 8;
  3141  002840  0100               	movlb	0	; force () banked
  3142  002842  51E5               	movf	NVM_Read@u16_Temp& (0+255),w,b
  3143  002844  6FE6               	movwf	(NVM_Read@u16_Temp+1)& (0+255),b
  3144  002846  6BE5               	clrf	NVM_Read@u16_Temp& (0+255),b
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;nvm.c: 160: EEADR= u16_Address+1;
  3148  002848  0100               	movlb	0	; force () banked
  3149  00284A  29E3               	incf	NVM_Read@u16_Address& (0+255),w,b
  3150  00284C  6EA9               	movwf	4009,c	;volatile
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;nvm.c: 161: EECON1bits.RD= 1;
  3154  00284E  80A6               	bsf	4006,0,c	;volsfr
  3155                           
  3156                           ; BSR set to: 0
  3157                           ;nvm.c: 162: u16_Temp|= EEDATA & 0x00ff;
  3158  002850  50A8               	movf	4008,w,c	;volatile
  3159  002852  0100               	movlb	0	; force () banked
  3160  002854  13E5               	iorwf	NVM_Read@u16_Temp& (0+255),f,b
  3161                           
  3162                           ; BSR set to: 0
  3163                           ;nvm.c: 164: return u16_Temp;
  3164  002856  C0E5  F0E3         	movff	NVM_Read@u16_Temp,?_NVM_Read
  3165  00285A  C0E6  F0E4         	movff	NVM_Read@u16_Temp+1,?_NVM_Read+1
  3166                           
  3167                           ; BSR set to: 0
  3168  00285E  0012               	return	
  3169  002860                     l791:
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;nvm.c: 165: }
  3173                           ;nvm.c: 166: return 0;
  3174                           
  3175                           ; BSR set to: 0
  3176  002860  0E00               	movlw	0
  3177  002862  0100               	movlb	0	; force () banked
  3178  002864  6FE4               	movwf	(?_NVM_Read+1)& (0+255),b
  3179  002866  0E00               	movlw	0
  3180  002868  6FE3               	movwf	?_NVM_Read& (0+255),b
  3181  00286A  0012               	return	
  3182  00286C                     __end_of_NVM_Read:
  3183                           	opt stack 0
  3184                           prodh	equ	0xFF4
  3185                           prodl	equ	0xFF3
  3186                           postinc0	equ	0xFEE
  3187                           wreg	equ	0xFE8
  3188                           indf2	equ	0xFDF
  3189                           postinc2	equ	0xFDE
  3190                           postdec2	equ	0xFDD
  3191                           fsr2h	equ	0xFDA
  3192                           fsr2l	equ	0xFD9
  3193                           status	equ	0xFD8
  3194                           
  3195 ;; *************** function _LCD_Update *****************
  3196 ;; Defined at:
  3197 ;;		line 487 in file "mid/lcd.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;		None
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, status,0
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;Total ram usage:        0 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:    2
  3218 ;; This function calls:
  3219 ;;		Nothing
  3220 ;; This function is called by:
  3221 ;;		_main
  3222 ;;		_USER_Init
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text15
  3227  002BDA                     __ptext15:
  3228                           	opt stack 0
  3229  002BDA                     _LCD_Update:
  3230                           	opt stack 27
  3231                           
  3232                           ;lcd.c: 489: if(u8_LCD_State == 0)
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;incstack = 0
  3236  002BDA  0100               	movlb	0	; force () banked
  3237  002BDC  51AD               	movf	_u8_LCD_State& (0+255),w,b
  3238  002BDE  11AE               	iorwf	(_u8_LCD_State+1)& (0+255),w,b
  3239  002BE0  A4D8               	btfss	status,2,c
  3240  002BE2  0012               	return	
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;lcd.c: 490: {
  3244                           ;lcd.c: 491: u8_LCD_State= 1;
  3245  002BE4  0E00               	movlw	0
  3246  002BE6  0100               	movlb	0	; force () banked
  3247  002BE8  6FAE               	movwf	(_u8_LCD_State+1)& (0+255),b
  3248  002BEA  0E01               	movlw	1
  3249  002BEC  6FAD               	movwf	_u8_LCD_State& (0+255),b
  3250  002BEE  0012               	return	
  3251  002BF0                     __end_of_LCD_Update:
  3252                           	opt stack 0
  3253                           prodh	equ	0xFF4
  3254                           prodl	equ	0xFF3
  3255                           postinc0	equ	0xFEE
  3256                           wreg	equ	0xFE8
  3257                           indf2	equ	0xFDF
  3258                           postinc2	equ	0xFDE
  3259                           postdec2	equ	0xFDD
  3260                           fsr2h	equ	0xFDA
  3261                           fsr2l	equ	0xFD9
  3262                           status	equ	0xFD8
  3263                           
  3264 ;; *************** function _LCD_SetPresetDigits *****************
  3265 ;; Defined at:
  3266 ;;		line 172 in file "mid/lcd.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  u16_PresetDa    2   22[BANK0 ] unsigned int 
  3269 ;;  u8_Preset       1   24[BANK0 ] unsigned char 
  3270 ;;  bFlag_Number    1   25[BANK0 ] unsigned char 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  u8_TempArray    3    0[BANK1 ] unsigned char [3]
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3282 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;      Totals:         0       6       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3286 ;;Total ram usage:        9 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:    4
  3289 ;; This function calls:
  3290 ;;		_LCD_Bcd2Segment
  3291 ;;		_LCD_Dec2Bcd
  3292 ;;		_LCD_SetData
  3293 ;; This function is called by:
  3294 ;;		_USER_Init
  3295 ;;		_USER_Task
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           	psect	text16
  3300  001890                     __ptext16:
  3301                           	opt stack 0
  3302  001890                     _LCD_SetPresetDigits:
  3303                           	opt stack 25
  3304                           
  3305                           ;lcd.c: 174: uint8_t u8_TempArray[3];
  3306                           ;lcd.c: 176: if(bFlag_Number == 1)
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;incstack = 0
  3310  001890  0100               	movlb	0	; force () banked
  3311  001892  05EA               	decf	LCD_SetPresetDigits@bFlag_Number& (0+255),w,b
  3312  001894  A4D8               	btfss	status,2,c
  3313  001896  D0E0               	goto	l404
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;lcd.c: 177: {
  3317                           ;lcd.c: 178: LCD_Dec2Bcd(u16_PresetData, &u8_TempArray[0]);
  3318  001898  C0E7  F0E3         	movff	LCD_SetPresetDigits@u16_PresetData,LCD_Dec2Bcd@u16_DecimalData
  3319  00189C  C0E8  F0E4         	movff	LCD_SetPresetDigits@u16_PresetData+1,LCD_Dec2Bcd@u16_DecimalData+1
  3320  0018A0  0E5F               	movlw	low LCD_SetPresetDigits@u8_TempArray
  3321  0018A2  0100               	movlb	0	; force () banked
  3322  0018A4  6FE5               	movwf	LCD_Dec2Bcd@ptrBCD& (0+255),b
  3323  0018A6  0E01               	movlw	high LCD_SetPresetDigits@u8_TempArray
  3324  0018A8  6FE6               	movwf	(LCD_Dec2Bcd@ptrBCD+1)& (0+255),b
  3325  0018AA  EC37  F012         	call	_LCD_Dec2Bcd	;wreg free
  3326                           
  3327                           ;lcd.c: 181: if(u16_PresetData > 99)
  3328  0018AE  0100               	movlb	0	; force () banked
  3329  0018B0  51E8               	movf	(LCD_SetPresetDigits@u16_PresetData+1)& (0+255),w,b
  3330  0018B2  E104               	bnz	u4440
  3331  0018B4  0E64               	movlw	100
  3332  0018B6  5DE7               	subwf	LCD_SetPresetDigits@u16_PresetData& (0+255),w,b
  3333  0018B8  A0D8               	btfss	status,0,c
  3334  0018BA  D026               	goto	l391
  3335  0018BC                     u4440:
  3336                           
  3337                           ; BSR set to: 0
  3338                           ;lcd.c: 182: {
  3339                           ;lcd.c: 185: if(u8_Preset == 3)
  3340  0018BC  0E03               	movlw	3
  3341  0018BE  0100               	movlb	0	; force () banked
  3342  0018C0  19E9               	xorwf	LCD_SetPresetDigits@u8_Preset& (0+255),w,b
  3343  0018C2  A4D8               	btfss	status,2,c
  3344  0018C4  D019               	goto	l392
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;lcd.c: 186: {
  3348                           ;lcd.c: 188: if(!((u8_TempArray[0] == 0) || (u8_TempArray[0] == 8)))
  3349  0018C6  0101               	movlb	1	; force () banked
  3350  0018C8  515F               	movf	LCD_SetPresetDigits@u8_TempArray& (0+255),w,b
  3351  0018CA  B4D8               	btfsc	status,2,c
  3352  0018CC  D00D               	goto	l393
  3353                           
  3354                           ; BSR set to: 1
  3355  0018CE  0E08               	movlw	8
  3356  0018D0  0101               	movlb	1	; force () banked
  3357  0018D2  195F               	xorwf	LCD_SetPresetDigits@u8_TempArray& (0+255),w,b
  3358  0018D4  B4D8               	btfsc	status,2,c
  3359  0018D6  D008               	goto	l393
  3360                           
  3361                           ; BSR set to: 1
  3362                           ;lcd.c: 189: {
  3363                           ;lcd.c: 190: u8_TempArray[0]= LCD_Bcd2Segment(u8_TempArray[0],2);
  3364  0018D8  0E02               	movlw	2
  3365  0018DA  0100               	movlb	0	; force () banked
  3366  0018DC  6FE3               	movwf	LCD_Bcd2Segment@u8_DigitType& (0+255),b
  3367  0018DE  0101               	movlb	1	; force () banked
  3368  0018E0  515F               	movf	LCD_SetPresetDigits@u8_TempArray& (0+255),w,b
  3369  0018E2  EC63  F00F         	call	_LCD_Bcd2Segment
  3370  0018E6  D011               	goto	L5
  3371  0018E8                     l393:
  3372                           
  3373                           ; BSR set to: 1
  3374                           ;lcd.c: 192: else
  3375                           ;lcd.c: 193: {
  3376                           ;lcd.c: 194: u8_TempArray[0]= LCD_Bcd2Segment(u8_TempArray[0],1);
  3377                           
  3378                           ; BSR set to: 1
  3379  0018E8  0E01               	movlw	1
  3380  0018EA  0100               	movlb	0	; force () banked
  3381  0018EC  6FE3               	movwf	LCD_Bcd2Segment@u8_DigitType& (0+255),b
  3382  0018EE  0101               	movlb	1	; force () banked
  3383  0018F0  515F               	movf	LCD_SetPresetDigits@u8_TempArray& (0+255),w,b
  3384  0018F2  EC63  F00F         	call	_LCD_Bcd2Segment
  3385  0018F6  D009               	goto	L5
  3386  0018F8                     l392:
  3387                           
  3388                           ;lcd.c: 197: else
  3389                           ;lcd.c: 198: {
  3390                           ;lcd.c: 199: u8_TempArray[0]= LCD_Bcd2Segment(u8_TempArray[0],1);
  3391                           
  3392                           ; BSR set to: 1
  3393  0018F8  0E01               	movlw	1
  3394  0018FA  0100               	movlb	0	; force () banked
  3395  0018FC  6FE3               	movwf	LCD_Bcd2Segment@u8_DigitType& (0+255),b
  3396  0018FE  0101               	movlb	1	; force () banked
  3397  001900  515F               	movf	LCD_SetPresetDigits@u8_TempArray& (0+255),w,b
  3398  001902  EC63  F00F         	call	_LCD_Bcd2Segment
  3399  001906  D001               	goto	L5
  3400  001908                     l391:
  3401                           
  3402                           ;lcd.c: 203: else
  3403                           ;lcd.c: 204: {
  3404                           ;lcd.c: 205: u8_TempArray[0]= 0;
  3405                           
  3406                           ; BSR set to: 1
  3407  001908  0E00               	movlw	0
  3408  00190A                     L5:
  3409  00190A  0101               	movlb	1	; force () banked
  3410  00190C  6F5F               	movwf	LCD_SetPresetDigits@u8_TempArray& (0+255),b
  3411                           
  3412                           ; BSR set to: 1
  3413                           ;lcd.c: 206: }
  3414                           ;lcd.c: 209: if(u16_PresetData > 9)
  3415                           
  3416                           ; BSR set to: 1
  3417  00190E  0100               	movlb	0	; force () banked
  3418  001910  51E8               	movf	(LCD_SetPresetDigits@u16_PresetData+1)& (0+255),w,b
  3419  001912  E104               	bnz	u4480
  3420  001914  0E0A               	movlw	10
  3421  001916  5DE7               	subwf	LCD_SetPresetDigits@u16_PresetData& (0+255),w,b
  3422  001918  A0D8               	btfss	status,0,c
  3423  00191A  D026               	goto	l397
  3424  00191C                     u4480:
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;lcd.c: 210: {
  3428                           ;lcd.c: 211: if(u8_Preset == 3)
  3429  00191C  0E03               	movlw	3
  3430  00191E  0100               	movlb	0	; force () banked
  3431  001920  19E9               	xorwf	LCD_SetPresetDigits@u8_Preset& (0+255),w,b
  3432  001922  A4D8               	btfss	status,2,c
  3433  001924  D019               	goto	l398
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;lcd.c: 212: {
  3437                           ;lcd.c: 213: if(!((u8_TempArray[1] == 0) || (u8_TempArray[1] == 8)))
  3438  001926  0101               	movlb	1	; force () banked
  3439  001928  5160               	movf	(LCD_SetPresetDigits@u8_TempArray+1)& (0+255),w,b
  3440  00192A  B4D8               	btfsc	status,2,c
  3441  00192C  D00D               	goto	l399
  3442                           
  3443                           ; BSR set to: 1
  3444  00192E  0E08               	movlw	8
  3445  001930  0101               	movlb	1	; force () banked
  3446  001932  1960               	xorwf	(LCD_SetPresetDigits@u8_TempArray+1)& (0+255),w,b
  3447  001934  B4D8               	btfsc	status,2,c
  3448  001936  D008               	goto	l399
  3449                           
  3450                           ; BSR set to: 1
  3451                           ;lcd.c: 214: {
  3452                           ;lcd.c: 215: u8_TempArray[1]= LCD_Bcd2Segment(u8_TempArray[1],2);
  3453  001938  0E02               	movlw	2
  3454  00193A  0100               	movlb	0	; force () banked
  3455  00193C  6FE3               	movwf	LCD_Bcd2Segment@u8_DigitType& (0+255),b
  3456  00193E  0101               	movlb	1	; force () banked
  3457  001940  5160               	movf	(LCD_SetPresetDigits@u8_TempArray+1)& (0+255),w,b
  3458  001942  EC63  F00F         	call	_LCD_Bcd2Segment
  3459  001946  D011               	goto	L8
  3460  001948                     l399:
  3461                           
  3462                           ; BSR set to: 1
  3463                           ;lcd.c: 217: else
  3464                           ;lcd.c: 218: {
  3465                           ;lcd.c: 219: u8_TempArray[1]= LCD_Bcd2Segment(u8_TempArray[1],1);
  3466                           
  3467                           ; BSR set to: 1
  3468  001948  0E01               	movlw	1
  3469  00194A  0100               	movlb	0	; force () banked
  3470  00194C  6FE3               	movwf	LCD_Bcd2Segment@u8_DigitType& (0+255),b
  3471  00194E  0101               	movlb	1	; force () banked
  3472  001950  5160               	movf	(LCD_SetPresetDigits@u8_TempArray+1)& (0+255),w,b
  3473  001952  EC63  F00F         	call	_LCD_Bcd2Segment
  3474  001956  D009               	goto	L8
  3475  001958                     l398:
  3476                           
  3477                           ;lcd.c: 222: else
  3478                           ;lcd.c: 223: {
  3479                           ;lcd.c: 224: u8_TempArray[1]= LCD_Bcd2Segment(u8_TempArray[1],1);
  3480                           
  3481                           ; BSR set to: 1
  3482  001958  0E01               	movlw	1
  3483  00195A  0100               	movlb	0	; force () banked
  3484  00195C  6FE3               	movwf	LCD_Bcd2Segment@u8_DigitType& (0+255),b
  3485  00195E  0101               	movlb	1	; force () banked
  3486  001960  5160               	movf	(LCD_SetPresetDigits@u8_TempArray+1)& (0+255),w,b
  3487  001962  EC63  F00F         	call	_LCD_Bcd2Segment
  3488  001966  D001               	goto	L8
  3489  001968                     l397:
  3490                           
  3491                           ;lcd.c: 227: else
  3492                           ;lcd.c: 228: {
  3493                           ;lcd.c: 229: u8_TempArray[1]= 0;
  3494                           
  3495                           ; BSR set to: 1
  3496  001968  0E00               	movlw	0
  3497  00196A                     L8:
  3498  00196A  0101               	movlb	1	; force () banked
  3499  00196C  6F60               	movwf	(LCD_SetPresetDigits@u8_TempArray+1)& (0+255),b
  3500                           
  3501                           ; BSR set to: 1
  3502                           ;lcd.c: 230: }
  3503                           ;lcd.c: 232: u8_TempArray[2]= LCD_Bcd2Segment(u8_TempArray[2],1);
  3504                           
  3505                           ; BSR set to: 1
  3506  00196E  0E01               	movlw	1
  3507  001970  0100               	movlb	0	; force () banked
  3508  001972  6FE3               	movwf	LCD_Bcd2Segment@u8_DigitType& (0+255),b
  3509  001974  0101               	movlb	1	; force () banked
  3510  001976  5161               	movf	(LCD_SetPresetDigits@u8_TempArray+2)& (0+255),w,b
  3511  001978  EC63  F00F         	call	_LCD_Bcd2Segment
  3512  00197C  0101               	movlb	1	; force () banked
  3513  00197E  6F61               	movwf	(LCD_SetPresetDigits@u8_TempArray+2)& (0+255),b
  3514                           
  3515                           ; BSR set to: 1
  3516                           ;lcd.c: 234: LCD_SetData(u8_TempArray[0],u8_Preset);
  3517  001980  C0E9  F0E3         	movff	LCD_SetPresetDigits@u8_Preset,LCD_SetData@u8_Position
  3518  001984  0101               	movlb	1	; force () banked
  3519  001986  515F               	movf	LCD_SetPresetDigits@u8_TempArray& (0+255),w,b
  3520  001988  EC5F  F014         	call	_LCD_SetData
  3521                           
  3522                           ;lcd.c: 235: LCD_SetData(u8_TempArray[1],u8_Preset+1);
  3523  00198C  0100               	movlb	0	; force () banked
  3524  00198E  29E9               	incf	LCD_SetPresetDigits@u8_Preset& (0+255),w,b
  3525  001990  0100               	movlb	0	; force () banked
  3526  001992  6FE3               	movwf	LCD_SetData@u8_Position& (0+255),b
  3527  001994  0101               	movlb	1	; force () banked
  3528  001996  5160               	movf	(LCD_SetPresetDigits@u8_TempArray+1)& (0+255),w,b
  3529  001998  EC5F  F014         	call	_LCD_SetData
  3530                           
  3531                           ;lcd.c: 236: LCD_SetData(u8_TempArray[2],u8_Preset+2);
  3532  00199C  0100               	movlb	0	; force () banked
  3533  00199E  51E9               	movf	LCD_SetPresetDigits@u8_Preset& (0+255),w,b
  3534  0019A0  0F02               	addlw	2
  3535  0019A2  0100               	movlb	0	; force () banked
  3536  0019A4  6FE3               	movwf	LCD_SetData@u8_Position& (0+255),b
  3537  0019A6  0101               	movlb	1	; force () banked
  3538  0019A8  5161               	movf	(LCD_SetPresetDigits@u8_TempArray+2)& (0+255),w,b
  3539  0019AA  EC5F  F014         	call	_LCD_SetData
  3540                           
  3541                           ;lcd.c: 237: }
  3542  0019AE  0012               	return	
  3543  0019B0  C0E9  F0E3         	movff	LCD_SetPresetDigits@u8_Preset,LCD_SetData@u8_Position
  3544  0019B4  0E5E               	movlw	94
  3545  0019B6  EC5F  F014         	call	_LCD_SetData
  3546                           
  3547                           ;lcd.c: 243: LCD_SetData(0b11011100,u8_Preset+1);
  3548  0019BA  0100               	movlb	0	; force () banked
  3549  0019BC  29E9               	incf	LCD_SetPresetDigits@u8_Preset& (0+255),w,b
  3550  0019BE  0100               	movlb	0	; force () banked
  3551  0019C0  6FE3               	movwf	LCD_SetData@u8_Position& (0+255),b
  3552  0019C2  0EDC               	movlw	220
  3553  0019C4  EC5F  F014         	call	_LCD_SetData
  3554                           
  3555                           ;lcd.c: 244: LCD_SetData(0b11010000,u8_Preset+2);
  3556  0019C8  0100               	movlb	0	; force () banked
  3557  0019CA  51E9               	movf	LCD_SetPresetDigits@u8_Preset& (0+255),w,b
  3558  0019CC  0F02               	addlw	2
  3559  0019CE  0100               	movlb	0	; force () banked
  3560  0019D0  6FE3               	movwf	LCD_SetData@u8_Position& (0+255),b
  3561  0019D2  0ED0               	movlw	208
  3562  0019D4  EC5F  F014         	call	_LCD_SetData
  3563                           
  3564                           ;lcd.c: 245: break;
  3565  0019D8  0012               	return	
  3566  0019DA  C0E9  F0E3         	movff	LCD_SetPresetDigits@u8_Preset,LCD_SetData@u8_Position
  3567  0019DE  0ED4               	movlw	212
  3568  0019E0  EC5F  F014         	call	_LCD_SetData
  3569                           
  3570                           ;lcd.c: 248: LCD_SetData(0b11001111,u8_Preset+1);
  3571  0019E4  0100               	movlb	0	; force () banked
  3572  0019E6  29E9               	incf	LCD_SetPresetDigits@u8_Preset& (0+255),w,b
  3573  0019E8  0100               	movlb	0	; force () banked
  3574  0019EA  6FE3               	movwf	LCD_SetData@u8_Position& (0+255),b
  3575  0019EC  0ECF               	movlw	207
  3576  0019EE  EC5F  F014         	call	_LCD_SetData
  3577                           
  3578                           ;lcd.c: 249: LCD_SetData(0b11000111,u8_Preset+2);
  3579  0019F2  0100               	movlb	0	; force () banked
  3580  0019F4  51E9               	movf	LCD_SetPresetDigits@u8_Preset& (0+255),w,b
  3581  0019F6  0F02               	addlw	2
  3582  0019F8  0100               	movlb	0	; force () banked
  3583  0019FA  6FE3               	movwf	LCD_SetData@u8_Position& (0+255),b
  3584  0019FC  0EC7               	movlw	199
  3585  0019FE  EC5F  F014         	call	_LCD_SetData
  3586                           
  3587                           ;lcd.c: 250: break;
  3588  001A02  0012               	return	
  3589  001A04  C0E9  F0E3         	movff	LCD_SetPresetDigits@u8_Preset,LCD_SetData@u8_Position
  3590  001A08  0EDC               	movlw	220
  3591  001A0A  EC5F  F014         	call	_LCD_SetData
  3592                           
  3593                           ;lcd.c: 253: LCD_SetData(0b01011110,u8_Preset+1);
  3594  001A0E  0100               	movlb	0	; force () banked
  3595  001A10  29E9               	incf	LCD_SetPresetDigits@u8_Preset& (0+255),w,b
  3596  001A12  0100               	movlb	0	; force () banked
  3597  001A14  6FE3               	movwf	LCD_SetData@u8_Position& (0+255),b
  3598  001A16  0E5E               	movlw	94
  3599  001A18  EC5F  F014         	call	_LCD_SetData
  3600                           
  3601                           ;lcd.c: 254: LCD_SetData(0b11010100,u8_Preset+2);
  3602  001A1C  0100               	movlb	0	; force () banked
  3603  001A1E  51E9               	movf	LCD_SetPresetDigits@u8_Preset& (0+255),w,b
  3604  001A20  0F02               	addlw	2
  3605  001A22  0100               	movlb	0	; force () banked
  3606  001A24  6FE3               	movwf	LCD_SetData@u8_Position& (0+255),b
  3607  001A26  0ED4               	movlw	212
  3608  001A28  EC5F  F014         	call	_LCD_SetData
  3609                           
  3610                           ;lcd.c: 255: break;
  3611  001A2C  0012               	return	
  3612  001A2E  C0E9  F0E3         	movff	LCD_SetPresetDigits@u8_Preset,LCD_SetData@u8_Position
  3613  001A32  0EDC               	movlw	220
  3614  001A34  EC5F  F014         	call	_LCD_SetData
  3615                           
  3616                           ;lcd.c: 258: LCD_SetData(0b11000111,u8_Preset+1);
  3617  001A38  0100               	movlb	0	; force () banked
  3618  001A3A  29E9               	incf	LCD_SetPresetDigits@u8_Preset& (0+255),w,b
  3619  001A3C  0100               	movlb	0	; force () banked
  3620  001A3E  6FE3               	movwf	LCD_SetData@u8_Position& (0+255),b
  3621  001A40  0EC7               	movlw	199
  3622  001A42  EC5F  F014         	call	_LCD_SetData
  3623                           
  3624                           ;lcd.c: 259: LCD_SetData(0b11011000,u8_Preset+2);
  3625  001A46  0100               	movlb	0	; force () banked
  3626  001A48  51E9               	movf	LCD_SetPresetDigits@u8_Preset& (0+255),w,b
  3627  001A4A  0F02               	addlw	2
  3628  001A4C  0100               	movlb	0	; force () banked
  3629  001A4E  6FE3               	movwf	LCD_SetData@u8_Position& (0+255),b
  3630  001A50  0ED8               	movlw	216
  3631  001A52  EC5F  F014         	call	_LCD_SetData
  3632                           
  3633                           ;lcd.c: 263: }
  3634                           
  3635                           ;lcd.c: 262: default: break;
  3636                           
  3637                           ;lcd.c: 260: break;
  3638  001A56  0012               	return	
  3639  001A58                     l404:
  3640  001A58  C0E7  F0EB         	movff	LCD_SetPresetDigits@u16_PresetData,??_LCD_SetPresetDigits
  3641  001A5C  C0E8  F0EC         	movff	LCD_SetPresetDigits@u16_PresetData+1,??_LCD_SetPresetDigits+1
  3642                           
  3643                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3644                           ; Switch size 1, requested type "space"
  3645                           ; Number of cases is 1, Range of values is 0 to 0
  3646                           ; switch strategies available:
  3647                           ; Name         Instructions Cycles
  3648                           ; simple_byte            4     3 (average)
  3649                           ;	Chosen strategy is simple_byte
  3650  001A60  0100               	movlb	0	; force () banked
  3651  001A62  51EC               	movf	(??_LCD_SetPresetDigits+1)& (0+255),w,b
  3652  001A64  0A00               	xorlw	0	; case 0
  3653  001A66  A4D8               	btfss	status,2,c
  3654  001A68  0012               	return	
  3655                           
  3656                           ; BSR set to: 0
  3657                           ; Switch size 1, requested type "space"
  3658                           ; Number of cases is 4, Range of values is 0 to 3
  3659                           ; switch strategies available:
  3660                           ; Name         Instructions Cycles
  3661                           ; simple_byte           13     7 (average)
  3662                           ;	Chosen strategy is simple_byte
  3663  001A6A  51EB               	movf	??_LCD_SetPresetDigits& (0+255),w,b
  3664  001A6C  0A00               	xorlw	0	; case 0
  3665  001A6E  B4D8               	btfsc	status,2,c
  3666  001A70  D79F               	goto	l405
  3667  001A72  0A01               	xorlw	1	; case 1
  3668  001A74  B4D8               	btfsc	status,2,c
  3669  001A76  D7B1               	goto	l407
  3670  001A78  0A03               	xorlw	3	; case 2
  3671  001A7A  B4D8               	btfsc	status,2,c
  3672  001A7C  D7C3               	goto	l408
  3673  001A7E  0A01               	xorlw	1	; case 3
  3674  001A80  A4D8               	btfss	status,2,c
  3675                           
  3676                           ; BSR set to: 0
  3677  001A82  0012               	return	
  3678  001A84  D7D4               	goto	l409
  3679  001A86                     __end_of_LCD_SetPresetDigits:
  3680                           	opt stack 0
  3681                           prodh	equ	0xFF4
  3682                           prodl	equ	0xFF3
  3683                           postinc0	equ	0xFEE
  3684                           wreg	equ	0xFE8
  3685                           indf2	equ	0xFDF
  3686                           postinc2	equ	0xFDE
  3687                           postdec2	equ	0xFDD
  3688                           fsr2h	equ	0xFDA
  3689                           fsr2l	equ	0xFD9
  3690                           status	equ	0xFD8
  3691                           
  3692 ;; *************** function _LCD_Dec2Bcd *****************
  3693 ;; Defined at:
  3694 ;;		line 390 in file "mid/lcd.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  u16_DecimalD    2   18[BANK0 ] unsigned int 
  3697 ;;  ptrBCD          2   20[BANK0 ] PTR unsigned char 
  3698 ;;		 -> LCD_SetPresetDigits@u8_TempArray(3), LCD_SetMainDigits@u8_TempArray(3), 
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;		None
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      void 
  3703 ;; Registers used:
  3704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3710 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;Total ram usage:        4 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:    3
  3717 ;; This function calls:
  3718 ;;		___lwdiv
  3719 ;;		___lwmod
  3720 ;; This function is called by:
  3721 ;;		_LCD_SetMainDigits
  3722 ;;		_LCD_SetPresetDigits
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text17
  3727  00246E                     __ptext17:
  3728                           	opt stack 0
  3729  00246E                     _LCD_Dec2Bcd:
  3730                           	opt stack 25
  3731                           
  3732                           ;lcd.c: 392: if(u16_DecimalData > 999)
  3733                           
  3734                           ;incstack = 0
  3735  00246E  0EE8               	movlw	232
  3736  002470  0100               	movlb	0	; force () banked
  3737  002472  5DE3               	subwf	LCD_Dec2Bcd@u16_DecimalData& (0+255),w,b
  3738  002474  0E03               	movlw	3
  3739  002476  59E4               	subwfb	(LCD_Dec2Bcd@u16_DecimalData+1)& (0+255),w,b
  3740  002478  A0D8               	btfss	status,0,c
  3741  00247A  D005               	goto	l460
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;lcd.c: 393: {
  3745                           ;lcd.c: 394: u16_DecimalData= 999;
  3746  00247C  0E03               	movlw	3
  3747  00247E  0100               	movlb	0	; force () banked
  3748  002480  6FE4               	movwf	(LCD_Dec2Bcd@u16_DecimalData+1)& (0+255),b
  3749  002482  0EE7               	movlw	231
  3750  002484  6FE3               	movwf	LCD_Dec2Bcd@u16_DecimalData& (0+255),b
  3751  002486                     l460:
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;lcd.c: 395: }
  3755                           ;lcd.c: 397: *ptrBCD= u16_DecimalData / 100;
  3756                           
  3757                           ; BSR set to: 0
  3758  002486  C0E3  F001         	movff	LCD_Dec2Bcd@u16_DecimalData,___lwdiv@dividend
  3759  00248A  C0E4  F002         	movff	LCD_Dec2Bcd@u16_DecimalData+1,___lwdiv@dividend+1
  3760  00248E  0E00               	movlw	0
  3761  002490  0100               	movlb	0	; force () banked
  3762  002492  6F04               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3763  002494  0E64               	movlw	100
  3764  002496  6F03               	movwf	___lwdiv@divisor& (0+255),b
  3765  002498  EC36  F014         	call	___lwdiv	;wreg free
  3766  00249C  0100               	movlb	0	; force () banked
  3767  00249E  5101               	movf	?___lwdiv& (0+255),w,b
  3768  0024A0  C0E5  FFD9         	movff	LCD_Dec2Bcd@ptrBCD,fsr2l
  3769  0024A4  C0E6  FFDA         	movff	LCD_Dec2Bcd@ptrBCD+1,fsr2h
  3770  0024A8  6EDF               	movwf	indf2,c
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;lcd.c: 398: ++ptrBCD;
  3774  0024AA  0100               	movlb	0	; force () banked
  3775  0024AC  4BE5               	infsnz	LCD_Dec2Bcd@ptrBCD& (0+255),f,b
  3776  0024AE  2BE6               	incf	(LCD_Dec2Bcd@ptrBCD+1)& (0+255),f,b
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;lcd.c: 400: *ptrBCD= (u16_DecimalData / 10) % 10;
  3780  0024B0  0E00               	movlw	0
  3781  0024B2  0100               	movlb	0	; force () banked
  3782  0024B4  6F04               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3783  0024B6  0E0A               	movlw	10
  3784  0024B8  6F03               	movwf	___lwdiv@divisor& (0+255),b
  3785  0024BA  C0E3  F001         	movff	LCD_Dec2Bcd@u16_DecimalData,___lwdiv@dividend
  3786  0024BE  C0E4  F002         	movff	LCD_Dec2Bcd@u16_DecimalData+1,___lwdiv@dividend+1
  3787  0024C2  EC36  F014         	call	___lwdiv	;wreg free
  3788  0024C6  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  3789  0024CA  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  3790  0024CE  0E00               	movlw	0
  3791  0024D0  0100               	movlb	0	; force () banked
  3792  0024D2  6F0B               	movwf	(___lwmod@divisor+1)& (0+255),b
  3793  0024D4  0E0A               	movlw	10
  3794  0024D6  6F0A               	movwf	___lwmod@divisor& (0+255),b
  3795  0024D8  ECAE  F014         	call	___lwmod	;wreg free
  3796  0024DC  0100               	movlb	0	; force () banked
  3797  0024DE  5108               	movf	?___lwmod& (0+255),w,b
  3798  0024E0  C0E5  FFD9         	movff	LCD_Dec2Bcd@ptrBCD,fsr2l
  3799  0024E4  C0E6  FFDA         	movff	LCD_Dec2Bcd@ptrBCD+1,fsr2h
  3800  0024E8  6EDF               	movwf	indf2,c
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;lcd.c: 401: ++ptrBCD;
  3804  0024EA  0100               	movlb	0	; force () banked
  3805  0024EC  4BE5               	infsnz	LCD_Dec2Bcd@ptrBCD& (0+255),f,b
  3806  0024EE  2BE6               	incf	(LCD_Dec2Bcd@ptrBCD+1)& (0+255),f,b
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;lcd.c: 403: *ptrBCD= u16_DecimalData % 10;
  3810  0024F0  C0E3  F008         	movff	LCD_Dec2Bcd@u16_DecimalData,___lwmod@dividend
  3811  0024F4  C0E4  F009         	movff	LCD_Dec2Bcd@u16_DecimalData+1,___lwmod@dividend+1
  3812  0024F8  0E00               	movlw	0
  3813  0024FA  0100               	movlb	0	; force () banked
  3814  0024FC  6F0B               	movwf	(___lwmod@divisor+1)& (0+255),b
  3815  0024FE  0E0A               	movlw	10
  3816  002500  6F0A               	movwf	___lwmod@divisor& (0+255),b
  3817  002502  ECAE  F014         	call	___lwmod	;wreg free
  3818  002506  0100               	movlb	0	; force () banked
  3819  002508  5108               	movf	?___lwmod& (0+255),w,b
  3820  00250A  C0E5  FFD9         	movff	LCD_Dec2Bcd@ptrBCD,fsr2l
  3821  00250E  C0E6  FFDA         	movff	LCD_Dec2Bcd@ptrBCD+1,fsr2h
  3822  002512  6EDF               	movwf	indf2,c
  3823                           
  3824                           ; BSR set to: 0
  3825  002514  0012               	return		;funcret
  3826  002516                     __end_of_LCD_Dec2Bcd:
  3827                           	opt stack 0
  3828                           prodh	equ	0xFF4
  3829                           prodl	equ	0xFF3
  3830                           postinc0	equ	0xFEE
  3831                           wreg	equ	0xFE8
  3832                           indf2	equ	0xFDF
  3833                           postinc2	equ	0xFDE
  3834                           postdec2	equ	0xFDD
  3835                           fsr2h	equ	0xFDA
  3836                           fsr2l	equ	0xFD9
  3837                           status	equ	0xFD8
  3838                           
  3839 ;; *************** function ___lwmod *****************
  3840 ;; Defined at:
  3841 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;  dividend        2    7[COMRAM] unsigned int 
  3844 ;;  divisor         2    9[COMRAM] unsigned int 
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;  counter         1   11[COMRAM] unsigned char 
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  2    7[COMRAM] unsigned int 
  3849 ;; Registers used:
  3850 ;;		wreg, status,2, status,0
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3856 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3857 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;Total ram usage:        5 bytes
  3861 ;; Hardware stack levels used:    1
  3862 ;; Hardware stack levels required when called:    2
  3863 ;; This function calls:
  3864 ;;		Nothing
  3865 ;; This function is called by:
  3866 ;;		_LCD_Dec2Bcd
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           	psect	text18
  3871  00295C                     __ptext18:
  3872                           	opt stack 0
  3873  00295C                     ___lwmod:
  3874                           	opt stack 25
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;incstack = 0
  3878  00295C  500A               	movf	___lwmod@divisor,w,c
  3879  00295E  100B               	iorwf	___lwmod@divisor+1,w,c
  3880  002960  B4D8               	btfsc	status,2,c
  3881  002962  D018               	goto	l1251
  3882  002964  0E01               	movlw	1
  3883  002966  6E0C               	movwf	___lwmod@counter,c
  3884  002968  D004               	goto	l1246
  3885  00296A  90D8               	bcf	status,0,c
  3886  00296C  360A               	rlcf	___lwmod@divisor,f,c
  3887  00296E  360B               	rlcf	___lwmod@divisor+1,f,c
  3888  002970  2A0C               	incf	___lwmod@counter,f,c
  3889  002972                     l1246:
  3890  002972  AE0B               	btfss	___lwmod@divisor+1,7,c
  3891  002974  D7FA               	goto	l1247
  3892  002976                     u4050:
  3893  002976  500A               	movf	___lwmod@divisor,w,c
  3894  002978  5C08               	subwf	___lwmod@dividend,w,c
  3895  00297A  500B               	movf	___lwmod@divisor+1,w,c
  3896  00297C  5809               	subwfb	___lwmod@dividend+1,w,c
  3897  00297E  A0D8               	btfss	status,0,c
  3898  002980  D004               	goto	l1250
  3899  002982  500A               	movf	___lwmod@divisor,w,c
  3900  002984  5E08               	subwf	___lwmod@dividend,f,c
  3901  002986  500B               	movf	___lwmod@divisor+1,w,c
  3902  002988  5A09               	subwfb	___lwmod@dividend+1,f,c
  3903  00298A                     l1250:
  3904  00298A  90D8               	bcf	status,0,c
  3905  00298C  320B               	rrcf	___lwmod@divisor+1,f,c
  3906  00298E  320A               	rrcf	___lwmod@divisor,f,c
  3907  002990  2E0C               	decfsz	___lwmod@counter,f,c
  3908  002992  D7F1               	goto	u4050
  3909  002994                     l1251:
  3910  002994  C008  F008         	movff	___lwmod@dividend,?___lwmod
  3911  002998  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  3912  00299C  0012               	return		;funcret
  3913  00299E                     __end_of___lwmod:
  3914                           	opt stack 0
  3915                           prodh	equ	0xFF4
  3916                           prodl	equ	0xFF3
  3917                           postinc0	equ	0xFEE
  3918                           wreg	equ	0xFE8
  3919                           indf2	equ	0xFDF
  3920                           postinc2	equ	0xFDE
  3921                           postdec2	equ	0xFDD
  3922                           fsr2h	equ	0xFDA
  3923                           fsr2l	equ	0xFD9
  3924                           status	equ	0xFD8
  3925                           
  3926 ;; *************** function ___lwdiv *****************
  3927 ;; Defined at:
  3928 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  dividend        2    0[COMRAM] unsigned int 
  3931 ;;  divisor         2    2[COMRAM] unsigned int 
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;  quotient        2    5[COMRAM] unsigned int 
  3934 ;;  counter         1    4[COMRAM] unsigned char 
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  2    0[COMRAM] unsigned int 
  3937 ;; Registers used:
  3938 ;;		wreg, status,2, status,0
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3944 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3947 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3948 ;;Total ram usage:        7 bytes
  3949 ;; Hardware stack levels used:    1
  3950 ;; Hardware stack levels required when called:    2
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_LCD_Dec2Bcd
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text19
  3959  00286C                     __ptext19:
  3960                           	opt stack 0
  3961  00286C                     ___lwdiv:
  3962                           	opt stack 25
  3963                           
  3964                           ;incstack = 0
  3965  00286C  0E00               	movlw	0
  3966  00286E  6E07               	movwf	___lwdiv@quotient+1,c
  3967  002870  0E00               	movlw	0
  3968  002872  6E06               	movwf	___lwdiv@quotient,c
  3969  002874  5003               	movf	___lwdiv@divisor,w,c
  3970  002876  1004               	iorwf	___lwdiv@divisor+1,w,c
  3971  002878  B4D8               	btfsc	status,2,c
  3972  00287A  D01C               	goto	l1241
  3973  00287C  0E01               	movlw	1
  3974  00287E  6E05               	movwf	___lwdiv@counter,c
  3975  002880  D004               	goto	l1236
  3976  002882  90D8               	bcf	status,0,c
  3977  002884  3603               	rlcf	___lwdiv@divisor,f,c
  3978  002886  3604               	rlcf	___lwdiv@divisor+1,f,c
  3979  002888  2A05               	incf	___lwdiv@counter,f,c
  3980  00288A                     l1236:
  3981  00288A  AE04               	btfss	___lwdiv@divisor+1,7,c
  3982  00288C  D7FA               	goto	l1237
  3983  00288E                     u4020:
  3984  00288E  90D8               	bcf	status,0,c
  3985  002890  3606               	rlcf	___lwdiv@quotient,f,c
  3986  002892  3607               	rlcf	___lwdiv@quotient+1,f,c
  3987  002894  5003               	movf	___lwdiv@divisor,w,c
  3988  002896  5C01               	subwf	___lwdiv@dividend,w,c
  3989  002898  5004               	movf	___lwdiv@divisor+1,w,c
  3990  00289A  5802               	subwfb	___lwdiv@dividend+1,w,c
  3991  00289C  A0D8               	btfss	status,0,c
  3992  00289E  D005               	goto	l1240
  3993  0028A0  5003               	movf	___lwdiv@divisor,w,c
  3994  0028A2  5E01               	subwf	___lwdiv@dividend,f,c
  3995  0028A4  5004               	movf	___lwdiv@divisor+1,w,c
  3996  0028A6  5A02               	subwfb	___lwdiv@dividend+1,f,c
  3997  0028A8  8006               	bsf	___lwdiv@quotient,0,c
  3998  0028AA                     l1240:
  3999  0028AA  90D8               	bcf	status,0,c
  4000  0028AC  3204               	rrcf	___lwdiv@divisor+1,f,c
  4001  0028AE  3203               	rrcf	___lwdiv@divisor,f,c
  4002  0028B0  2E05               	decfsz	___lwdiv@counter,f,c
  4003  0028B2  D7ED               	goto	u4020
  4004  0028B4                     l1241:
  4005  0028B4  C006  F001         	movff	___lwdiv@quotient,?___lwdiv
  4006  0028B8  C007  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4007  0028BC  0012               	return		;funcret
  4008  0028BE                     __end_of___lwdiv:
  4009                           	opt stack 0
  4010                           prodh	equ	0xFF4
  4011                           prodl	equ	0xFF3
  4012                           postinc0	equ	0xFEE
  4013                           wreg	equ	0xFE8
  4014                           indf2	equ	0xFDF
  4015                           postinc2	equ	0xFDE
  4016                           postdec2	equ	0xFDD
  4017                           fsr2h	equ	0xFDA
  4018                           fsr2l	equ	0xFD9
  4019                           status	equ	0xFD8
  4020                           
  4021 ;; *************** function _LCD_Bcd2Segment *****************
  4022 ;; Defined at:
  4023 ;;		line 276 in file "mid/lcd.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;  u8_Data         1    wreg     unsigned char 
  4026 ;;  u8_DigitType    1   18[BANK0 ] unsigned char 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;  u8_Data         1   19[BANK0 ] unsigned char 
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  1    wreg      unsigned char 
  4031 ;; Registers used:
  4032 ;;		wreg, status,2, status,0
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4038 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4039 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4041 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4042 ;;Total ram usage:        2 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:    2
  4045 ;; This function calls:
  4046 ;;		Nothing
  4047 ;; This function is called by:
  4048 ;;		_LCD_SetMainDigits
  4049 ;;		_LCD_SetPresetDigits
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text20
  4054  001EC6                     __ptext20:
  4055                           	opt stack 0
  4056  001EC6                     _LCD_Bcd2Segment:
  4057                           	opt stack 26
  4058                           
  4059                           ;incstack = 0
  4060                           ;LCD_Bcd2Segment@u8_Data stored from wreg
  4061  001EC6  0100               	movlb	0	; force () banked
  4062  001EC8  6FE4               	movwf	LCD_Bcd2Segment@u8_Data& (0+255),b
  4063                           
  4064                           ;lcd.c: 278: switch(u8_Data)
  4065  001ECA  D070               	goto	l414
  4066  001ECC  0ED7               	movlw	215
  4067  001ECE  0012               	return	
  4068  001ED0  0100               	movlb	0	; force () banked
  4069  001ED2  05E3               	decf	LCD_Bcd2Segment@u8_DigitType& (0+255),w,b
  4070  001ED4  A4D8               	btfss	status,2,c
  4071  001ED6  D002               	goto	l418
  4072                           
  4073                           ; BSR set to: 0
  4074                           ;lcd.c: 282: {
  4075                           ;lcd.c: 283: return 0b00000011;
  4076  001ED8  0E03               	movlw	3
  4077                           
  4078                           ; BSR set to: 0
  4079  001EDA  0012               	return	
  4080  001EDC                     l418:
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;lcd.c: 285: else
  4084                           ;lcd.c: 286: {
  4085                           ;lcd.c: 287: return 0b11000000;
  4086                           
  4087                           ; BSR set to: 0
  4088  001EDC  0EC0               	movlw	192
  4089                           
  4090                           ; BSR set to: 0
  4091  001EDE  0012               	return	
  4092  001EE0                     
  4093                           ; BSR set to: 0
  4094                           
  4095                           ; BSR set to: 0
  4096                           
  4097                           ;lcd.c: 288: }
  4098                           ;lcd.c: 290: case 2: if(u8_DigitType == 2)
  4099                           
  4100                           ; BSR set to: 0
  4101  001EE0  0E02               	movlw	2
  4102  001EE2  0100               	movlb	0	; force () banked
  4103  001EE4  19E3               	xorwf	LCD_Bcd2Segment@u8_DigitType& (0+255),w,b
  4104  001EE6  A4D8               	btfss	status,2,c
  4105  001EE8  D002               	goto	l421
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;lcd.c: 291: {
  4109                           ;lcd.c: 292: return 0b01011110;
  4110  001EEA  0E5E               	movlw	94
  4111                           
  4112                           ; BSR set to: 0
  4113  001EEC  0012               	return	
  4114  001EEE                     l421:
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;lcd.c: 294: else
  4118                           ;lcd.c: 295: {
  4119                           ;lcd.c: 296: return 0b10011101;
  4120                           
  4121                           ; BSR set to: 0
  4122  001EEE  0E9D               	movlw	157
  4123                           
  4124                           ; BSR set to: 0
  4125  001EF0  0012               	return	
  4126  001EF2                     
  4127                           ; BSR set to: 0
  4128                           
  4129                           ; BSR set to: 0
  4130                           
  4131                           ;lcd.c: 297: }
  4132                           ;lcd.c: 299: case 3: if(u8_DigitType == 1)
  4133                           
  4134                           ; BSR set to: 0
  4135  001EF2  0100               	movlb	0	; force () banked
  4136  001EF4  05E3               	decf	LCD_Bcd2Segment@u8_DigitType& (0+255),w,b
  4137  001EF6  A4D8               	btfss	status,2,c
  4138  001EF8  D002               	goto	l424
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;lcd.c: 300: {
  4142                           ;lcd.c: 301: return 0b00011111;
  4143  001EFA  0E1F               	movlw	31
  4144                           
  4145                           ; BSR set to: 0
  4146  001EFC  0012               	return	
  4147  001EFE                     l424:
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;lcd.c: 303: else
  4151                           ;lcd.c: 304: {
  4152                           ;lcd.c: 305: return 0b11011100;
  4153                           
  4154                           ; BSR set to: 0
  4155  001EFE  0EDC               	movlw	220
  4156                           
  4157                           ; BSR set to: 0
  4158  001F00  0012               	return	
  4159  001F02                     
  4160                           ; BSR set to: 0
  4161                           
  4162                           ; BSR set to: 0
  4163                           
  4164                           ;lcd.c: 306: }
  4165                           ;lcd.c: 308: case 4: if(u8_DigitType == 1)
  4166                           
  4167                           ; BSR set to: 0
  4168  001F02  0100               	movlb	0	; force () banked
  4169  001F04  05E3               	decf	LCD_Bcd2Segment@u8_DigitType& (0+255),w,b
  4170  001F06  A4D8               	btfss	status,2,c
  4171  001F08  D002               	goto	l427
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;lcd.c: 309: {
  4175                           ;lcd.c: 310: return 0b01001011;
  4176  001F0A  0E4B               	movlw	75
  4177                           
  4178                           ; BSR set to: 0
  4179  001F0C  0012               	return	
  4180  001F0E                     l427:
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;lcd.c: 312: else if(u8_DigitType == 2)
  4184                           
  4185                           ; BSR set to: 0
  4186  001F0E  0E02               	movlw	2
  4187  001F10  0100               	movlb	0	; force () banked
  4188  001F12  19E3               	xorwf	LCD_Bcd2Segment@u8_DigitType& (0+255),w,b
  4189  001F14  A4D8               	btfss	status,2,c
  4190  001F16  D002               	goto	l429
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;lcd.c: 313: {
  4194                           ;lcd.c: 314: return 0b11001001;
  4195  001F18  0EC9               	movlw	201
  4196                           
  4197                           ; BSR set to: 0
  4198  001F1A  0012               	return	
  4199  001F1C                     l429:
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;lcd.c: 316: else
  4203                           ;lcd.c: 317: {
  4204                           ;lcd.c: 318: return 0b11001010;
  4205                           
  4206                           ; BSR set to: 0
  4207  001F1C  0ECA               	movlw	202
  4208                           
  4209                           ; BSR set to: 0
  4210  001F1E  0012               	return	
  4211  001F20                     
  4212                           ; BSR set to: 0
  4213                           
  4214                           ; BSR set to: 0
  4215                           
  4216                           ;lcd.c: 319: }
  4217                           ;lcd.c: 322: case 5: if(u8_DigitType == 2)
  4218                           
  4219                           ; BSR set to: 0
  4220                           
  4221                           ; BSR set to: 0
  4222  001F20  0E02               	movlw	2
  4223  001F22  0100               	movlb	0	; force () banked
  4224  001F24  19E3               	xorwf	LCD_Bcd2Segment@u8_DigitType& (0+255),w,b
  4225  001F26  A4D8               	btfss	status,2,c
  4226  001F28  D002               	goto	l432
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;lcd.c: 323: {
  4230                           ;lcd.c: 324: return 0b10011101;
  4231  001F2A  0E9D               	movlw	157
  4232                           
  4233                           ; BSR set to: 0
  4234  001F2C  0012               	return	
  4235  001F2E                     l432:
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;lcd.c: 326: else
  4239                           ;lcd.c: 327: {
  4240                           ;lcd.c: 328: return 0b01011110;
  4241                           
  4242                           ; BSR set to: 0
  4243  001F2E  0E5E               	movlw	94
  4244                           
  4245                           ; BSR set to: 0
  4246  001F30  0012               	return	
  4247  001F32                     
  4248                           ; BSR set to: 0
  4249                           
  4250                           ; BSR set to: 0
  4251                           
  4252                           ;lcd.c: 329: }
  4253                           ;lcd.c: 331: case 6: if(u8_DigitType == 1)
  4254                           
  4255                           ; BSR set to: 0
  4256  001F32  0100               	movlb	0	; force () banked
  4257  001F34  05E3               	decf	LCD_Bcd2Segment@u8_DigitType& (0+255),w,b
  4258  001F36  A4D8               	btfss	status,2,c
  4259  001F38  D002               	goto	l435
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;lcd.c: 332: {
  4263                           ;lcd.c: 333: return 0b11011110;
  4264  001F3A  0EDE               	movlw	222
  4265                           
  4266                           ; BSR set to: 0
  4267  001F3C  0012               	return	
  4268  001F3E                     l435:
  4269                           
  4270                           ; BSR set to: 0
  4271                           ;lcd.c: 335: else if(u8_DigitType == 2)
  4272                           
  4273                           ; BSR set to: 0
  4274  001F3E  0E02               	movlw	2
  4275  001F40  0100               	movlb	0	; force () banked
  4276  001F42  19E3               	xorwf	LCD_Bcd2Segment@u8_DigitType& (0+255),w,b
  4277  001F44  A4D8               	btfss	status,2,c
  4278  001F46  D002               	goto	l437
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;lcd.c: 336: {
  4282                           ;lcd.c: 337: return 0b10011111;
  4283  001F48  0E9F               	movlw	159
  4284                           
  4285                           ; BSR set to: 0
  4286  001F4A  0012               	return	
  4287  001F4C                     l437:
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;lcd.c: 339: else
  4291                           ;lcd.c: 340: {
  4292                           ;lcd.c: 341: return 0b01011111;
  4293                           
  4294                           ; BSR set to: 0
  4295  001F4C  0E5F               	movlw	95
  4296                           
  4297                           ; BSR set to: 0
  4298  001F4E  0012               	return	
  4299  001F50                     
  4300                           ; BSR set to: 0
  4301                           
  4302                           ; BSR set to: 0
  4303                           
  4304                           ;lcd.c: 342: }
  4305                           ;lcd.c: 344: case 7: if(u8_DigitType == 1)
  4306                           
  4307                           ; BSR set to: 0
  4308                           
  4309                           ; BSR set to: 0
  4310  001F50  0100               	movlb	0	; force () banked
  4311  001F52  05E3               	decf	LCD_Bcd2Segment@u8_DigitType& (0+255),w,b
  4312  001F54  A4D8               	btfss	status,2,c
  4313  001F56  D002               	goto	l440
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;lcd.c: 345: {
  4317                           ;lcd.c: 346: return 0b00000111;
  4318  001F58  0E07               	movlw	7
  4319                           
  4320                           ; BSR set to: 0
  4321  001F5A  0012               	return	
  4322  001F5C                     l440:
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;lcd.c: 348: else if(u8_DigitType == 2)
  4326                           
  4327                           ; BSR set to: 0
  4328  001F5C  0E02               	movlw	2
  4329  001F5E  0100               	movlb	0	; force () banked
  4330  001F60  19E3               	xorwf	LCD_Bcd2Segment@u8_DigitType& (0+255),w,b
  4331  001F62  A4D8               	btfss	status,2,c
  4332  001F64  D002               	goto	l442
  4333                           
  4334                           ; BSR set to: 0
  4335                           ;lcd.c: 349: {
  4336                           ;lcd.c: 350: return 0b11000100;
  4337  001F66  0EC4               	movlw	196
  4338                           
  4339                           ; BSR set to: 0
  4340  001F68  0012               	return	
  4341  001F6A                     l442:
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;lcd.c: 352: else
  4345                           ;lcd.c: 353: {
  4346                           ;lcd.c: 354: return 0b11010000;
  4347                           
  4348                           ; BSR set to: 0
  4349  001F6A  0ED0               	movlw	208
  4350                           
  4351                           ; BSR set to: 0
  4352  001F6C  0012               	return	
  4353  001F6E                     
  4354                           ; BSR set to: 0
  4355                           
  4356                           ; BSR set to: 0
  4357                           
  4358                           ;lcd.c: 355: }
  4359                           ;lcd.c: 357: case 8: return 0b11011111;
  4360                           
  4361                           ; BSR set to: 0
  4362                           
  4363                           ; BSR set to: 0
  4364  001F6E  0EDF               	movlw	223
  4365                           
  4366                           ; BSR set to: 0
  4367  001F70  0012               	return	
  4368  001F72                     
  4369                           ; BSR set to: 0
  4370                           
  4371                           ; BSR set to: 0
  4372  001F72  0100               	movlb	0	; force () banked
  4373  001F74  05E3               	decf	LCD_Bcd2Segment@u8_DigitType& (0+255),w,b
  4374  001F76  A4D8               	btfss	status,2,c
  4375  001F78  D002               	goto	l446
  4376                           
  4377                           ; BSR set to: 0
  4378                           ;lcd.c: 360: {
  4379                           ;lcd.c: 361: return 0b01011111;
  4380  001F7A  0E5F               	movlw	95
  4381                           
  4382                           ; BSR set to: 0
  4383  001F7C  0012               	return	
  4384  001F7E                     l446:
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;lcd.c: 363: else if(u8_DigitType == 2)
  4388                           
  4389                           ; BSR set to: 0
  4390  001F7E  0E02               	movlw	2
  4391  001F80  0100               	movlb	0	; force () banked
  4392  001F82  19E3               	xorwf	LCD_Bcd2Segment@u8_DigitType& (0+255),w,b
  4393  001F84  A4D8               	btfss	status,2,c
  4394  001F86  D002               	goto	l448
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;lcd.c: 364: {
  4398                           ;lcd.c: 365: return 0b11011101;
  4399  001F88  0EDD               	movlw	221
  4400                           
  4401                           ; BSR set to: 0
  4402  001F8A  0012               	return	
  4403  001F8C                     l448:
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;lcd.c: 367: else
  4407                           ;lcd.c: 368: {
  4408                           ;lcd.c: 369: return 0b11011110;
  4409                           
  4410                           ; BSR set to: 0
  4411  001F8C  0EDE               	movlw	222
  4412                           
  4413                           ; BSR set to: 0
  4414  001F8E  0012               	return	
  4415  001F90                     
  4416                           ; BSR set to: 0
  4417                           
  4418                           ; BSR set to: 0
  4419                           
  4420                           ;lcd.c: 370: }
  4421                           ;lcd.c: 372: case 10: return 0b00001000;
  4422                           
  4423                           ; BSR set to: 0
  4424                           
  4425                           ; BSR set to: 0
  4426  001F90  0E08               	movlw	8
  4427                           
  4428                           ; BSR set to: 0
  4429  001F92  0012               	return	
  4430  001F94                     
  4431                           ; BSR set to: 0
  4432                           
  4433                           ; BSR set to: 0
  4434  001F94  0E09               	movlw	9
  4435                           
  4436                           ; BSR set to: 0
  4437  001F96  0012               	return	
  4438  001F98                     
  4439                           ; BSR set to: 0
  4440                           
  4441                           ; BSR set to: 0
  4442  001F98  0ECF               	movlw	207
  4443                           
  4444                           ; BSR set to: 0
  4445  001F9A  0012               	return	
  4446  001F9C                     
  4447                           ; BSR set to: 0
  4448                           
  4449                           ; BSR set to: 0
  4450  001F9C  0E49               	movlw	73
  4451                           
  4452                           ; BSR set to: 0
  4453  001F9E  0012               	return	
  4454  001FA0                     
  4455                           ; BSR set to: 0
  4456                           
  4457                           ; BSR set to: 0
  4458  001FA0  0E1F               	movlw	31
  4459                           
  4460                           ; BSR set to: 0
  4461  001FA2  0012               	return	
  4462  001FA4                     
  4463                           ; BSR set to: 0
  4464                           
  4465                           ; BSR set to: 0
  4466  001FA4  0E1B               	movlw	27
  4467                           
  4468                           ; BSR set to: 0
  4469  001FA6  0012               	return	
  4470  001FA8                     
  4471                           ; BSR set to: 0
  4472                           
  4473                           ; BSR set to: 0
  4474  001FA8  0E1F               	movlw	31
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;lcd.c: 381: }
  4478                           
  4479                           ; BSR set to: 0
  4480  001FAA  0012               	return	
  4481  001FAC                     l414:
  4482                           
  4483                           ; BSR set to: 0
  4484  001FAC  0100               	movlb	0	; force () banked
  4485  001FAE  51E4               	movf	LCD_Bcd2Segment@u8_Data& (0+255),w,b
  4486                           
  4487                           ; Switch size 1, requested type "space"
  4488                           ; Number of cases is 16, Range of values is 0 to 15
  4489                           ; switch strategies available:
  4490                           ; Name         Instructions Cycles
  4491                           ; simple_byte           49    25 (average)
  4492                           ;	Chosen strategy is simple_byte
  4493  001FB0  0A00               	xorlw	0	; case 0
  4494  001FB2  B4D8               	btfsc	status,2,c
  4495  001FB4  D78B               	goto	l415
  4496  001FB6  0A01               	xorlw	1	; case 1
  4497  001FB8  B4D8               	btfsc	status,2,c
  4498  001FBA  D78A               	goto	l417
  4499  001FBC  0A03               	xorlw	3	; case 2
  4500  001FBE  B4D8               	btfsc	status,2,c
  4501  001FC0  D78F               	goto	l419
  4502  001FC2  0A01               	xorlw	1	; case 3
  4503  001FC4  B4D8               	btfsc	status,2,c
  4504  001FC6  D795               	goto	l422
  4505  001FC8  0A07               	xorlw	7	; case 4
  4506  001FCA  B4D8               	btfsc	status,2,c
  4507  001FCC  D79A               	goto	l425
  4508  001FCE  0A01               	xorlw	1	; case 5
  4509  001FD0  B4D8               	btfsc	status,2,c
  4510  001FD2  D7A6               	goto	l430
  4511  001FD4  0A03               	xorlw	3	; case 6
  4512  001FD6  B4D8               	btfsc	status,2,c
  4513  001FD8  D7AC               	goto	l433
  4514  001FDA  0A01               	xorlw	1	; case 7
  4515  001FDC  B4D8               	btfsc	status,2,c
  4516  001FDE  D7B8               	goto	l438
  4517  001FE0  0A0F               	xorlw	15	; case 8
  4518  001FE2  B4D8               	btfsc	status,2,c
  4519  001FE4  D7C4               	goto	l443
  4520  001FE6  0A01               	xorlw	1	; case 9
  4521  001FE8  B4D8               	btfsc	status,2,c
  4522  001FEA  D7C3               	goto	l445
  4523  001FEC  0A03               	xorlw	3	; case 10
  4524  001FEE  B4D8               	btfsc	status,2,c
  4525  001FF0  D7CF               	goto	l449
  4526  001FF2  0A01               	xorlw	1	; case 11
  4527  001FF4  B4D8               	btfsc	status,2,c
  4528  001FF6  D7CE               	goto	l451
  4529  001FF8  0A07               	xorlw	7	; case 12
  4530  001FFA  B4D8               	btfsc	status,2,c
  4531  001FFC  D7CD               	goto	l452
  4532  001FFE  0A01               	xorlw	1	; case 13
  4533  002000  B4D8               	btfsc	status,2,c
  4534  002002  D7CC               	goto	l453
  4535  002004  0A03               	xorlw	3	; case 14
  4536  002006  B4D8               	btfsc	status,2,c
  4537  002008  D7CB               	goto	l454
  4538  00200A  0A01               	xorlw	1	; case 15
  4539  00200C  B4D8               	btfsc	status,2,c
  4540  00200E  D7CA               	goto	l455
  4541  002010  D7CB               	goto	l456
  4542  002012                     __end_of_LCD_Bcd2Segment:
  4543                           	opt stack 0
  4544                           prodh	equ	0xFF4
  4545                           prodl	equ	0xFF3
  4546                           postinc0	equ	0xFEE
  4547                           wreg	equ	0xFE8
  4548                           indf2	equ	0xFDF
  4549                           postinc2	equ	0xFDE
  4550                           postdec2	equ	0xFDD
  4551                           fsr2h	equ	0xFDA
  4552                           fsr2l	equ	0xFD9
  4553                           status	equ	0xFD8
  4554                           
  4555 ;; *************** function _LCD_SetIcons *****************
  4556 ;; Defined at:
  4557 ;;		line 410 in file "mid/lcd.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;  u8_Icon         1    wreg     unsigned char 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;  u8_Icon         1   22[BANK0 ] unsigned char 
  4562 ;;  u8_Temp         1   23[BANK0 ] unsigned char 
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  1    wreg      void 
  4565 ;; Registers used:
  4566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4576 ;;Total ram usage:        2 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; Hardware stack levels required when called:    3
  4579 ;; This function calls:
  4580 ;;		_LCD_GetData
  4581 ;;		_LCD_SetData
  4582 ;; This function is called by:
  4583 ;;		_USER_Init
  4584 ;;		_USER_Task
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           	psect	text21
  4589  002A1C                     __ptext21:
  4590                           	opt stack 0
  4591  002A1C                     _LCD_SetIcons:
  4592                           	opt stack 26
  4593                           
  4594                           ;incstack = 0
  4595                           ;LCD_SetIcons@u8_Icon stored from wreg
  4596  002A1C  0100               	movlb	0	; force () banked
  4597  002A1E  6FE7               	movwf	LCD_SetIcons@u8_Icon& (0+255),b
  4598                           
  4599                           ;lcd.c: 412: uint8_t u8_Temp= 0;
  4600  002A20  0E00               	movlw	0
  4601  002A22  0100               	movlb	0	; force () banked
  4602  002A24  6FE8               	movwf	LCD_SetIcons@u8_Temp& (0+255),b
  4603                           
  4604                           ;lcd.c: 413: switch(u8_Icon)
  4605  002A26  D011               	goto	l464
  4606  002A28                     
  4607                           ; BSR set to: 0
  4608                           
  4609                           ; BSR set to: 0
  4610  002A28  0E02               	movlw	2
  4611  002A2A  EC44  F015         	call	_LCD_GetData
  4612  002A2E  0100               	movlb	0	; force () banked
  4613  002A30  6FE8               	movwf	LCD_SetIcons@u8_Temp& (0+255),b
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;lcd.c: 416: u8_Temp= u8_Temp | 32;
  4617  002A32  0100               	movlb	0	; force () banked
  4618  002A34  51E8               	movf	LCD_SetIcons@u8_Temp& (0+255),w,b
  4619  002A36  0920               	iorlw	32
  4620  002A38  6FE8               	movwf	LCD_SetIcons@u8_Temp& (0+255),b
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;lcd.c: 417: LCD_SetData(u8_Temp , 2);
  4624  002A3A  0E02               	movlw	2
  4625  002A3C  0100               	movlb	0	; force () banked
  4626  002A3E  6FE3               	movwf	LCD_SetData@u8_Position& (0+255),b
  4627  002A40  0100               	movlb	0	; force () banked
  4628  002A42  51E8               	movf	LCD_SetIcons@u8_Temp& (0+255),w,b
  4629  002A44  EC5F  F014         	call	_LCD_SetData
  4630                           
  4631                           ;lcd.c: 421: }
  4632                           
  4633                           ;lcd.c: 420: default: break;
  4634                           
  4635                           ;lcd.c: 418: break;
  4636  002A48  0012               	return	
  4637  002A4A                     l464:
  4638  002A4A  0100               	movlb	0	; force () banked
  4639  002A4C  51E7               	movf	LCD_SetIcons@u8_Icon& (0+255),w,b
  4640                           
  4641                           ; Switch size 1, requested type "space"
  4642                           ; Number of cases is 1, Range of values is 0 to 0
  4643                           ; switch strategies available:
  4644                           ; Name         Instructions Cycles
  4645                           ; simple_byte            4     3 (average)
  4646                           ;	Chosen strategy is simple_byte
  4647  002A4E  0A00               	xorlw	0	; case 0
  4648  002A50  A4D8               	btfss	status,2,c
  4649  002A52  0012               	return	
  4650  002A54  D7E9               	goto	l465
  4651  002A56                     __end_of_LCD_SetIcons:
  4652                           	opt stack 0
  4653                           prodh	equ	0xFF4
  4654                           prodl	equ	0xFF3
  4655                           postinc0	equ	0xFEE
  4656                           wreg	equ	0xFE8
  4657                           indf2	equ	0xFDF
  4658                           postinc2	equ	0xFDE
  4659                           postdec2	equ	0xFDD
  4660                           fsr2h	equ	0xFDA
  4661                           fsr2l	equ	0xFD9
  4662                           status	equ	0xFD8
  4663                           
  4664 ;; *************** function _LCD_GetData *****************
  4665 ;; Defined at:
  4666 ;;		line 461 in file "mid/lcd.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;  u8_Position     1    wreg     unsigned char 
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;  u8_Position     1   20[BANK0 ] unsigned char 
  4671 ;; Return value:  Size  Location     Type
  4672 ;;                  1    wreg      unsigned char 
  4673 ;; Registers used:
  4674 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;Total ram usage:        3 bytes
  4685 ;; Hardware stack levels used:    1
  4686 ;; Hardware stack levels required when called:    2
  4687 ;; This function calls:
  4688 ;;		Nothing
  4689 ;; This function is called by:
  4690 ;;		_LCD_SetIcons
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693                           
  4694                           	psect	text22
  4695  002A88                     __ptext22:
  4696                           	opt stack 0
  4697  002A88                     _LCD_GetData:
  4698                           	opt stack 26
  4699                           
  4700                           ;incstack = 0
  4701                           ;LCD_GetData@u8_Position stored from wreg
  4702  002A88  0100               	movlb	0	; force () banked
  4703  002A8A  6FE5               	movwf	LCD_GetData@u8_Position& (0+255),b
  4704                           
  4705                           ;lcd.c: 463: if(u8_Position < 14)
  4706  002A8C  0E0E               	movlw	14
  4707  002A8E  0100               	movlb	0	; force () banked
  4708  002A90  61E5               	cpfslt	LCD_GetData@u8_Position& (0+255),b
  4709  002A92  D011               	goto	l476
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;lcd.c: 464: {
  4713                           ;lcd.c: 465: return u8_LCD_Data[u8_Position+2];
  4714  002A94  0100               	movlb	0	; force () banked
  4715  002A96  51E5               	movf	LCD_GetData@u8_Position& (0+255),w,b
  4716  002A98  0100               	movlb	0	; force () banked
  4717  002A9A  6FE3               	movwf	??_LCD_GetData& (0+255),b
  4718  002A9C  6BE4               	clrf	(??_LCD_GetData+1)& (0+255),b
  4719  002A9E  0E02               	movlw	2
  4720  002AA0  27E3               	addwf	??_LCD_GetData& (0+255),f,b
  4721  002AA2  0E00               	movlw	0
  4722  002AA4  23E4               	addwfc	(??_LCD_GetData+1)& (0+255),f,b
  4723  002AA6  0E10               	movlw	low _u8_LCD_Data
  4724  002AA8  25E3               	addwf	??_LCD_GetData& (0+255),w,b
  4725  002AAA  6ED9               	movwf	fsr2l,c
  4726  002AAC  0E01               	movlw	high _u8_LCD_Data
  4727  002AAE  21E4               	addwfc	(??_LCD_GetData+1)& (0+255),w,b
  4728  002AB0  6EDA               	movwf	fsr2h,c
  4729  002AB2  50DF               	movf	indf2,w,c
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;lcd.c: 466: }
  4733                           
  4734                           ; BSR set to: 0
  4735  002AB4  0012               	return	
  4736  002AB6                     l476:
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;lcd.c: 467: else
  4740                           ;lcd.c: 468: {
  4741                           ;lcd.c: 469: return 0;
  4742                           
  4743                           ; BSR set to: 0
  4744  002AB6  0E00               	movlw	0
  4745                           
  4746                           ; BSR set to: 0
  4747  002AB8  0012               	return	
  4748  002ABA                     __end_of_LCD_GetData:
  4749                           	opt stack 0
  4750                           prodh	equ	0xFF4
  4751                           prodl	equ	0xFF3
  4752                           postinc0	equ	0xFEE
  4753                           wreg	equ	0xFE8
  4754                           indf2	equ	0xFDF
  4755                           postinc2	equ	0xFDE
  4756                           postdec2	equ	0xFDD
  4757                           fsr2h	equ	0xFDA
  4758                           fsr2l	equ	0xFD9
  4759                           status	equ	0xFD8
  4760                           
  4761 ;; *************** function _LCD_Clear *****************
  4762 ;; Defined at:
  4763 ;;		line 477 in file "mid/lcd.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;		None
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;  u8_Temp         1   22[BANK0 ] unsigned char 
  4768 ;; Return value:  Size  Location     Type
  4769 ;;                  1    wreg      void 
  4770 ;; Registers used:
  4771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4772 ;; Tracked objects:
  4773 ;;		On entry : 0/0
  4774 ;;		On exit  : 0/0
  4775 ;;		Unchanged: 0/0
  4776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4778 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4780 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4781 ;;Total ram usage:        1 bytes
  4782 ;; Hardware stack levels used:    1
  4783 ;; Hardware stack levels required when called:    3
  4784 ;; This function calls:
  4785 ;;		_LCD_SetData
  4786 ;; This function is called by:
  4787 ;;		_USER_Init
  4788 ;;		_USER_Task
  4789 ;;		_LCD_Test
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           	psect	text23
  4794  002B48                     __ptext23:
  4795                           	opt stack 0
  4796  002B48                     _LCD_Clear:
  4797                           	opt stack 26
  4798                           
  4799                           ;lcd.c: 479: uint8_t u8_Temp= 0;
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;incstack = 0
  4803  002B48  0E00               	movlw	0
  4804  002B4A  0100               	movlb	0	; force () banked
  4805  002B4C  6FE7               	movwf	LCD_Clear@u8_Temp& (0+255),b
  4806  002B4E                     l4710:
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;lcd.c: 480: for(; u8_Temp < (14+1); ++u8_Temp)
  4810  002B4E  0E0E               	movlw	14
  4811  002B50  0100               	movlb	0	; force () banked
  4812  002B52  65E7               	cpfsgt	LCD_Clear@u8_Temp& (0+255),b
  4813  002B54  D001               	goto	l481
  4814  002B56  0012               	return	
  4815  002B58                     l481:
  4816                           
  4817                           ; BSR set to: 0
  4818                           ;lcd.c: 481: {
  4819                           ;lcd.c: 482: LCD_SetData(0, u8_Temp);
  4820                           
  4821                           ; BSR set to: 0
  4822  002B58  C0E7  F0E3         	movff	LCD_Clear@u8_Temp,LCD_SetData@u8_Position
  4823  002B5C  0E00               	movlw	0
  4824  002B5E  EC5F  F014         	call	_LCD_SetData
  4825  002B62  0100               	movlb	0	; force () banked
  4826  002B64  2BE7               	incf	LCD_Clear@u8_Temp& (0+255),f,b
  4827  002B66  D7F3               	goto	l4710
  4828  002B68                     __end_of_LCD_Clear:
  4829                           	opt stack 0
  4830                           prodh	equ	0xFF4
  4831                           prodl	equ	0xFF3
  4832                           postinc0	equ	0xFEE
  4833                           wreg	equ	0xFE8
  4834                           indf2	equ	0xFDF
  4835                           postinc2	equ	0xFDE
  4836                           postdec2	equ	0xFDD
  4837                           fsr2h	equ	0xFDA
  4838                           fsr2l	equ	0xFD9
  4839                           status	equ	0xFD8
  4840                           
  4841 ;; *************** function _TIMER_ResetSysTickFlag *****************
  4842 ;; Defined at:
  4843 ;;		line 62 in file "hal/timer.c"
  4844 ;; Parameters:    Size  Location     Type
  4845 ;;		None
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;		None
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  1    wreg      void 
  4850 ;; Registers used:
  4851 ;;		wreg, status,2
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4861 ;;Total ram usage:        0 bytes
  4862 ;; Hardware stack levels used:    1
  4863 ;; Hardware stack levels required when called:    2
  4864 ;; This function calls:
  4865 ;;		Nothing
  4866 ;; This function is called by:
  4867 ;;		_main
  4868 ;; This function uses a non-reentrant model
  4869 ;;
  4870                           
  4871                           	psect	text24
  4872  002C4C                     __ptext24:
  4873                           	opt stack 0
  4874  002C4C                     _TIMER_ResetSysTickFlag:
  4875                           	opt stack 28
  4876                           
  4877                           ;timer.c: 64: bFlag_SysTick= 0;
  4878                           
  4879                           ; BSR set to: 0
  4880                           ;incstack = 0
  4881  002C4C  0E00               	movlw	0
  4882  002C4E  0100               	movlb	0	; force () banked
  4883  002C50  6FBD               	movwf	_bFlag_SysTick& (0+255),b
  4884                           
  4885                           ; BSR set to: 0
  4886  002C52  0012               	return		;funcret
  4887  002C54                     __end_of_TIMER_ResetSysTickFlag:
  4888                           	opt stack 0
  4889                           prodh	equ	0xFF4
  4890                           prodl	equ	0xFF3
  4891                           postinc0	equ	0xFEE
  4892                           wreg	equ	0xFE8
  4893                           indf2	equ	0xFDF
  4894                           postinc2	equ	0xFDE
  4895                           postdec2	equ	0xFDD
  4896                           fsr2h	equ	0xFDA
  4897                           fsr2l	equ	0xFD9
  4898                           status	equ	0xFD8
  4899                           
  4900 ;; *************** function _TIMER_Init *****************
  4901 ;; Defined at:
  4902 ;;		line 18 in file "hal/timer.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;		None
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;		None
  4907 ;; Return value:  Size  Location     Type
  4908 ;;                  1    wreg      void 
  4909 ;; Registers used:
  4910 ;;		wreg, status,2
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4920 ;;Total ram usage:        0 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:    2
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		_main
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           	psect	text25
  4931  002BF0                     __ptext25:
  4932                           	opt stack 0
  4933  002BF0                     _TIMER_Init:
  4934                           	opt stack 28
  4935                           
  4936                           ;timer.c: 20: T2CON= 0;
  4937                           
  4938                           ; BSR set to: 0
  4939                           ;incstack = 0
  4940  002BF0  0E00               	movlw	0
  4941  002BF2  6ECA               	movwf	4042,c	;volatile
  4942                           
  4943                           ;timer.c: 21: TMR2= 0;
  4944  002BF4  0E00               	movlw	0
  4945  002BF6  6ECC               	movwf	4044,c	;volatile
  4946                           
  4947                           ;timer.c: 22: PR2= 249;
  4948  002BF8  0EF9               	movlw	249
  4949  002BFA  6ECB               	movwf	4043,c	;volatile
  4950                           
  4951                           ;timer.c: 23: T2CON= 2 | 4 | 0x08;
  4952  002BFC  0E0E               	movlw	14
  4953  002BFE  6ECA               	movwf	4042,c	;volatile
  4954                           
  4955                           ;timer.c: 32: PIE1bits.TMR2IE= 1;
  4956  002C00  829D               	bsf	3997,1,c	;volatile
  4957  002C02  0012               	return		;funcret
  4958  002C04                     __end_of_TIMER_Init:
  4959                           	opt stack 0
  4960                           prodh	equ	0xFF4
  4961                           prodl	equ	0xFF3
  4962                           postinc0	equ	0xFEE
  4963                           wreg	equ	0xFE8
  4964                           indf2	equ	0xFDF
  4965                           postinc2	equ	0xFDE
  4966                           postdec2	equ	0xFDD
  4967                           fsr2h	equ	0xFDA
  4968                           fsr2l	equ	0xFD9
  4969                           status	equ	0xFD8
  4970                           
  4971 ;; *************** function _TIMER_GetSysTickFlag *****************
  4972 ;; Defined at:
  4973 ;;		line 52 in file "hal/timer.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;		None
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;		None
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  1    wreg      unsigned char 
  4980 ;; Registers used:
  4981 ;;		wreg, status,2
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4991 ;;Total ram usage:        0 bytes
  4992 ;; Hardware stack levels used:    1
  4993 ;; Hardware stack levels required when called:    2
  4994 ;; This function calls:
  4995 ;;		Nothing
  4996 ;; This function is called by:
  4997 ;;		_main
  4998 ;; This function uses a non-reentrant model
  4999 ;;
  5000                           
  5001                           	psect	text26
  5002  002C6C                     __ptext26:
  5003                           	opt stack 0
  5004  002C6C                     _TIMER_GetSysTickFlag:
  5005                           	opt stack 28
  5006                           
  5007                           ;timer.c: 54: return bFlag_SysTick;
  5008                           
  5009                           ;incstack = 0
  5010  002C6C  0100               	movlb	0	; force () banked
  5011  002C6E  51BD               	movf	_bFlag_SysTick& (0+255),w,b
  5012  002C70  0012               	return	
  5013  002C72                     __end_of_TIMER_GetSysTickFlag:
  5014                           	opt stack 0
  5015                           prodh	equ	0xFF4
  5016                           prodl	equ	0xFF3
  5017                           postinc0	equ	0xFEE
  5018                           wreg	equ	0xFE8
  5019                           indf2	equ	0xFDF
  5020                           postinc2	equ	0xFDE
  5021                           postdec2	equ	0xFDD
  5022                           fsr2h	equ	0xFDA
  5023                           fsr2l	equ	0xFD9
  5024                           status	equ	0xFD8
  5025                           
  5026 ;; *************** function _SYSTEM_Init *****************
  5027 ;; Defined at:
  5028 ;;		line 16 in file "hal/system.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;		None
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;		None
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  1    wreg      void 
  5035 ;; Registers used:
  5036 ;;		wreg, status,2
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5046 ;;Total ram usage:        0 bytes
  5047 ;; Hardware stack levels used:    1
  5048 ;; Hardware stack levels required when called:    2
  5049 ;; This function calls:
  5050 ;;		Nothing
  5051 ;; This function is called by:
  5052 ;;		_main
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           	psect	text27
  5057  002C04                     __ptext27:
  5058                           	opt stack 0
  5059  002C04                     _SYSTEM_Init:
  5060                           	opt stack 28
  5061                           
  5062                           ;system.c: 18: OSCCON= 112 | 0 ;
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;incstack = 0
  5066  002C04  0E70               	movlw	112
  5067  002C06  6ED3               	movwf	4051,c	;volatile
  5068  002C08  A4D3               	btfss	4051,2,c	;volatile
  5069  002C0A  D7FE               	goto	l172
  5070                           
  5071                           ;system.c: 21: TMR2IP= 1;
  5072  002C0C  829F               	bsf	3999,1,c	;volatile
  5073                           
  5074                           ;system.c: 22: PLLEN= 1;
  5075  002C0E  8C9B               	bsf	3995,6,c	;volatile
  5076  002C10  B4D3               	btfsc	4051,2,c	;volatile
  5077  002C12  0012               	return	
  5078  002C14  D7FD               	goto	l175
  5079  002C16                     __end_of_SYSTEM_Init:
  5080                           	opt stack 0
  5081                           prodh	equ	0xFF4
  5082                           prodl	equ	0xFF3
  5083                           postinc0	equ	0xFEE
  5084                           wreg	equ	0xFE8
  5085                           indf2	equ	0xFDF
  5086                           postinc2	equ	0xFDE
  5087                           postdec2	equ	0xFDD
  5088                           fsr2h	equ	0xFDA
  5089                           fsr2l	equ	0xFD9
  5090                           status	equ	0xFD8
  5091                           
  5092 ;; *************** function _PWM_Task *****************
  5093 ;; Defined at:
  5094 ;;		line 29 in file "hal/pwm.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;		None
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;		None
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      void 
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0, cstack
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5111 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5112 ;;Total ram usage:        5 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; Hardware stack levels required when called:    3
  5115 ;; This function calls:
  5116 ;;		_PWM_ResetSyncTrigger
  5117 ;; This function is called by:
  5118 ;;		_main
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           	psect	text28
  5123  002696                     __ptext28:
  5124                           	opt stack 0
  5125  002696                     _PWM_Task:
  5126                           	opt stack 27
  5127                           
  5128                           ;pwm.c: 31: static uint8_t u8_PwmCounter= 0;
  5129                           ;pwm.c: 32: static uint8_t u8_PeriodCount= 0;
  5130                           ;pwm.c: 34: if(bFlag_SyncTrigger == 1)
  5131                           
  5132                           ;incstack = 0
  5133  002696  0100               	movlb	0	; force () banked
  5134  002698  05B8               	decf	_bFlag_SyncTrigger& (0+255),w,b
  5135  00269A  A4D8               	btfss	status,2,c
  5136  00269C  0012               	return	
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;pwm.c: 35: {
  5140                           ;pwm.c: 36: ++u8_PwmCounter;
  5141  00269E  0100               	movlb	0	; force () banked
  5142  0026A0  2BB6               	incf	PWM_Task@u8_PwmCounter& (0+255),f,b
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;pwm.c: 37: if(u8_PwmCounter >= (9-u8_DutyCycle))
  5146  0026A2  0100               	movlb	0	; force () banked
  5147  0026A4  51B7               	movf	_u8_DutyCycle& (0+255),w,b
  5148  0026A6  0100               	movlb	0	; force () banked
  5149  0026A8  6FE3               	movwf	??_PWM_Task& (0+255),b
  5150  0026AA  6BE4               	clrf	(??_PWM_Task+1)& (0+255),b
  5151  0026AC  1FE3               	comf	??_PWM_Task& (0+255),f,b
  5152  0026AE  1FE4               	comf	(??_PWM_Task+1)& (0+255),f,b
  5153  0026B0  4BE3               	infsnz	??_PWM_Task& (0+255),f,b
  5154  0026B2  2BE4               	incf	(??_PWM_Task+1)& (0+255),f,b
  5155  0026B4  0E09               	movlw	9
  5156  0026B6  27E3               	addwf	??_PWM_Task& (0+255),f,b
  5157  0026B8  0E00               	movlw	0
  5158  0026BA  23E4               	addwfc	(??_PWM_Task+1)& (0+255),f,b
  5159  0026BC  0100               	movlb	0	; force () banked
  5160  0026BE  51B6               	movf	PWM_Task@u8_PwmCounter& (0+255),w,b
  5161  0026C0  0100               	movlb	0	; force () banked
  5162  0026C2  6FE5               	movwf	(??_PWM_Task+2)& (0+255),b
  5163  0026C4  6BE6               	clrf	(??_PWM_Task+3)& (0+255),b
  5164  0026C6  51E3               	movf	??_PWM_Task& (0+255),w,b
  5165  0026C8  5DE5               	subwf	(??_PWM_Task+2)& (0+255),w,b
  5166  0026CA  51E6               	movf	(??_PWM_Task+3)& (0+255),w,b
  5167  0026CC  0A80               	xorlw	128
  5168  0026CE  6FE7               	movwf	(??_PWM_Task+4)& (0+255),b
  5169  0026D0  51E4               	movf	(??_PWM_Task+1)& (0+255),w,b
  5170  0026D2  0A80               	xorlw	128
  5171  0026D4  59E7               	subwfb	(??_PWM_Task+4)& (0+255),w,b
  5172  0026D6  B0D8               	btfsc	status,0,c
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;pwm.c: 38: {
  5176                           ;pwm.c: 39: LATAbits.LA6= 0;
  5177  0026D8  9C89               	bcf	3977,6,c	;volatile
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;pwm.c: 40: }
  5181                           ;pwm.c: 41: if(u8_PwmCounter >= 9)
  5182                           
  5183                           ; BSR set to: 0
  5184  0026DA  0E08               	movlw	8
  5185  0026DC  0100               	movlb	0	; force () banked
  5186  0026DE  65B6               	cpfsgt	PWM_Task@u8_PwmCounter& (0+255),b
  5187  0026E0  0012               	return	
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;pwm.c: 42: {
  5191                           ;pwm.c: 43: LATAbits.LA6= 1;
  5192  0026E2  8C89               	bsf	3977,6,c	;volatile
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;pwm.c: 44: ++u8_PeriodCount;
  5196  0026E4  0100               	movlb	0	; force () banked
  5197  0026E6  2BB5               	incf	PWM_Task@u8_PeriodCount& (0+255),f,b
  5198                           
  5199                           ; BSR set to: 0
  5200                           ;pwm.c: 45: u8_PwmCounter= 0;
  5201  0026E8  0E00               	movlw	0
  5202  0026EA  0100               	movlb	0	; force () banked
  5203  0026EC  6FB6               	movwf	PWM_Task@u8_PwmCounter& (0+255),b
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;pwm.c: 46: if(u8_PeriodCount > 1)
  5207  0026EE  0E01               	movlw	1
  5208  0026F0  0100               	movlb	0	; force () banked
  5209  0026F2  65B5               	cpfsgt	PWM_Task@u8_PeriodCount& (0+255),b
  5210  0026F4  0012               	return	
  5211                           
  5212                           ; BSR set to: 0
  5213                           ;pwm.c: 47: {
  5214                           ;pwm.c: 48: PWM_ResetSyncTrigger();
  5215  0026F6  EC2A  F016         	call	_PWM_ResetSyncTrigger	;wreg free
  5216                           
  5217                           ;pwm.c: 49: u8_PeriodCount= 0;
  5218  0026FA  0E00               	movlw	0
  5219  0026FC  0100               	movlb	0	; force () banked
  5220  0026FE  6FB5               	movwf	PWM_Task@u8_PeriodCount& (0+255),b
  5221                           
  5222                           ; BSR set to: 0
  5223                           
  5224                           ; BSR set to: 0
  5225  002700  0012               	return	
  5226  002702                     __end_of_PWM_Task:
  5227                           	opt stack 0
  5228                           prodh	equ	0xFF4
  5229                           prodl	equ	0xFF3
  5230                           postinc0	equ	0xFEE
  5231                           wreg	equ	0xFE8
  5232                           indf2	equ	0xFDF
  5233                           postinc2	equ	0xFDE
  5234                           postdec2	equ	0xFDD
  5235                           fsr2h	equ	0xFDA
  5236                           fsr2l	equ	0xFD9
  5237                           status	equ	0xFD8
  5238                           
  5239 ;; *************** function _PWM_ResetSyncTrigger *****************
  5240 ;; Defined at:
  5241 ;;		line 79 in file "hal/pwm.c"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;		None
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;		None
  5246 ;; Return value:  Size  Location     Type
  5247 ;;                  1    wreg      void 
  5248 ;; Registers used:
  5249 ;;		wreg, status,2
  5250 ;; Tracked objects:
  5251 ;;		On entry : 0/0
  5252 ;;		On exit  : 0/0
  5253 ;;		Unchanged: 0/0
  5254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5259 ;;Total ram usage:        0 bytes
  5260 ;; Hardware stack levels used:    1
  5261 ;; Hardware stack levels required when called:    2
  5262 ;; This function calls:
  5263 ;;		Nothing
  5264 ;; This function is called by:
  5265 ;;		_PWM_Task
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269                           	psect	text29
  5270  002C54                     __ptext29:
  5271                           	opt stack 0
  5272  002C54                     _PWM_ResetSyncTrigger:
  5273                           	opt stack 27
  5274                           
  5275                           ;pwm.c: 81: bFlag_SyncTrigger= 0;
  5276                           
  5277                           ; BSR set to: 0
  5278                           ;incstack = 0
  5279  002C54  0E00               	movlw	0
  5280  002C56  0100               	movlb	0	; force () banked
  5281  002C58  6FB8               	movwf	_bFlag_SyncTrigger& (0+255),b
  5282                           
  5283                           ; BSR set to: 0
  5284  002C5A  0012               	return		;funcret
  5285  002C5C                     __end_of_PWM_ResetSyncTrigger:
  5286                           	opt stack 0
  5287                           prodh	equ	0xFF4
  5288                           prodl	equ	0xFF3
  5289                           postinc0	equ	0xFEE
  5290                           wreg	equ	0xFE8
  5291                           indf2	equ	0xFDF
  5292                           postinc2	equ	0xFDE
  5293                           postdec2	equ	0xFDD
  5294                           fsr2h	equ	0xFDA
  5295                           fsr2l	equ	0xFD9
  5296                           status	equ	0xFD8
  5297                           
  5298 ;; *************** function _NVM_Task *****************
  5299 ;; Defined at:
  5300 ;;		line 38 in file "hal/nvm.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;		None
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;		None
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  1    wreg      void 
  5307 ;; Registers used:
  5308 ;;		wreg, status,2, status,0, cstack
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5316 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5317 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5318 ;;Total ram usage:        2 bytes
  5319 ;; Hardware stack levels used:    1
  5320 ;; Hardware stack levels required when called:    3
  5321 ;; This function calls:
  5322 ;;		_SYSTEM_DisableInterrupts
  5323 ;;		_SYSTEM_EnableInterrupts
  5324 ;; This function is called by:
  5325 ;;		_main
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           	psect	text30
  5330  001C18                     __ptext30:
  5331                           	opt stack 0
  5332  001C18                     _NVM_Task:
  5333                           	opt stack 27
  5334                           
  5335                           ;nvm.c: 40: static bool bFlag_StateWriteLowByte= 0;
  5336                           ;nvm.c: 41: static uint8_t u8_TempWriteFlag= 0;
  5337                           ;nvm.c: 42: static uint16_t u16_TempWriteData= 0;
  5338                           ;nvm.c: 43: static uint16_t u16_TempAddress= 0;
  5339                           ;nvm.c: 45: if(u8_NVM_WriteRegister > 0)
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;incstack = 0
  5343  001C18  0100               	movlb	0	; force () banked
  5344  001C1A  51BB               	movf	_u8_NVM_WriteRegister& (0+255),w,b
  5345  001C1C  B4D8               	btfsc	status,2,c
  5346  001C1E  0012               	return	
  5347                           
  5348                           ; BSR set to: 0
  5349                           ;nvm.c: 46: {
  5350                           ;nvm.c: 48: if(EECON1bits.WRERR == 1)
  5351  001C20  A6A6               	btfss	4006,3,c	;volsfr
  5352  001C22  D001               	goto	l765
  5353  001C24  0012               	return	
  5354  001C26                     l765:
  5355                           
  5356                           ; BSR set to: 0
  5357                           ;nvm.c: 51: }
  5358                           ;nvm.c: 53: if( !EECON1bits.WR )
  5359  001C26  B2A6               	btfsc	4006,1,c	;volsfr
  5360  001C28  0012               	return	
  5361                           
  5362                           ; BSR set to: 0
  5363                           ;nvm.c: 54: {
  5364                           ;nvm.c: 55: SYSTEM_DisableInterrupts();
  5365  001C2A  EC3C  F016         	call	_SYSTEM_DisableInterrupts	;wreg free
  5366                           
  5367                           ;nvm.c: 56: EECON1bits.WREN= 1;
  5368  001C2E  84A6               	bsf	4006,2,c	;volsfr
  5369                           
  5370                           ;nvm.c: 58: if(bFlag_StateWriteLowByte == 0)
  5371  001C30  0100               	movlb	0	; force () banked
  5372  001C32  51BA               	movf	NVM_Task@bFlag_StateWriteLowByte& (0+255),w,b
  5373  001C34  A4D8               	btfss	status,2,c
  5374  001C36  D07A               	goto	l768
  5375                           
  5376                           ; BSR set to: 0
  5377                           ;nvm.c: 59: {
  5378                           ;nvm.c: 60: if(u8_NVM_WriteRegister & (1<<0))
  5379  001C38  0100               	movlb	0	; force () banked
  5380  001C3A  A1BB               	btfss	_u8_NVM_WriteRegister& (0+255),0,b
  5381  001C3C  D00B               	goto	l769
  5382                           
  5383                           ; BSR set to: 0
  5384                           ;nvm.c: 61: {
  5385                           ;nvm.c: 62: u16_TempAddress= 0x0000;
  5386  001C3E  0E00               	movlw	0
  5387  001C40  0100               	movlb	0	; force () banked
  5388  001C42  6F9A               	movwf	(NVM_Task@u16_TempAddress+1)& (0+255),b
  5389  001C44  0E00               	movlw	0
  5390  001C46  6F99               	movwf	NVM_Task@u16_TempAddress& (0+255),b
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;nvm.c: 63: u16_TempWriteData= u16_NVM_WriteBuffer[0];
  5394  001C48  C140  F09B         	movff	_u16_NVM_WriteBuffer,NVM_Task@u16_TempWriteData
  5395  001C4C  C141  F09C         	movff	_u16_NVM_WriteBuffer+1,NVM_Task@u16_TempWriteData+1
  5396                           
  5397                           ;nvm.c: 64: u8_TempWriteFlag= 0;
  5398  001C50  0E00               	movlw	0
  5399  001C52  D061               	goto	L15
  5400  001C54                     l769:
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;nvm.c: 66: else if(u8_NVM_WriteRegister & (1<<1))
  5404  001C54  0100               	movlb	0	; force () banked
  5405  001C56  A3BB               	btfss	_u8_NVM_WriteRegister& (0+255),1,b
  5406  001C58  D00B               	goto	l771
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;nvm.c: 67: {
  5410                           ;nvm.c: 68: u16_TempAddress= 0x0002;
  5411  001C5A  0E00               	movlw	0
  5412  001C5C  0100               	movlb	0	; force () banked
  5413  001C5E  6F9A               	movwf	(NVM_Task@u16_TempAddress+1)& (0+255),b
  5414  001C60  0E02               	movlw	2
  5415  001C62  6F99               	movwf	NVM_Task@u16_TempAddress& (0+255),b
  5416                           
  5417                           ; BSR set to: 0
  5418                           ;nvm.c: 69: u16_TempWriteData= u16_NVM_WriteBuffer[1];
  5419  001C64  C142  F09B         	movff	_u16_NVM_WriteBuffer+2,NVM_Task@u16_TempWriteData
  5420  001C68  C143  F09C         	movff	_u16_NVM_WriteBuffer+3,NVM_Task@u16_TempWriteData+1
  5421                           
  5422                           ;nvm.c: 70: u8_TempWriteFlag= 1;
  5423  001C6C  0E01               	movlw	1
  5424  001C6E  D053               	goto	L15
  5425  001C70                     l771:
  5426                           
  5427                           ; BSR set to: 0
  5428                           ;nvm.c: 72: else if(u8_NVM_WriteRegister & (1<<2))
  5429  001C70  0100               	movlb	0	; force () banked
  5430  001C72  A5BB               	btfss	_u8_NVM_WriteRegister& (0+255),2,b
  5431  001C74  D00B               	goto	l773
  5432                           
  5433                           ; BSR set to: 0
  5434                           ;nvm.c: 73: {
  5435                           ;nvm.c: 74: u16_TempAddress= 0x0004;
  5436  001C76  0E00               	movlw	0
  5437  001C78  0100               	movlb	0	; force () banked
  5438  001C7A  6F9A               	movwf	(NVM_Task@u16_TempAddress+1)& (0+255),b
  5439  001C7C  0E04               	movlw	4
  5440  001C7E  6F99               	movwf	NVM_Task@u16_TempAddress& (0+255),b
  5441                           
  5442                           ; BSR set to: 0
  5443                           ;nvm.c: 75: u16_TempWriteData= u16_NVM_WriteBuffer[2];
  5444  001C80  C144  F09B         	movff	_u16_NVM_WriteBuffer+4,NVM_Task@u16_TempWriteData
  5445  001C84  C145  F09C         	movff	_u16_NVM_WriteBuffer+5,NVM_Task@u16_TempWriteData+1
  5446                           
  5447                           ;nvm.c: 76: u8_TempWriteFlag= 2;
  5448  001C88  0E02               	movlw	2
  5449  001C8A  D045               	goto	L15
  5450  001C8C                     l773:
  5451                           
  5452                           ; BSR set to: 0
  5453                           ;nvm.c: 78: else if(u8_NVM_WriteRegister & (1<<3))
  5454  001C8C  0100               	movlb	0	; force () banked
  5455  001C8E  A7BB               	btfss	_u8_NVM_WriteRegister& (0+255),3,b
  5456  001C90  D00B               	goto	l775
  5457                           
  5458                           ; BSR set to: 0
  5459                           ;nvm.c: 79: {
  5460                           ;nvm.c: 80: u16_TempAddress= 0x0006;
  5461  001C92  0E00               	movlw	0
  5462  001C94  0100               	movlb	0	; force () banked
  5463  001C96  6F9A               	movwf	(NVM_Task@u16_TempAddress+1)& (0+255),b
  5464  001C98  0E06               	movlw	6
  5465  001C9A  6F99               	movwf	NVM_Task@u16_TempAddress& (0+255),b
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;nvm.c: 81: u16_TempWriteData= u16_NVM_WriteBuffer[3];
  5469  001C9C  C146  F09B         	movff	_u16_NVM_WriteBuffer+6,NVM_Task@u16_TempWriteData
  5470  001CA0  C147  F09C         	movff	_u16_NVM_WriteBuffer+7,NVM_Task@u16_TempWriteData+1
  5471                           
  5472                           ;nvm.c: 82: u8_TempWriteFlag= 3;
  5473  001CA4  0E03               	movlw	3
  5474  001CA6  D037               	goto	L15
  5475  001CA8                     l775:
  5476                           
  5477                           ; BSR set to: 0
  5478                           ;nvm.c: 84: else if(u8_NVM_WriteRegister & (1<<4))
  5479  001CA8  0100               	movlb	0	; force () banked
  5480  001CAA  A9BB               	btfss	_u8_NVM_WriteRegister& (0+255),4,b
  5481  001CAC  D00B               	goto	l777
  5482                           
  5483                           ; BSR set to: 0
  5484                           ;nvm.c: 85: {
  5485                           ;nvm.c: 86: u16_TempAddress= 0x0008;
  5486  001CAE  0E00               	movlw	0
  5487  001CB0  0100               	movlb	0	; force () banked
  5488  001CB2  6F9A               	movwf	(NVM_Task@u16_TempAddress+1)& (0+255),b
  5489  001CB4  0E08               	movlw	8
  5490  001CB6  6F99               	movwf	NVM_Task@u16_TempAddress& (0+255),b
  5491                           
  5492                           ; BSR set to: 0
  5493                           ;nvm.c: 87: u16_TempWriteData= u16_NVM_WriteBuffer[4];
  5494  001CB8  C148  F09B         	movff	_u16_NVM_WriteBuffer+8,NVM_Task@u16_TempWriteData
  5495  001CBC  C149  F09C         	movff	_u16_NVM_WriteBuffer+9,NVM_Task@u16_TempWriteData+1
  5496                           
  5497                           ;nvm.c: 88: u8_TempWriteFlag= 4;
  5498  001CC0  0E04               	movlw	4
  5499  001CC2  D029               	goto	L15
  5500  001CC4                     l777:
  5501                           
  5502                           ; BSR set to: 0
  5503                           ;nvm.c: 90: else if(u8_NVM_WriteRegister & (1<<5))
  5504  001CC4  0100               	movlb	0	; force () banked
  5505  001CC6  ABBB               	btfss	_u8_NVM_WriteRegister& (0+255),5,b
  5506  001CC8  D00B               	goto	l779
  5507                           
  5508                           ; BSR set to: 0
  5509                           ;nvm.c: 91: {
  5510                           ;nvm.c: 92: u16_TempAddress= 0x000A;
  5511  001CCA  0E00               	movlw	0
  5512  001CCC  0100               	movlb	0	; force () banked
  5513  001CCE  6F9A               	movwf	(NVM_Task@u16_TempAddress+1)& (0+255),b
  5514  001CD0  0E0A               	movlw	10
  5515  001CD2  6F99               	movwf	NVM_Task@u16_TempAddress& (0+255),b
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;nvm.c: 93: u16_TempWriteData= u16_NVM_WriteBuffer[5];
  5519  001CD4  C14A  F09B         	movff	_u16_NVM_WriteBuffer+10,NVM_Task@u16_TempWriteData
  5520  001CD8  C14B  F09C         	movff	_u16_NVM_WriteBuffer+11,NVM_Task@u16_TempWriteData+1
  5521                           
  5522                           ;nvm.c: 94: u8_TempWriteFlag= 5;
  5523  001CDC  0E05               	movlw	5
  5524  001CDE  D01B               	goto	L15
  5525  001CE0                     l779:
  5526                           
  5527                           ; BSR set to: 0
  5528                           ;nvm.c: 96: else if(u8_NVM_WriteRegister & (1<<6))
  5529  001CE0  0100               	movlb	0	; force () banked
  5530  001CE2  ADBB               	btfss	_u8_NVM_WriteRegister& (0+255),6,b
  5531  001CE4  D00B               	goto	l781
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;nvm.c: 97: {
  5535                           ;nvm.c: 98: u16_TempAddress= 0x000C;
  5536  001CE6  0E00               	movlw	0
  5537  001CE8  0100               	movlb	0	; force () banked
  5538  001CEA  6F9A               	movwf	(NVM_Task@u16_TempAddress+1)& (0+255),b
  5539  001CEC  0E0C               	movlw	12
  5540  001CEE  6F99               	movwf	NVM_Task@u16_TempAddress& (0+255),b
  5541                           
  5542                           ; BSR set to: 0
  5543                           ;nvm.c: 99: u16_TempWriteData= u16_NVM_WriteBuffer[6];
  5544  001CF0  C14C  F09B         	movff	_u16_NVM_WriteBuffer+12,NVM_Task@u16_TempWriteData
  5545  001CF4  C14D  F09C         	movff	_u16_NVM_WriteBuffer+13,NVM_Task@u16_TempWriteData+1
  5546                           
  5547                           ;nvm.c: 100: u8_TempWriteFlag= 6;
  5548  001CF8  0E06               	movlw	6
  5549  001CFA  D00D               	goto	L15
  5550  001CFC                     l781:
  5551                           
  5552                           ; BSR set to: 0
  5553                           ;nvm.c: 102: else if(u8_NVM_WriteRegister & (1<<7))
  5554  001CFC  0100               	movlb	0	; force () banked
  5555  001CFE  AFBB               	btfss	_u8_NVM_WriteRegister& (0+255),7,b
  5556  001D00  D00C               	goto	l783
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;nvm.c: 103: {
  5560                           ;nvm.c: 104: u16_TempAddress= 0x000E;
  5561  001D02  0E00               	movlw	0
  5562  001D04  0100               	movlb	0	; force () banked
  5563  001D06  6F9A               	movwf	(NVM_Task@u16_TempAddress+1)& (0+255),b
  5564  001D08  0E0E               	movlw	14
  5565  001D0A  6F99               	movwf	NVM_Task@u16_TempAddress& (0+255),b
  5566                           
  5567                           ; BSR set to: 0
  5568                           ;nvm.c: 105: u16_TempWriteData= u16_NVM_WriteBuffer[7];
  5569  001D0C  C14E  F09B         	movff	_u16_NVM_WriteBuffer+14,NVM_Task@u16_TempWriteData
  5570  001D10  C14F  F09C         	movff	_u16_NVM_WriteBuffer+15,NVM_Task@u16_TempWriteData+1
  5571                           
  5572                           ;nvm.c: 106: u8_TempWriteFlag= 7;
  5573  001D14  0E07               	movlw	7
  5574  001D16                     L15:
  5575  001D16  0100               	movlb	0	; force () banked
  5576  001D18  6FB9               	movwf	NVM_Task@u8_TempWriteFlag& (0+255),b
  5577  001D1A                     l783:
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;nvm.c: 112: }
  5581                           ;nvm.c: 113: bFlag_StateWriteLowByte= 1;
  5582                           
  5583                           ; BSR set to: 0
  5584                           
  5585                           ; BSR set to: 0
  5586                           
  5587                           ; BSR set to: 0
  5588                           
  5589                           ; BSR set to: 0
  5590                           
  5591                           ; BSR set to: 0
  5592                           
  5593                           ; BSR set to: 0
  5594                           
  5595                           ; BSR set to: 0
  5596                           
  5597                           ; BSR set to: 0
  5598                           
  5599                           ;nvm.c: 109: else
  5600                           ;nvm.c: 110: {
  5601                           ;nvm.c: 111: ;
  5602                           
  5603                           ; BSR set to: 0
  5604  001D1A  0E01               	movlw	1
  5605  001D1C  0100               	movlb	0	; force () banked
  5606  001D1E  6FBA               	movwf	NVM_Task@bFlag_StateWriteLowByte& (0+255),b
  5607                           
  5608                           ; BSR set to: 0
  5609                           ;nvm.c: 114: EEADR= u16_TempAddress;
  5610  001D20  C099  FFA9         	movff	NVM_Task@u16_TempAddress,4009	;volatile
  5611                           
  5612                           ;nvm.c: 115: EEDATA= (u16_TempWriteData >> 8) & 0x00ff;
  5613  001D24  0100               	movlb	0	; force () banked
  5614  001D26  519C               	movf	(NVM_Task@u16_TempWriteData+1)& (0+255),w,b
  5615  001D28  6EA8               	movwf	4008,c	;volatile
  5616                           
  5617                           ;nvm.c: 116: }
  5618  001D2A  D01D               	goto	l785
  5619  001D2C                     l768:
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;nvm.c: 117: else
  5623                           ;nvm.c: 118: {
  5624                           ;nvm.c: 119: bFlag_StateWriteLowByte= 0;
  5625                           
  5626                           ; BSR set to: 0
  5627  001D2C  0E00               	movlw	0
  5628  001D2E  0100               	movlb	0	; force () banked
  5629  001D30  6FBA               	movwf	NVM_Task@bFlag_StateWriteLowByte& (0+255),b
  5630                           
  5631                           ; BSR set to: 0
  5632                           ;nvm.c: 120: u8_NVM_WriteRegister&= ~(1<<u8_TempWriteFlag);
  5633  001D32  C0B9  F0E3         	movff	NVM_Task@u8_TempWriteFlag,??_NVM_Task
  5634  001D36  0E01               	movlw	1
  5635  001D38  0100               	movlb	0	; force () banked
  5636  001D3A  6FE4               	movwf	(??_NVM_Task+1)& (0+255),b
  5637  001D3C  2BE3               	incf	??_NVM_Task& (0+255),f,b
  5638  001D3E  D002               	goto	u5744
  5639  001D40                     u5745:
  5640  001D40  90D8               	bcf	status,0,c
  5641  001D42  37E4               	rlcf	(??_NVM_Task+1)& (0+255),f,b
  5642  001D44                     u5744:
  5643  001D44  2FE3               	decfsz	??_NVM_Task& (0+255),f,b
  5644  001D46  D7FC               	goto	u5745
  5645  001D48  0100               	movlb	0	; force () banked
  5646  001D4A  51E4               	movf	(??_NVM_Task+1)& (0+255),w,b
  5647  001D4C  0AFF               	xorlw	255
  5648  001D4E  0100               	movlb	0	; force () banked
  5649  001D50  17BB               	andwf	_u8_NVM_WriteRegister& (0+255),f,b
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;nvm.c: 121: EEADR= u16_TempAddress + 0x0001;
  5653  001D52  0100               	movlb	0	; force () banked
  5654  001D54  2999               	incf	NVM_Task@u16_TempAddress& (0+255),w,b
  5655  001D56  6EA9               	movwf	4009,c	;volatile
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;nvm.c: 122: EEDATA= u16_TempWriteData & 0x00ff;
  5659  001D58  C09B  FFA8         	movff	NVM_Task@u16_TempWriteData,4008	;volatile
  5660                           
  5661                           ;nvm.c: 123: u16_TempWriteData= 0;
  5662  001D5C  0E00               	movlw	0
  5663  001D5E  0100               	movlb	0	; force () banked
  5664  001D60  6F9C               	movwf	(NVM_Task@u16_TempWriteData+1)& (0+255),b
  5665  001D62  0E00               	movlw	0
  5666  001D64  6F9B               	movwf	NVM_Task@u16_TempWriteData& (0+255),b
  5667  001D66                     l785:
  5668                           
  5669                           ; BSR set to: 0
  5670                           ;nvm.c: 124: }
  5671                           ;nvm.c: 126: EECON1bits.EEPGD= 0;
  5672                           
  5673                           ; BSR set to: 0
  5674  001D66  9EA6               	bcf	4006,7,c	;volsfr
  5675                           
  5676                           ; BSR set to: 0
  5677                           ;nvm.c: 127: EECON1bits.CFGS= 0;
  5678  001D68  9CA6               	bcf	4006,6,c	;volsfr
  5679                           
  5680                           ;nvm.c: 128: EECON2= 0x55;
  5681  001D6A  0E55               	movlw	85
  5682  001D6C  6EA7               	movwf	4007,c	;volsfr
  5683                           
  5684                           ;nvm.c: 129: EECON2= 0x0AA;
  5685  001D6E  0EAA               	movlw	170
  5686  001D70  6EA7               	movwf	4007,c	;volsfr
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;nvm.c: 130: EECON1bits.WR= 1;
  5690  001D72  82A6               	bsf	4006,1,c	;volsfr
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;nvm.c: 132: SYSTEM_EnableInterrupts();
  5694  001D74  EC39  F016         	call	_SYSTEM_EnableInterrupts	;wreg free
  5695  001D78  0012               	return	
  5696  001D7A                     __end_of_NVM_Task:
  5697                           	opt stack 0
  5698                           prodh	equ	0xFF4
  5699                           prodl	equ	0xFF3
  5700                           postinc0	equ	0xFEE
  5701                           wreg	equ	0xFE8
  5702                           indf2	equ	0xFDF
  5703                           postinc2	equ	0xFDE
  5704                           postdec2	equ	0xFDD
  5705                           fsr2h	equ	0xFDA
  5706                           fsr2l	equ	0xFD9
  5707                           status	equ	0xFD8
  5708                           
  5709 ;; *************** function _SYSTEM_EnableInterrupts *****************
  5710 ;; Defined at:
  5711 ;;		line 27 in file "hal/system.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;		None
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;		None
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  1    wreg      void 
  5718 ;; Registers used:
  5719 ;;		None
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5729 ;;Total ram usage:        0 bytes
  5730 ;; Hardware stack levels used:    1
  5731 ;; Hardware stack levels required when called:    2
  5732 ;; This function calls:
  5733 ;;		Nothing
  5734 ;; This function is called by:
  5735 ;;		_main
  5736 ;;		_NVM_Task
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           	psect	text31
  5741  002C72                     __ptext31:
  5742                           	opt stack 0
  5743  002C72                     _SYSTEM_EnableInterrupts:
  5744                           	opt stack 28
  5745                           
  5746                           ;system.c: 29: INTCONbits.GIE= 1;
  5747                           
  5748                           ;incstack = 0
  5749  002C72  8EF2               	bsf	intcon,7,c	;volatile
  5750                           
  5751                           ;system.c: 30: INTCONbits.PEIE= 1;
  5752  002C74  8CF2               	bsf	intcon,6,c	;volatile
  5753  002C76  0012               	return		;funcret
  5754  002C78                     __end_of_SYSTEM_EnableInterrupts:
  5755                           	opt stack 0
  5756                           prodh	equ	0xFF4
  5757                           prodl	equ	0xFF3
  5758                           intcon	equ	0xFF2
  5759                           postinc0	equ	0xFEE
  5760                           wreg	equ	0xFE8
  5761                           indf2	equ	0xFDF
  5762                           postinc2	equ	0xFDE
  5763                           postdec2	equ	0xFDD
  5764                           fsr2h	equ	0xFDA
  5765                           fsr2l	equ	0xFD9
  5766                           status	equ	0xFD8
  5767                           
  5768 ;; *************** function _SYSTEM_DisableInterrupts *****************
  5769 ;; Defined at:
  5770 ;;		line 33 in file "hal/system.c"
  5771 ;; Parameters:    Size  Location     Type
  5772 ;;		None
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;		None
  5775 ;; Return value:  Size  Location     Type
  5776 ;;                  1    wreg      void 
  5777 ;; Registers used:
  5778 ;;		None
  5779 ;; Tracked objects:
  5780 ;;		On entry : 0/0
  5781 ;;		On exit  : 0/0
  5782 ;;		Unchanged: 0/0
  5783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5788 ;;Total ram usage:        0 bytes
  5789 ;; Hardware stack levels used:    1
  5790 ;; Hardware stack levels required when called:    2
  5791 ;; This function calls:
  5792 ;;		Nothing
  5793 ;; This function is called by:
  5794 ;;		_NVM_Task
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           
  5798                           	psect	text32
  5799  002C78                     __ptext32:
  5800                           	opt stack 0
  5801  002C78                     _SYSTEM_DisableInterrupts:
  5802                           	opt stack 27
  5803                           
  5804                           ;system.c: 35: INTCONbits.GIE= 0;
  5805                           
  5806                           ;incstack = 0
  5807  002C78  9EF2               	bcf	intcon,7,c	;volatile
  5808                           
  5809                           ;system.c: 36: INTCONbits.PEIE= 0;
  5810  002C7A  9CF2               	bcf	intcon,6,c	;volatile
  5811  002C7C  0012               	return		;funcret
  5812  002C7E                     __end_of_SYSTEM_DisableInterrupts:
  5813                           	opt stack 0
  5814                           prodh	equ	0xFF4
  5815                           prodl	equ	0xFF3
  5816                           intcon	equ	0xFF2
  5817                           postinc0	equ	0xFEE
  5818                           wreg	equ	0xFE8
  5819                           indf2	equ	0xFDF
  5820                           postinc2	equ	0xFDE
  5821                           postdec2	equ	0xFDD
  5822                           fsr2h	equ	0xFDA
  5823                           fsr2l	equ	0xFD9
  5824                           status	equ	0xFD8
  5825                           
  5826 ;; *************** function _NVM_Init *****************
  5827 ;; Defined at:
  5828 ;;		line 20 in file "hal/nvm.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;		None
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;  u16_TempData    2   18[BANK0 ] unsigned int 
  5833 ;; Return value:  Size  Location     Type
  5834 ;;                  1    wreg      void 
  5835 ;; Registers used:
  5836 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5837 ;; Tracked objects:
  5838 ;;		On entry : 0/0
  5839 ;;		On exit  : 0/0
  5840 ;;		Unchanged: 0/0
  5841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5843 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5845 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5846 ;;Total ram usage:        2 bytes
  5847 ;; Hardware stack levels used:    1
  5848 ;; Hardware stack levels required when called:    2
  5849 ;; This function calls:
  5850 ;;		Nothing
  5851 ;; This function is called by:
  5852 ;;		_main
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           	psect	text33
  5857  002910                     __ptext33:
  5858                           	opt stack 0
  5859  002910                     _NVM_Init:
  5860                           	opt stack 28
  5861                           
  5862                           ;nvm.c: 22: uint16_t u16_TempData= 0;
  5863                           
  5864                           ;incstack = 0
  5865  002910  0E00               	movlw	0
  5866  002912  0100               	movlb	0	; force () banked
  5867  002914  6FE4               	movwf	(NVM_Init@u16_TempData+1)& (0+255),b
  5868  002916  0E00               	movlw	0
  5869  002918  6FE3               	movwf	NVM_Init@u16_TempData& (0+255),b
  5870  00291A                     l5034:
  5871                           
  5872                           ; BSR set to: 0
  5873                           ;nvm.c: 24: for(;u16_TempData < 5; ++u16_TempData)
  5874  00291A  0100               	movlb	0	; force () banked
  5875  00291C  51E4               	movf	(NVM_Init@u16_TempData+1)& (0+255),w,b
  5876  00291E  E116               	bnz	l5044
  5877  002920  0E05               	movlw	5
  5878  002922  5DE3               	subwf	NVM_Init@u16_TempData& (0+255),w,b
  5879  002924  B0D8               	btfsc	status,0,c
  5880  002926  D012               	goto	u4930
  5881                           
  5882                           ; BSR set to: 0
  5883                           ;nvm.c: 25: {
  5884                           ;nvm.c: 26: u16_NVM_WriteBuffer[u16_TempData]= 0;
  5885                           
  5886                           ; BSR set to: 0
  5887                           
  5888                           ; BSR set to: 0
  5889  002928  90D8               	bcf	status,0,c
  5890  00292A  0100               	movlb	0	; force () banked
  5891  00292C  35E3               	rlcf	NVM_Init@u16_TempData& (0+255),w,b
  5892  00292E  6ED9               	movwf	fsr2l,c
  5893  002930  35E4               	rlcf	(NVM_Init@u16_TempData+1)& (0+255),w,b
  5894  002932  6EDA               	movwf	fsr2h,c
  5895  002934  0E40               	movlw	low _u16_NVM_WriteBuffer
  5896  002936  26D9               	addwf	fsr2l,f,c
  5897  002938  0E01               	movlw	high _u16_NVM_WriteBuffer
  5898  00293A  22DA               	addwfc	fsr2h,f,c
  5899  00293C  0E00               	movlw	0
  5900  00293E  6EDE               	movwf	postinc2,c
  5901  002940  0E00               	movlw	0
  5902  002942  6EDD               	movwf	postdec2,c
  5903                           
  5904                           ; BSR set to: 0
  5905  002944  0100               	movlb	0	; force () banked
  5906  002946  4BE3               	infsnz	NVM_Init@u16_TempData& (0+255),f,b
  5907  002948  2BE4               	incf	(NVM_Init@u16_TempData+1)& (0+255),f,b
  5908  00294A  D7E7               	goto	l5034
  5909  00294C                     u4930:
  5910  00294C                     l5044:
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;nvm.c: 27: }
  5914                           ;nvm.c: 28: u16_TempData= 0;
  5915  00294C  0E00               	movlw	0
  5916  00294E  0100               	movlb	0	; force () banked
  5917  002950  6FE4               	movwf	(NVM_Init@u16_TempData+1)& (0+255),b
  5918  002952  0E00               	movlw	0
  5919  002954  6FE3               	movwf	NVM_Init@u16_TempData& (0+255),b
  5920                           
  5921                           ;nvm.c: 30: EECON1= 0;
  5922  002956  0E00               	movlw	0
  5923  002958  6EA6               	movwf	4006,c	;volsfr
  5924                           
  5925                           ; BSR set to: 0
  5926  00295A  0012               	return		;funcret
  5927  00295C                     __end_of_NVM_Init:
  5928                           	opt stack 0
  5929                           prodh	equ	0xFF4
  5930                           prodl	equ	0xFF3
  5931                           intcon	equ	0xFF2
  5932                           postinc0	equ	0xFEE
  5933                           wreg	equ	0xFE8
  5934                           indf2	equ	0xFDF
  5935                           postinc2	equ	0xFDE
  5936                           postdec2	equ	0xFDD
  5937                           fsr2h	equ	0xFDA
  5938                           fsr2l	equ	0xFD9
  5939                           status	equ	0xFD8
  5940                           
  5941 ;; *************** function _LCD_Task *****************
  5942 ;; Defined at:
  5943 ;;		line 496 in file "mid/lcd.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;		None
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;		None
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  1    wreg      void 
  5950 ;; Registers used:
  5951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5959 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5960 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5961 ;;Total ram usage:        2 bytes
  5962 ;; Hardware stack levels used:    1
  5963 ;; Hardware stack levels required when called:    4
  5964 ;; This function calls:
  5965 ;;		_I2C_SendData
  5966 ;;		_I2C_Start
  5967 ;;		_I2C_Stop
  5968 ;; This function is called by:
  5969 ;;		_main
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           	psect	text34
  5974  002150                     __ptext34:
  5975                           	opt stack 0
  5976  002150                     _LCD_Task:
  5977                           	opt stack 26
  5978                           
  5979                           ;lcd.c: 498: static uint8_t u8_LCD_DataCounter= 0;
  5980                           ;lcd.c: 499: static uint8_t u8_Status= 0;
  5981                           ;lcd.c: 500: static bool bFlag_SecondaryData= 0;
  5982                           ;lcd.c: 502: switch(u8_LCD_State)
  5983                           
  5984                           ; BSR set to: 0
  5985                           ;incstack = 0
  5986  002150  D056               	goto	l496
  5987  002152  0E70               	movlw	112
  5988  002154  EC8B  F012         	call	_I2C_Start
  5989  002158  0100               	movlb	0	; force () banked
  5990  00215A  6FC6               	movwf	LCD_Task@u8_Status& (0+255),b
  5991                           
  5992                           ; BSR set to: 0
  5993                           ;lcd.c: 505: if(u8_Status == 10)
  5994  00215C  0E0A               	movlw	10
  5995  00215E  0100               	movlb	0	; force () banked
  5996  002160  19C6               	xorwf	LCD_Task@u8_Status& (0+255),w,b
  5997  002162  A4D8               	btfss	status,2,c
  5998  002164  D006               	goto	l498
  5999                           
  6000                           ; BSR set to: 0
  6001                           ;lcd.c: 506: {
  6002                           ;lcd.c: 507: u8_LCD_State= 1;
  6003  002166  0E00               	movlw	0
  6004  002168  0100               	movlb	0	; force () banked
  6005  00216A  6FAE               	movwf	(_u8_LCD_State+1)& (0+255),b
  6006  00216C  0E01               	movlw	1
  6007  00216E  6FAD               	movwf	_u8_LCD_State& (0+255),b
  6008                           
  6009                           ;lcd.c: 508: }
  6010  002170  0012               	return	
  6011  002172                     l498:
  6012                           
  6013                           ; BSR set to: 0
  6014                           ;lcd.c: 509: else
  6015                           ;lcd.c: 510: {
  6016                           ;lcd.c: 511: u8_LCD_State= 3;
  6017                           
  6018                           ; BSR set to: 0
  6019  002172  0E00               	movlw	0
  6020  002174  0100               	movlb	0	; force () banked
  6021  002176  6FAE               	movwf	(_u8_LCD_State+1)& (0+255),b
  6022  002178  0E03               	movlw	3
  6023  00217A  6FAD               	movwf	_u8_LCD_State& (0+255),b
  6024                           
  6025                           ; BSR set to: 0
  6026                           ;lcd.c: 512: }
  6027                           ;lcd.c: 513: break;
  6028  00217C  0012               	return	
  6029  00217E                     
  6030                           ; BSR set to: 0
  6031                           ;lcd.c: 516: if(bFlag_SecondaryData == 0)
  6032                           
  6033                           ; BSR set to: 0
  6034  00217E  0100               	movlb	0	; force () banked
  6035  002180  51C5               	movf	LCD_Task@bFlag_SecondaryData& (0+255),w,b
  6036  002182  A4D8               	btfss	status,2,c
  6037  002184  D00D               	goto	l502
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;lcd.c: 517: {
  6041                           ;lcd.c: 518: u8_Status= I2C_SendData(u8_LCD_Data[u8_LCD_DataCounter]);
  6042  002186  0100               	movlb	0	; force () banked
  6043  002188  51C7               	movf	LCD_Task@u8_LCD_DataCounter& (0+255),w,b
  6044  00218A  0D01               	mullw	1
  6045  00218C  0E10               	movlw	low _u8_LCD_Data
  6046  00218E  24F3               	addwf	prodl,w,c
  6047  002190  6ED9               	movwf	fsr2l,c
  6048  002192  0E01               	movlw	high _u8_LCD_Data
  6049  002194  20F4               	addwfc	prodh,w,c
  6050  002196  6EDA               	movwf	fsr2h,c
  6051  002198  50DF               	movf	indf2,w,c
  6052  00219A  EC83  F015         	call	_I2C_SendData
  6053  00219E  D00C               	goto	L16
  6054  0021A0                     l502:
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;lcd.c: 520: else
  6058                           ;lcd.c: 521: {
  6059                           ;lcd.c: 522: u8_Status= I2C_SendData(u8_LCD_Data_Ext[u8_LCD_DataCounter]);
  6060                           
  6061                           ; BSR set to: 0
  6062  0021A0  0100               	movlb	0	; force () banked
  6063  0021A2  51C7               	movf	LCD_Task@u8_LCD_DataCounter& (0+255),w,b
  6064  0021A4  0D01               	mullw	1
  6065  0021A6  0E00               	movlw	low _u8_LCD_Data_Ext
  6066  0021A8  24F3               	addwf	prodl,w,c
  6067  0021AA  6ED9               	movwf	fsr2l,c
  6068  0021AC  0E01               	movlw	high _u8_LCD_Data_Ext
  6069  0021AE  20F4               	addwfc	prodh,w,c
  6070  0021B0  6EDA               	movwf	fsr2h,c
  6071  0021B2  50DF               	movf	indf2,w,c
  6072  0021B4  EC83  F015         	call	_I2C_SendData
  6073  0021B8                     L16:
  6074  0021B8  0100               	movlb	0	; force () banked
  6075  0021BA  6FC6               	movwf	LCD_Task@u8_Status& (0+255),b
  6076                           
  6077                           ; BSR set to: 0
  6078                           ;lcd.c: 523: }
  6079                           ;lcd.c: 524: if(u8_Status == 2)
  6080                           
  6081                           ; BSR set to: 0
  6082  0021BC  0E02               	movlw	2
  6083  0021BE  0100               	movlb	0	; force () banked
  6084  0021C0  19C6               	xorwf	LCD_Task@u8_Status& (0+255),w,b
  6085  0021C2  A4D8               	btfss	status,2,c
  6086  0021C4  0012               	return	
  6087                           
  6088                           ; BSR set to: 0
  6089                           ;lcd.c: 525: {
  6090                           ;lcd.c: 526: ++u8_LCD_DataCounter;
  6091  0021C6  0100               	movlb	0	; force () banked
  6092  0021C8  2BC7               	incf	LCD_Task@u8_LCD_DataCounter& (0+255),f,b
  6093                           
  6094                           ; BSR set to: 0
  6095                           ;lcd.c: 527: if(u8_LCD_DataCounter >= 14)
  6096  0021CA  0E0D               	movlw	13
  6097  0021CC  0100               	movlb	0	; force () banked
  6098  0021CE  65C7               	cpfsgt	LCD_Task@u8_LCD_DataCounter& (0+255),b
  6099  0021D0  0012               	return	
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;lcd.c: 528: {
  6103                           ;lcd.c: 529: u8_LCD_DataCounter= 0;
  6104  0021D2  0E00               	movlw	0
  6105  0021D4  0100               	movlb	0	; force () banked
  6106  0021D6  6FC7               	movwf	LCD_Task@u8_LCD_DataCounter& (0+255),b
  6107                           
  6108                           ;lcd.c: 530: u8_LCD_State= 4;
  6109  0021D8  0E00               	movlw	0
  6110  0021DA  0100               	movlb	0	; force () banked
  6111  0021DC  6FAE               	movwf	(_u8_LCD_State+1)& (0+255),b
  6112  0021DE  0E04               	movlw	4
  6113  0021E0  6FAD               	movwf	_u8_LCD_State& (0+255),b
  6114                           
  6115                           ; BSR set to: 0
  6116                           ;lcd.c: 531: }
  6117                           ;lcd.c: 532: }
  6118                           ;lcd.c: 533: break;
  6119                           
  6120                           ; BSR set to: 0
  6121  0021E2  0012               	return	
  6122  0021E4                     
  6123                           ; BSR set to: 0
  6124                           
  6125                           ; BSR set to: 0
  6126  0021E4  0E02               	movlw	2
  6127  0021E6  0100               	movlb	0	; force () banked
  6128  0021E8  19C6               	xorwf	LCD_Task@u8_Status& (0+255),w,b
  6129  0021EA  A4D8               	btfss	status,2,c
  6130  0021EC  0012               	return	
  6131                           
  6132                           ; BSR set to: 0
  6133                           ;lcd.c: 536: {
  6134                           ;lcd.c: 537: I2C_Stop();
  6135  0021EE  EC3F  F016         	call	_I2C_Stop	;wreg free
  6136                           
  6137                           ;lcd.c: 538: u8_LCD_State= 0;
  6138  0021F2  0E00               	movlw	0
  6139  0021F4  0100               	movlb	0	; force () banked
  6140  0021F6  6FAE               	movwf	(_u8_LCD_State+1)& (0+255),b
  6141  0021F8  0E00               	movlw	0
  6142  0021FA  6FAD               	movwf	_u8_LCD_State& (0+255),b
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;lcd.c: 541: }
  6146                           
  6147                           ; BSR set to: 0
  6148                           ;lcd.c: 539: }
  6149                           ;lcd.c: 540: break;
  6150  0021FC  0012               	return	
  6151  0021FE                     l496:
  6152                           
  6153                           ; BSR set to: 0
  6154  0021FE  C0AD  F0EC         	movff	_u8_LCD_State,??_LCD_Task
  6155  002202  C0AE  F0ED         	movff	_u8_LCD_State+1,??_LCD_Task+1
  6156                           
  6157                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6158                           ; Switch size 1, requested type "space"
  6159                           ; Number of cases is 1, Range of values is 0 to 0
  6160                           ; switch strategies available:
  6161                           ; Name         Instructions Cycles
  6162                           ; simple_byte            4     3 (average)
  6163                           ;	Chosen strategy is simple_byte
  6164  002206  0100               	movlb	0	; force () banked
  6165  002208  51ED               	movf	(??_LCD_Task+1)& (0+255),w,b
  6166  00220A  0A00               	xorlw	0	; case 0
  6167  00220C  A4D8               	btfss	status,2,c
  6168  00220E  0012               	return	
  6169                           
  6170                           ; BSR set to: 0
  6171                           ; Switch size 1, requested type "space"
  6172                           ; Number of cases is 3, Range of values is 1 to 4
  6173                           ; switch strategies available:
  6174                           ; Name         Instructions Cycles
  6175                           ; simple_byte           10     6 (average)
  6176                           ;	Chosen strategy is simple_byte
  6177  002210  51EC               	movf	??_LCD_Task& (0+255),w,b
  6178  002212  0A01               	xorlw	1	; case 1
  6179  002214  B4D8               	btfsc	status,2,c
  6180  002216  D79D               	goto	l497
  6181  002218  0A02               	xorlw	2	; case 3
  6182  00221A  B4D8               	btfsc	status,2,c
  6183  00221C  D7B0               	goto	l501
  6184  00221E  0A07               	xorlw	7	; case 4
  6185  002220  A4D8               	btfss	status,2,c
  6186  002222  0012               	return	
  6187  002224  D7DF               	goto	l506
  6188  002226                     __end_of_LCD_Task:
  6189                           	opt stack 0
  6190                           prodh	equ	0xFF4
  6191                           prodl	equ	0xFF3
  6192                           intcon	equ	0xFF2
  6193                           postinc0	equ	0xFEE
  6194                           wreg	equ	0xFE8
  6195                           indf2	equ	0xFDF
  6196                           postinc2	equ	0xFDE
  6197                           postdec2	equ	0xFDD
  6198                           fsr2h	equ	0xFDA
  6199                           fsr2l	equ	0xFD9
  6200                           status	equ	0xFD8
  6201                           
  6202 ;; *************** function _LCD_Init *****************
  6203 ;; Defined at:
  6204 ;;		line 28 in file "mid/lcd.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;		None
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;  u8_Temp         1   28[BANK0 ] unsigned char 
  6209 ;; Return value:  Size  Location     Type
  6210 ;;                  1    wreg      void 
  6211 ;; Registers used:
  6212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6213 ;; Tracked objects:
  6214 ;;		On entry : 0/0
  6215 ;;		On exit  : 0/0
  6216 ;;		Unchanged: 0/0
  6217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6219 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6220 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6221 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6222 ;;Total ram usage:        2 bytes
  6223 ;; Hardware stack levels used:    1
  6224 ;; Hardware stack levels required when called:    4
  6225 ;; This function calls:
  6226 ;;		_I2C_SendData
  6227 ;;		_I2C_Start
  6228 ;;		_I2C_Stop
  6229 ;;		_LCD_SetData
  6230 ;; This function is called by:
  6231 ;;		_main
  6232 ;; This function uses a non-reentrant model
  6233 ;;
  6234                           
  6235                           	psect	text35
  6236  001A86                     __ptext35:
  6237                           	opt stack 0
  6238  001A86                     _LCD_Init:
  6239                           	opt stack 26
  6240                           
  6241                           ;lcd.c: 30: uint8_t u8_Temp;
  6242                           ;lcd.c: 32: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  6243                           
  6244                           ; BSR set to: 0
  6245                           ;incstack = 0
  6246  001A86  B4C7               	btfsc	4039,2,c	;volatile
  6247  001A88  D7FE               	goto	_LCD_Init
  6248  001A8A  CFC5 F0EC          	movff	4037,??_LCD_Init	;volatile
  6249  001A8E  0E1F               	movlw	31
  6250  001A90  0100               	movlb	0	; force () banked
  6251  001A92  17EC               	andwf	??_LCD_Init& (0+255),f,b
  6252  001A94  A4D8               	btfss	status,2,c
  6253  001A96  D7F7               	goto	_LCD_Init
  6254                           
  6255                           ; BSR set to: 0
  6256                           ;lcd.c: 33: I2C_Start(0b01110000);
  6257                           
  6258                           ; BSR set to: 0
  6259  001A98  0E70               	movlw	112
  6260  001A9A  EC8B  F012         	call	_I2C_Start
  6261  001A9E  B4C7               	btfsc	4039,2,c	;volatile
  6262  001AA0  D7FE               	goto	l319
  6263  001AA2  CFC5 F0EC          	movff	4037,??_LCD_Init	;volatile
  6264  001AA6  0E1F               	movlw	31
  6265  001AA8  0100               	movlb	0	; force () banked
  6266  001AAA  17EC               	andwf	??_LCD_Init& (0+255),f,b
  6267  001AAC  A4D8               	btfss	status,2,c
  6268  001AAE  D7F7               	goto	l319
  6269                           
  6270                           ; BSR set to: 0
  6271                           ;lcd.c: 36: I2C_SendData(u8_LCD_ModeSet | 128);
  6272                           
  6273                           ; BSR set to: 0
  6274  001AB0  0E11               	movlw	low _u8_LCD_ModeSet
  6275  001AB2  6EF6               	movwf	tblptrl,c
  6276  001AB4                     	if	1	;There is more than 1 active tblptr byte
  6277  001AB4  0E10               	movlw	high _u8_LCD_ModeSet
  6278  001AB6  6EF7               	movwf	tblptrh,c
  6279  001AB8                     	endif
  6280  001AB8                     	if	1	;There are 3 active tblptr bytes
  6281  001AB8  0E00               	movlw	low (_u8_LCD_ModeSet shr (0+16))
  6282  001ABA  6EF8               	movwf	tblptru,c
  6283  001ABC                     	endif
  6284  001ABC  0008               	tblrd		*
  6285  001ABE  50F5               	movf	tablat,w,c
  6286  001AC0  0980               	iorlw	128
  6287  001AC2  EC83  F015         	call	_I2C_SendData
  6288  001AC6  B4C7               	btfsc	4039,2,c	;volatile
  6289  001AC8  D7FE               	goto	l322
  6290  001ACA  CFC5 F0EC          	movff	4037,??_LCD_Init	;volatile
  6291  001ACE  0E1F               	movlw	31
  6292  001AD0  0100               	movlb	0	; force () banked
  6293  001AD2  17EC               	andwf	??_LCD_Init& (0+255),f,b
  6294  001AD4  A4D8               	btfss	status,2,c
  6295  001AD6  D7F7               	goto	l322
  6296                           
  6297                           ; BSR set to: 0
  6298                           ;lcd.c: 39: I2C_SendData(u8_LCD_DeviceSelect | 128);
  6299                           
  6300                           ; BSR set to: 0
  6301  001AD8  0E12               	movlw	low _u8_LCD_DeviceSelect
  6302  001ADA  6EF6               	movwf	tblptrl,c
  6303  001ADC                     	if	1	;There is more than 1 active tblptr byte
  6304  001ADC  0E10               	movlw	high _u8_LCD_DeviceSelect
  6305  001ADE  6EF7               	movwf	tblptrh,c
  6306  001AE0                     	endif
  6307  001AE0                     	if	1	;There are 3 active tblptr bytes
  6308  001AE0  0E00               	movlw	low (_u8_LCD_DeviceSelect shr (0+16))
  6309  001AE2  6EF8               	movwf	tblptru,c
  6310  001AE4                     	endif
  6311  001AE4  0008               	tblrd		*
  6312  001AE6  50F5               	movf	tablat,w,c
  6313  001AE8  0980               	iorlw	128
  6314  001AEA  EC83  F015         	call	_I2C_SendData
  6315  001AEE  B4C7               	btfsc	4039,2,c	;volatile
  6316  001AF0  D7FE               	goto	l325
  6317  001AF2  CFC5 F0EC          	movff	4037,??_LCD_Init	;volatile
  6318  001AF6  0E1F               	movlw	31
  6319  001AF8  0100               	movlb	0	; force () banked
  6320  001AFA  17EC               	andwf	??_LCD_Init& (0+255),f,b
  6321  001AFC  A4D8               	btfss	status,2,c
  6322  001AFE  D7F7               	goto	l325
  6323                           
  6324                           ; BSR set to: 0
  6325                           ;lcd.c: 42: I2C_SendData(u8_LCD_Blink | 128);
  6326                           
  6327                           ; BSR set to: 0
  6328  001B00  0E10               	movlw	low _u8_LCD_Blink
  6329  001B02  6EF6               	movwf	tblptrl,c
  6330  001B04                     	if	1	;There is more than 1 active tblptr byte
  6331  001B04  0E10               	movlw	high _u8_LCD_Blink
  6332  001B06  6EF7               	movwf	tblptrh,c
  6333  001B08                     	endif
  6334  001B08                     	if	1	;There are 3 active tblptr bytes
  6335  001B08  0E00               	movlw	low (_u8_LCD_Blink shr (0+16))
  6336  001B0A  6EF8               	movwf	tblptru,c
  6337  001B0C                     	endif
  6338  001B0C  0008               	tblrd		*
  6339  001B0E  50F5               	movf	tablat,w,c
  6340  001B10  0980               	iorlw	128
  6341  001B12  EC83  F015         	call	_I2C_SendData
  6342  001B16  B4C7               	btfsc	4039,2,c	;volatile
  6343  001B18  D7FE               	goto	l328
  6344  001B1A  CFC5 F0EC          	movff	4037,??_LCD_Init	;volatile
  6345  001B1E  0E1F               	movlw	31
  6346  001B20  0100               	movlb	0	; force () banked
  6347  001B22  17EC               	andwf	??_LCD_Init& (0+255),f,b
  6348  001B24  A4D8               	btfss	status,2,c
  6349  001B26  D7F7               	goto	l328
  6350                           
  6351                           ; BSR set to: 0
  6352                           ;lcd.c: 45: I2C_SendData(u8_LCD_Datapointer | 0);
  6353                           
  6354                           ; BSR set to: 0
  6355  001B28  0100               	movlb	0	; force () banked
  6356  001B2A  51C8               	movf	_u8_LCD_Datapointer& (0+255),w,b
  6357  001B2C  EC83  F015         	call	_I2C_SendData
  6358                           
  6359                           ;lcd.c: 47: for(u8_Temp= 0; u8_Temp < 14; ++u8_Temp)
  6360  001B30  0E00               	movlw	0
  6361  001B32  0100               	movlb	0	; force () banked
  6362  001B34  6FED               	movwf	LCD_Init@u8_Temp& (0+255),b
  6363  001B36                     l4984:
  6364                           
  6365                           ; BSR set to: 0
  6366  001B36  0E0D               	movlw	13
  6367  001B38  0100               	movlb	0	; force () banked
  6368  001B3A  65ED               	cpfsgt	LCD_Init@u8_Temp& (0+255),b
  6369  001B3C  D001               	goto	l330
  6370  001B3E  D014               	goto	u4790
  6371  001B40                     l330:
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;lcd.c: 48: {
  6375                           ;lcd.c: 49: LCD_SetData(0 ,u8_Temp);
  6376                           
  6377                           ; BSR set to: 0
  6378  001B40  C0ED  F0E3         	movff	LCD_Init@u8_Temp,LCD_SetData@u8_Position
  6379  001B44  0E00               	movlw	0
  6380  001B46  EC5F  F014         	call	_LCD_SetData
  6381  001B4A  B4C7               	btfsc	4039,2,c	;volatile
  6382  001B4C  D7FE               	goto	l333
  6383  001B4E  CFC5 F0EC          	movff	4037,??_LCD_Init	;volatile
  6384  001B52  0E1F               	movlw	31
  6385  001B54  0100               	movlb	0	; force () banked
  6386  001B56  17EC               	andwf	??_LCD_Init& (0+255),f,b
  6387  001B58  A4D8               	btfss	status,2,c
  6388  001B5A  D7F7               	goto	l333
  6389                           
  6390                           ; BSR set to: 0
  6391                           ;lcd.c: 51: I2C_SendData(0);
  6392                           
  6393                           ; BSR set to: 0
  6394  001B5C  0E00               	movlw	0
  6395  001B5E  EC83  F015         	call	_I2C_SendData
  6396  001B62  0100               	movlb	0	; force () banked
  6397  001B64  2BED               	incf	LCD_Init@u8_Temp& (0+255),f,b
  6398  001B66  D7E7               	goto	l4984
  6399  001B68                     u4790:
  6400                           
  6401                           ; BSR set to: 0
  6402                           ;lcd.c: 52: }
  6403                           ;lcd.c: 54: u8_LCD_Datapointer= 2;
  6404                           
  6405                           ; BSR set to: 0
  6406  001B68  0E02               	movlw	2
  6407  001B6A  0100               	movlb	0	; force () banked
  6408  001B6C  6FC8               	movwf	_u8_LCD_Datapointer& (0+255),b
  6409  001B6E                     
  6410                           ; BSR set to: 0
  6411  001B6E  B4C7               	btfsc	4039,2,c	;volatile
  6412  001B70  D7FE               	goto	l336
  6413  001B72  CFC5 F0EC          	movff	4037,??_LCD_Init	;volatile
  6414  001B76  0E1F               	movlw	31
  6415  001B78  0100               	movlb	0	; force () banked
  6416  001B7A  17EC               	andwf	??_LCD_Init& (0+255),f,b
  6417  001B7C  A4D8               	btfss	status,2,c
  6418  001B7E  D7F7               	goto	l336
  6419                           
  6420                           ; BSR set to: 0
  6421                           ;lcd.c: 57: I2C_Start(0b01110000);
  6422                           
  6423                           ; BSR set to: 0
  6424  001B80  0E70               	movlw	112
  6425  001B82  EC8B  F012         	call	_I2C_Start
  6426  001B86  B4C7               	btfsc	4039,2,c	;volatile
  6427  001B88  D7FE               	goto	l339
  6428  001B8A  CFC5 F0EC          	movff	4037,??_LCD_Init	;volatile
  6429  001B8E  0E1F               	movlw	31
  6430  001B90  0100               	movlb	0	; force () banked
  6431  001B92  17EC               	andwf	??_LCD_Init& (0+255),f,b
  6432  001B94  A4D8               	btfss	status,2,c
  6433  001B96  D7F7               	goto	l339
  6434                           
  6435                           ; BSR set to: 0
  6436                           ;lcd.c: 60: I2C_SendData(u8_LCD_DeviceSelect | 128);
  6437                           
  6438                           ; BSR set to: 0
  6439  001B98  0E12               	movlw	low _u8_LCD_DeviceSelect
  6440  001B9A  6EF6               	movwf	tblptrl,c
  6441  001B9C                     	if	1	;There is more than 1 active tblptr byte
  6442  001B9C  0E10               	movlw	high _u8_LCD_DeviceSelect
  6443  001B9E  6EF7               	movwf	tblptrh,c
  6444  001BA0                     	endif
  6445  001BA0                     	if	1	;There are 3 active tblptr bytes
  6446  001BA0  0E00               	movlw	low (_u8_LCD_DeviceSelect shr (0+16))
  6447  001BA2  6EF8               	movwf	tblptru,c
  6448  001BA4                     	endif
  6449  001BA4  0008               	tblrd		*
  6450  001BA6  50F5               	movf	tablat,w,c
  6451  001BA8  0980               	iorlw	128
  6452  001BAA  EC83  F015         	call	_I2C_SendData
  6453  001BAE  B4C7               	btfsc	4039,2,c	;volatile
  6454  001BB0  D7FE               	goto	l342
  6455  001BB2  CFC5 F0EC          	movff	4037,??_LCD_Init	;volatile
  6456  001BB6  0E1F               	movlw	31
  6457  001BB8  0100               	movlb	0	; force () banked
  6458  001BBA  17EC               	andwf	??_LCD_Init& (0+255),f,b
  6459  001BBC  A4D8               	btfss	status,2,c
  6460  001BBE  D7F7               	goto	l342
  6461                           
  6462                           ; BSR set to: 0
  6463                           ;lcd.c: 63: I2C_SendData(u8_LCD_Datapointer | 0);
  6464                           
  6465                           ; BSR set to: 0
  6466  001BC0  0100               	movlb	0	; force () banked
  6467  001BC2  51C8               	movf	_u8_LCD_Datapointer& (0+255),w,b
  6468  001BC4  EC83  F015         	call	_I2C_SendData
  6469                           
  6470                           ;lcd.c: 65: for(u8_Temp= 0; u8_Temp < 14; ++u8_Temp)
  6471  001BC8  0E00               	movlw	0
  6472  001BCA  0100               	movlb	0	; force () banked
  6473  001BCC  6FED               	movwf	LCD_Init@u8_Temp& (0+255),b
  6474  001BCE                     l5014:
  6475                           
  6476                           ; BSR set to: 0
  6477  001BCE  0E0D               	movlw	13
  6478  001BD0  0100               	movlb	0	; force () banked
  6479  001BD2  65ED               	cpfsgt	LCD_Init@u8_Temp& (0+255),b
  6480  001BD4  D001               	goto	l344
  6481  001BD6  D014               	goto	u4890
  6482  001BD8                     l344:
  6483                           
  6484                           ; BSR set to: 0
  6485                           ;lcd.c: 66: {
  6486                           ;lcd.c: 67: LCD_SetData(0 ,u8_Temp);
  6487                           
  6488                           ; BSR set to: 0
  6489  001BD8  C0ED  F0E3         	movff	LCD_Init@u8_Temp,LCD_SetData@u8_Position
  6490  001BDC  0E00               	movlw	0
  6491  001BDE  EC5F  F014         	call	_LCD_SetData
  6492  001BE2  B4C7               	btfsc	4039,2,c	;volatile
  6493  001BE4  D7FE               	goto	l347
  6494  001BE6  CFC5 F0EC          	movff	4037,??_LCD_Init	;volatile
  6495  001BEA  0E1F               	movlw	31
  6496  001BEC  0100               	movlb	0	; force () banked
  6497  001BEE  17EC               	andwf	??_LCD_Init& (0+255),f,b
  6498  001BF0  A4D8               	btfss	status,2,c
  6499  001BF2  D7F7               	goto	l347
  6500                           
  6501                           ; BSR set to: 0
  6502                           ;lcd.c: 69: I2C_SendData(0);
  6503                           
  6504                           ; BSR set to: 0
  6505  001BF4  0E00               	movlw	0
  6506  001BF6  EC83  F015         	call	_I2C_SendData
  6507  001BFA  0100               	movlb	0	; force () banked
  6508  001BFC  2BED               	incf	LCD_Init@u8_Temp& (0+255),f,b
  6509  001BFE  D7E7               	goto	l5014
  6510  001C00                     u4890:
  6511                           
  6512                           ; BSR set to: 0
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;lcd.c: 70: }
  6516                           ;lcd.c: 72: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  6517  001C00  B4C7               	btfsc	4039,2,c	;volatile
  6518  001C02  D7FE               	goto	u4890
  6519  001C04  CFC5 F0EC          	movff	4037,??_LCD_Init	;volatile
  6520  001C08  0E1F               	movlw	31
  6521  001C0A  0100               	movlb	0	; force () banked
  6522  001C0C  17EC               	andwf	??_LCD_Init& (0+255),f,b
  6523  001C0E  A4D8               	btfss	status,2,c
  6524  001C10  D7F7               	goto	u4890
  6525                           
  6526                           ; BSR set to: 0
  6527                           ;lcd.c: 73: I2C_Stop();
  6528                           
  6529                           ; BSR set to: 0
  6530  001C12  EC3F  F016         	call	_I2C_Stop	;wreg free
  6531  001C16  0012               	return		;funcret
  6532  001C18                     __end_of_LCD_Init:
  6533                           	opt stack 0
  6534                           tblptru	equ	0xFF8
  6535                           tblptrh	equ	0xFF7
  6536                           tblptrl	equ	0xFF6
  6537                           tablat	equ	0xFF5
  6538                           prodh	equ	0xFF4
  6539                           prodl	equ	0xFF3
  6540                           intcon	equ	0xFF2
  6541                           postinc0	equ	0xFEE
  6542                           wreg	equ	0xFE8
  6543                           indf2	equ	0xFDF
  6544                           postinc2	equ	0xFDE
  6545                           postdec2	equ	0xFDD
  6546                           fsr2h	equ	0xFDA
  6547                           fsr2l	equ	0xFD9
  6548                           status	equ	0xFD8
  6549                           
  6550 ;; *************** function _LCD_SetData *****************
  6551 ;; Defined at:
  6552 ;;		line 431 in file "mid/lcd.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;  u8_Data         1    wreg     unsigned char 
  6555 ;;  u8_Position     1   18[BANK0 ] unsigned char 
  6556 ;; Auto vars:     Size  Location     Type
  6557 ;;  u8_Data         1   21[BANK0 ] unsigned char 
  6558 ;; Return value:  Size  Location     Type
  6559 ;;                  1    wreg      unsigned char 
  6560 ;; Registers used:
  6561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6562 ;; Tracked objects:
  6563 ;;		On entry : 0/0
  6564 ;;		On exit  : 0/0
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6567 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6568 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6569 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6570 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6571 ;;Total ram usage:        4 bytes
  6572 ;; Hardware stack levels used:    1
  6573 ;; Hardware stack levels required when called:    2
  6574 ;; This function calls:
  6575 ;;		Nothing
  6576 ;; This function is called by:
  6577 ;;		_LCD_Init
  6578 ;;		_LCD_SetMainDigits
  6579 ;;		_LCD_SetPresetDigits
  6580 ;;		_LCD_SetIcons
  6581 ;;		_LCD_Clear
  6582 ;; This function uses a non-reentrant model
  6583 ;;
  6584                           
  6585                           	psect	text36
  6586  0028BE                     __ptext36:
  6587                           	opt stack 0
  6588  0028BE                     _LCD_SetData:
  6589                           	opt stack 26
  6590                           
  6591                           ;incstack = 0
  6592                           ;LCD_SetData@u8_Data stored from wreg
  6593  0028BE  0100               	movlb	0	; force () banked
  6594  0028C0  6FE6               	movwf	LCD_SetData@u8_Data& (0+255),b
  6595                           
  6596                           ;lcd.c: 433: if(u8_Position < 14)
  6597  0028C2  0E0E               	movlw	14
  6598  0028C4  0100               	movlb	0	; force () banked
  6599  0028C6  61E3               	cpfslt	LCD_SetData@u8_Position& (0+255),b
  6600  0028C8  D021               	goto	l471
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;lcd.c: 434: {
  6604                           ;lcd.c: 436: u8_LCD_Data[0]= 128 | u8_LCD_DeviceSelect;
  6605  0028CA  0E12               	movlw	low _u8_LCD_DeviceSelect
  6606  0028CC  6EF6               	movwf	tblptrl,c
  6607  0028CE                     	if	1	;There is more than 1 active tblptr byte
  6608  0028CE  0E10               	movlw	high _u8_LCD_DeviceSelect
  6609  0028D0  6EF7               	movwf	tblptrh,c
  6610  0028D2                     	endif
  6611  0028D2                     	if	1	;There are 3 active tblptr bytes
  6612  0028D2  0E00               	movlw	low (_u8_LCD_DeviceSelect shr (0+16))
  6613  0028D4  6EF8               	movwf	tblptru,c
  6614  0028D6                     	endif
  6615  0028D6  0008               	tblrd		*
  6616  0028D8  50F5               	movf	tablat,w,c
  6617  0028DA  0980               	iorlw	128
  6618  0028DC  0101               	movlb	1	; force () banked
  6619  0028DE  6F10               	movwf	_u8_LCD_Data& (0+255),b
  6620                           
  6621                           ; BSR set to: 1
  6622                           ;lcd.c: 437: u8_LCD_Data[1]= 0 | 0;
  6623  0028E0  0E00               	movlw	0
  6624  0028E2  0101               	movlb	1	; force () banked
  6625  0028E4  6F11               	movwf	(_u8_LCD_Data+1)& (0+255),b
  6626                           
  6627                           ; BSR set to: 1
  6628                           ;lcd.c: 442: u8_LCD_Data[u8_Position+2]= u8_Data;
  6629  0028E6  0100               	movlb	0	; force () banked
  6630  0028E8  51E3               	movf	LCD_SetData@u8_Position& (0+255),w,b
  6631  0028EA  0100               	movlb	0	; force () banked
  6632  0028EC  6FE4               	movwf	??_LCD_SetData& (0+255),b
  6633  0028EE  6BE5               	clrf	(??_LCD_SetData+1)& (0+255),b
  6634  0028F0  0E02               	movlw	2
  6635  0028F2  27E4               	addwf	??_LCD_SetData& (0+255),f,b
  6636  0028F4  0E00               	movlw	0
  6637  0028F6  23E5               	addwfc	(??_LCD_SetData+1)& (0+255),f,b
  6638  0028F8  0E10               	movlw	low _u8_LCD_Data
  6639  0028FA  25E4               	addwf	??_LCD_SetData& (0+255),w,b
  6640  0028FC  6ED9               	movwf	fsr2l,c
  6641  0028FE  0E01               	movlw	high _u8_LCD_Data
  6642  002900  21E5               	addwfc	(??_LCD_SetData+1)& (0+255),w,b
  6643  002902  6EDA               	movwf	fsr2h,c
  6644  002904  C0E6  FFDF         	movff	LCD_SetData@u8_Data,indf2
  6645                           
  6646                           ; BSR set to: 0
  6647                           ;lcd.c: 452: return 1;
  6648  002908  0E01               	movlw	1
  6649                           
  6650                           ; BSR set to: 0
  6651                           ;lcd.c: 453: }
  6652                           
  6653                           ; BSR set to: 0
  6654  00290A  0012               	return	
  6655  00290C                     l471:
  6656                           
  6657                           ; BSR set to: 0
  6658                           ;lcd.c: 454: else
  6659                           ;lcd.c: 455: {
  6660                           ;lcd.c: 456: return 0;
  6661                           
  6662                           ; BSR set to: 0
  6663  00290C  0E00               	movlw	0
  6664                           
  6665                           ; BSR set to: 0
  6666  00290E  0012               	return	
  6667  002910                     __end_of_LCD_SetData:
  6668                           	opt stack 0
  6669                           tblptru	equ	0xFF8
  6670                           tblptrh	equ	0xFF7
  6671                           tblptrl	equ	0xFF6
  6672                           tablat	equ	0xFF5
  6673                           prodh	equ	0xFF4
  6674                           prodl	equ	0xFF3
  6675                           intcon	equ	0xFF2
  6676                           postinc0	equ	0xFEE
  6677                           wreg	equ	0xFE8
  6678                           indf2	equ	0xFDF
  6679                           postinc2	equ	0xFDE
  6680                           postdec2	equ	0xFDD
  6681                           fsr2h	equ	0xFDA
  6682                           fsr2l	equ	0xFD9
  6683                           status	equ	0xFD8
  6684                           
  6685 ;; *************** function _I2C_Stop *****************
  6686 ;; Defined at:
  6687 ;;		line 73 in file "hal/i2c.c"
  6688 ;; Parameters:    Size  Location     Type
  6689 ;;		None
  6690 ;; Auto vars:     Size  Location     Type
  6691 ;;		None
  6692 ;; Return value:  Size  Location     Type
  6693 ;;                  1    wreg      void 
  6694 ;; Registers used:
  6695 ;;		None
  6696 ;; Tracked objects:
  6697 ;;		On entry : 0/0
  6698 ;;		On exit  : 0/0
  6699 ;;		Unchanged: 0/0
  6700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6705 ;;Total ram usage:        0 bytes
  6706 ;; Hardware stack levels used:    1
  6707 ;; Hardware stack levels required when called:    2
  6708 ;; This function calls:
  6709 ;;		Nothing
  6710 ;; This function is called by:
  6711 ;;		_LCD_Init
  6712 ;;		_LCD_Task
  6713 ;;		_LCD_Test
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           
  6717                           	psect	text37
  6718  002C7E                     __ptext37:
  6719                           	opt stack 0
  6720  002C7E                     _I2C_Stop:
  6721                           	opt stack 27
  6722                           
  6723                           ;i2c.c: 75: PEN= 1;
  6724                           
  6725                           ; BSR set to: 0
  6726                           ;incstack = 0
  6727  002C7E  84C5               	bsf	4037,2,c	;volatile
  6728  002C80  0012               	return		;funcret
  6729  002C82                     __end_of_I2C_Stop:
  6730                           	opt stack 0
  6731                           tblptru	equ	0xFF8
  6732                           tblptrh	equ	0xFF7
  6733                           tblptrl	equ	0xFF6
  6734                           tablat	equ	0xFF5
  6735                           prodh	equ	0xFF4
  6736                           prodl	equ	0xFF3
  6737                           intcon	equ	0xFF2
  6738                           postinc0	equ	0xFEE
  6739                           wreg	equ	0xFE8
  6740                           indf2	equ	0xFDF
  6741                           postinc2	equ	0xFDE
  6742                           postdec2	equ	0xFDD
  6743                           fsr2h	equ	0xFDA
  6744                           fsr2l	equ	0xFD9
  6745                           status	equ	0xFD8
  6746                           
  6747 ;; *************** function _I2C_Start *****************
  6748 ;; Defined at:
  6749 ;;		line 34 in file "hal/i2c.c"
  6750 ;; Parameters:    Size  Location     Type
  6751 ;;  u8_Address      1    wreg     unsigned char 
  6752 ;; Auto vars:     Size  Location     Type
  6753 ;;  u8_Address      1   24[BANK0 ] unsigned char 
  6754 ;;  u16_Timeout     2   25[BANK0 ] unsigned int 
  6755 ;; Return value:  Size  Location     Type
  6756 ;;                  1    wreg      unsigned char 
  6757 ;; Registers used:
  6758 ;;		wreg, status,2, status,0, cstack
  6759 ;; Tracked objects:
  6760 ;;		On entry : 0/0
  6761 ;;		On exit  : 0/0
  6762 ;;		Unchanged: 0/0
  6763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6765 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6766 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6767 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6768 ;;Total ram usage:        5 bytes
  6769 ;; Hardware stack levels used:    1
  6770 ;; Hardware stack levels required when called:    3
  6771 ;; This function calls:
  6772 ;;		_TIMER_GetSysTick
  6773 ;; This function is called by:
  6774 ;;		_LCD_Init
  6775 ;;		_LCD_Task
  6776 ;;		_LCD_Test
  6777 ;; This function uses a non-reentrant model
  6778 ;;
  6779                           
  6780                           	psect	text38
  6781  002516                     __ptext38:
  6782                           	opt stack 0
  6783  002516                     _I2C_Start:
  6784                           	opt stack 26
  6785                           
  6786                           ;incstack = 0
  6787                           ;I2C_Start@u8_Address stored from wreg
  6788  002516  0100               	movlb	0	; force () banked
  6789  002518  6FE9               	movwf	I2C_Start@u8_Address& (0+255),b
  6790                           
  6791                           ;i2c.c: 36: uint16_t u16_Timeout= TIMER_GetSysTick();
  6792  00251A  EC0B  F016         	call	_TIMER_GetSysTick	;wreg free
  6793  00251E  C0E3  F0EA         	movff	?_TIMER_GetSysTick,I2C_Start@u16_Timeout
  6794  002522  C0E4  F0EB         	movff	?_TIMER_GetSysTick+1,I2C_Start@u16_Timeout+1
  6795                           
  6796                           ;i2c.c: 37: if(!((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)))
  6797  002526  B4C7               	btfsc	4039,2,c	;volatile
  6798  002528  D036               	goto	l262
  6799  00252A  CFC5 F0E7          	movff	4037,??_I2C_Start	;volatile
  6800  00252E  0E1F               	movlw	31
  6801  002530  0100               	movlb	0	; force () banked
  6802  002532  17E7               	andwf	??_I2C_Start& (0+255),f,b
  6803  002534  A4D8               	btfss	status,2,c
  6804  002536  D02F               	goto	l262
  6805                           
  6806                           ; BSR set to: 0
  6807                           ;i2c.c: 38: {
  6808                           ;i2c.c: 39: SEN= 1;
  6809  002538  80C5               	bsf	4037,0,c	;volatile
  6810                           
  6811                           ;i2c.c: 40: while((SSPSTAT & 0x04) || (SSPCON2 & 0x1F))
  6812  00253A  D020               	goto	l265
  6813  00253C                     
  6814                           ; BSR set to: 0
  6815                           ;i2c.c: 41: {
  6816                           ;i2c.c: 42: u16_Timeout= TIMER_GetSysTick() - u16_Timeout;
  6817                           
  6818                           ; BSR set to: 0
  6819  00253C  C0EA  F0E7         	movff	I2C_Start@u16_Timeout,??_I2C_Start
  6820  002540  C0EB  F0E8         	movff	I2C_Start@u16_Timeout+1,??_I2C_Start+1
  6821  002544  0100               	movlb	0	; force () banked
  6822  002546  1FE7               	comf	??_I2C_Start& (0+255),f,b
  6823  002548  1FE8               	comf	(??_I2C_Start+1)& (0+255),f,b
  6824  00254A  4BE7               	infsnz	??_I2C_Start& (0+255),f,b
  6825  00254C  2BE8               	incf	(??_I2C_Start+1)& (0+255),f,b
  6826  00254E  EC0B  F016         	call	_TIMER_GetSysTick	;wreg free
  6827  002552  0100               	movlb	0	; force () banked
  6828  002554  51E7               	movf	??_I2C_Start& (0+255),w,b
  6829  002556  0100               	movlb	0	; force () banked
  6830  002558  25E3               	addwf	?_TIMER_GetSysTick& (0+255),w,b
  6831  00255A  0100               	movlb	0	; force () banked
  6832  00255C  6FEA               	movwf	I2C_Start@u16_Timeout& (0+255),b
  6833  00255E  0100               	movlb	0	; force () banked
  6834  002560  51E8               	movf	(??_I2C_Start+1)& (0+255),w,b
  6835  002562  0100               	movlb	0	; force () banked
  6836  002564  21E4               	addwfc	(?_TIMER_GetSysTick+1)& (0+255),w,b
  6837  002566  0100               	movlb	0	; force () banked
  6838  002568  6FEB               	movwf	(I2C_Start@u16_Timeout+1)& (0+255),b
  6839                           
  6840                           ; BSR set to: 0
  6841                           ;i2c.c: 43: if(u16_Timeout > 10)
  6842  00256A  0100               	movlb	0	; force () banked
  6843  00256C  51EB               	movf	(I2C_Start@u16_Timeout+1)& (0+255),w,b
  6844  00256E  E104               	bnz	u4330
  6845  002570  0E0B               	movlw	11
  6846  002572  5DEA               	subwf	I2C_Start@u16_Timeout& (0+255),w,b
  6847  002574  A0D8               	btfss	status,0,c
  6848  002576  D002               	goto	l265
  6849  002578                     u4330:
  6850                           
  6851                           ; BSR set to: 0
  6852                           ;i2c.c: 44: {
  6853                           ;i2c.c: 45: return 4;
  6854  002578  0E04               	movlw	4
  6855                           
  6856                           ; BSR set to: 0
  6857  00257A  0012               	return	
  6858  00257C                     l265:
  6859                           
  6860                           ; BSR set to: 0
  6861                           
  6862                           ; BSR set to: 0
  6863  00257C  B4C7               	btfsc	4039,2,c	;volatile
  6864  00257E  D7DE               	goto	l264
  6865                           
  6866                           ; BSR set to: 0
  6867  002580  CFC5 F0E7          	movff	4037,??_I2C_Start	;volatile
  6868  002584  0E1F               	movlw	31
  6869  002586  0100               	movlb	0	; force () banked
  6870  002588  17E7               	andwf	??_I2C_Start& (0+255),f,b
  6871  00258A  A4D8               	btfss	status,2,c
  6872  00258C  D7D7               	goto	l264
  6873                           
  6874                           ; BSR set to: 0
  6875                           ;i2c.c: 46: }
  6876                           ;i2c.c: 47: }
  6877                           ;i2c.c: 48: SSPBUF= u8_Address;
  6878  00258E  C0E9  FFC9         	movff	I2C_Start@u8_Address,4041	;volatile
  6879                           
  6880                           ; BSR set to: 0
  6881                           ;i2c.c: 49: return 2;
  6882  002592  0E02               	movlw	2
  6883                           
  6884                           ; BSR set to: 0
  6885                           ;i2c.c: 50: }
  6886                           
  6887                           ; BSR set to: 0
  6888  002594  0012               	return	
  6889  002596                     l262:
  6890                           
  6891                           ;i2c.c: 51: else
  6892                           ;i2c.c: 52: {
  6893                           ;i2c.c: 53: return 3;
  6894                           
  6895                           ; BSR set to: 0
  6896  002596  0E03               	movlw	3
  6897  002598  0012               	return	
  6898  00259A                     __end_of_I2C_Start:
  6899                           	opt stack 0
  6900                           tblptru	equ	0xFF8
  6901                           tblptrh	equ	0xFF7
  6902                           tblptrl	equ	0xFF6
  6903                           tablat	equ	0xFF5
  6904                           prodh	equ	0xFF4
  6905                           prodl	equ	0xFF3
  6906                           intcon	equ	0xFF2
  6907                           postinc0	equ	0xFEE
  6908                           wreg	equ	0xFE8
  6909                           indf2	equ	0xFDF
  6910                           postinc2	equ	0xFDE
  6911                           postdec2	equ	0xFDD
  6912                           fsr2h	equ	0xFDA
  6913                           fsr2l	equ	0xFD9
  6914                           status	equ	0xFD8
  6915                           
  6916 ;; *************** function _TIMER_GetSysTick *****************
  6917 ;; Defined at:
  6918 ;;		line 37 in file "hal/timer.c"
  6919 ;; Parameters:    Size  Location     Type
  6920 ;;		None
  6921 ;; Auto vars:     Size  Location     Type
  6922 ;;		None
  6923 ;; Return value:  Size  Location     Type
  6924 ;;                  4   18[BANK0 ] unsigned long 
  6925 ;; Registers used:
  6926 ;;		None
  6927 ;; Tracked objects:
  6928 ;;		On entry : 0/0
  6929 ;;		On exit  : 0/0
  6930 ;;		Unchanged: 0/0
  6931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6932 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6935 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6936 ;;Total ram usage:        4 bytes
  6937 ;; Hardware stack levels used:    1
  6938 ;; Hardware stack levels required when called:    2
  6939 ;; This function calls:
  6940 ;;		Nothing
  6941 ;; This function is called by:
  6942 ;;		_I2C_Start
  6943 ;; This function uses a non-reentrant model
  6944 ;;
  6945                           
  6946                           	psect	text39
  6947  002C16                     __ptext39:
  6948                           	opt stack 0
  6949  002C16                     _TIMER_GetSysTick:
  6950                           	opt stack 26
  6951                           
  6952                           ;timer.c: 39: return u32_SysTickCounter;
  6953                           
  6954                           ;incstack = 0
  6955  002C16  C157  F0E3         	movff	_u32_SysTickCounter,?_TIMER_GetSysTick
  6956  002C1A  C158  F0E4         	movff	_u32_SysTickCounter+1,?_TIMER_GetSysTick+1
  6957  002C1E  C159  F0E5         	movff	_u32_SysTickCounter+2,?_TIMER_GetSysTick+2
  6958  002C22  C15A  F0E6         	movff	_u32_SysTickCounter+3,?_TIMER_GetSysTick+3
  6959  002C26  0012               	return		;funcret
  6960  002C28                     __end_of_TIMER_GetSysTick:
  6961                           	opt stack 0
  6962                           tblptru	equ	0xFF8
  6963                           tblptrh	equ	0xFF7
  6964                           tblptrl	equ	0xFF6
  6965                           tablat	equ	0xFF5
  6966                           prodh	equ	0xFF4
  6967                           prodl	equ	0xFF3
  6968                           intcon	equ	0xFF2
  6969                           postinc0	equ	0xFEE
  6970                           wreg	equ	0xFE8
  6971                           indf2	equ	0xFDF
  6972                           postinc2	equ	0xFDE
  6973                           postdec2	equ	0xFDD
  6974                           fsr2h	equ	0xFDA
  6975                           fsr2l	equ	0xFD9
  6976                           status	equ	0xFD8
  6977                           
  6978 ;; *************** function _I2C_SendData *****************
  6979 ;; Defined at:
  6980 ;;		line 58 in file "hal/i2c.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;  u8_Data         1    wreg     unsigned char 
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;  u8_Data         1   19[BANK0 ] unsigned char 
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  1    wreg      unsigned char 
  6987 ;; Registers used:
  6988 ;;		wreg, status,2, status,0
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6995 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6996 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6997 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6998 ;;Total ram usage:        2 bytes
  6999 ;; Hardware stack levels used:    1
  7000 ;; Hardware stack levels required when called:    2
  7001 ;; This function calls:
  7002 ;;		Nothing
  7003 ;; This function is called by:
  7004 ;;		_LCD_Init
  7005 ;;		_LCD_Task
  7006 ;;		_LCD_Test
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010                           	psect	text40
  7011  002B06                     __ptext40:
  7012                           	opt stack 0
  7013  002B06                     _I2C_SendData:
  7014                           	opt stack 27
  7015                           
  7016                           ;incstack = 0
  7017                           ;I2C_SendData@u8_Data stored from wreg
  7018  002B06  0100               	movlb	0	; force () banked
  7019  002B08  6FE4               	movwf	I2C_SendData@u8_Data& (0+255),b
  7020                           
  7021                           ;i2c.c: 60: if(!((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)))
  7022  002B0A  B4C7               	btfsc	4039,2,c	;volatile
  7023  002B0C  D00B               	goto	l271
  7024  002B0E  CFC5 F0E3          	movff	4037,??_I2C_SendData	;volatile
  7025  002B12  0E1F               	movlw	31
  7026  002B14  0100               	movlb	0	; force () banked
  7027  002B16  17E3               	andwf	??_I2C_SendData& (0+255),f,b
  7028  002B18  A4D8               	btfss	status,2,c
  7029  002B1A  D004               	goto	l271
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;i2c.c: 61: {
  7033                           ;i2c.c: 62: SSPBUF= u8_Data;
  7034  002B1C  C0E4  FFC9         	movff	I2C_SendData@u8_Data,4041	;volatile
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;i2c.c: 63: return 2;
  7038  002B20  0E02               	movlw	2
  7039                           
  7040                           ; BSR set to: 0
  7041                           ;i2c.c: 64: }
  7042                           
  7043                           ; BSR set to: 0
  7044  002B22  0012               	return	
  7045  002B24                     l271:
  7046                           
  7047                           ;i2c.c: 65: else
  7048                           ;i2c.c: 66: {
  7049                           ;i2c.c: 67: return 3;
  7050                           
  7051                           ; BSR set to: 0
  7052  002B24  0E03               	movlw	3
  7053  002B26  0012               	return	
  7054  002B28                     __end_of_I2C_SendData:
  7055                           	opt stack 0
  7056                           tblptru	equ	0xFF8
  7057                           tblptrh	equ	0xFF7
  7058                           tblptrl	equ	0xFF6
  7059                           tablat	equ	0xFF5
  7060                           prodh	equ	0xFF4
  7061                           prodl	equ	0xFF3
  7062                           intcon	equ	0xFF2
  7063                           postinc0	equ	0xFEE
  7064                           wreg	equ	0xFE8
  7065                           indf2	equ	0xFDF
  7066                           postinc2	equ	0xFDE
  7067                           postdec2	equ	0xFDD
  7068                           fsr2h	equ	0xFDA
  7069                           fsr2l	equ	0xFD9
  7070                           status	equ	0xFD8
  7071                           
  7072 ;; *************** function _I2C_Init *****************
  7073 ;; Defined at:
  7074 ;;		line 18 in file "hal/i2c.c"
  7075 ;; Parameters:    Size  Location     Type
  7076 ;;		None
  7077 ;; Auto vars:     Size  Location     Type
  7078 ;;		None
  7079 ;; Return value:  Size  Location     Type
  7080 ;;                  1    wreg      void 
  7081 ;; Registers used:
  7082 ;;		wreg, status,2
  7083 ;; Tracked objects:
  7084 ;;		On entry : 0/0
  7085 ;;		On exit  : 0/0
  7086 ;;		Unchanged: 0/0
  7087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7092 ;;Total ram usage:        0 bytes
  7093 ;; Hardware stack levels used:    1
  7094 ;; Hardware stack levels required when called:    2
  7095 ;; This function calls:
  7096 ;;		Nothing
  7097 ;; This function is called by:
  7098 ;;		_main
  7099 ;; This function uses a non-reentrant model
  7100 ;;
  7101                           
  7102                           	psect	text41
  7103  002B86                     __ptext41:
  7104                           	opt stack 0
  7105  002B86                     _I2C_Init:
  7106                           	opt stack 28
  7107                           
  7108                           ;i2c.c: 20: SSPSTAT= 0;
  7109                           
  7110                           ;incstack = 0
  7111  002B86  0E00               	movlw	0
  7112  002B88  6EC7               	movwf	4039,c	;volatile
  7113                           
  7114                           ;i2c.c: 21: SSPCON1= 0x28;
  7115  002B8A  0E28               	movlw	40
  7116  002B8C  6EC6               	movwf	4038,c	;volatile
  7117                           
  7118                           ;i2c.c: 22: SSPCON2= 0;
  7119  002B8E  0E00               	movlw	0
  7120  002B90  6EC5               	movwf	4037,c	;volatile
  7121                           
  7122                           ;i2c.c: 23: SSPADD= 19;
  7123  002B92  0E13               	movlw	19
  7124  002B94  6EC8               	movwf	4040,c	;volatile
  7125                           
  7126                           ;i2c.c: 24: SSPSTAT= 0;
  7127  002B96  0E00               	movlw	0
  7128  002B98  6EC7               	movwf	4039,c	;volatile
  7129                           
  7130                           ;i2c.c: 25: TRISC3= 1;
  7131  002B9A  8694               	bsf	3988,3,c	;volatile
  7132                           
  7133                           ;i2c.c: 26: TRISC4= 1;
  7134  002B9C  8894               	bsf	3988,4,c	;volatile
  7135                           
  7136                           ;i2c.c: 27: PORTCbits.RC3= 1;
  7137  002B9E  8682               	bsf	3970,3,c	;volatile
  7138                           
  7139                           ;i2c.c: 28: PORTCbits.RC4= 1;
  7140  002BA0  8882               	bsf	3970,4,c	;volatile
  7141  002BA2  0012               	return		;funcret
  7142  002BA4                     __end_of_I2C_Init:
  7143                           	opt stack 0
  7144                           tblptru	equ	0xFF8
  7145                           tblptrh	equ	0xFF7
  7146                           tblptrl	equ	0xFF6
  7147                           tablat	equ	0xFF5
  7148                           prodh	equ	0xFF4
  7149                           prodl	equ	0xFF3
  7150                           intcon	equ	0xFF2
  7151                           postinc0	equ	0xFEE
  7152                           wreg	equ	0xFE8
  7153                           indf2	equ	0xFDF
  7154                           postinc2	equ	0xFDE
  7155                           postdec2	equ	0xFDD
  7156                           fsr2h	equ	0xFDA
  7157                           fsr2l	equ	0xFD9
  7158                           status	equ	0xFD8
  7159                           
  7160 ;; *************** function _GPIO_Init *****************
  7161 ;; Defined at:
  7162 ;;		line 20 in file "hal/dio.c"
  7163 ;; Parameters:    Size  Location     Type
  7164 ;;		None
  7165 ;; Auto vars:     Size  Location     Type
  7166 ;;		None
  7167 ;; Return value:  Size  Location     Type
  7168 ;;                  1    wreg      void 
  7169 ;; Registers used:
  7170 ;;		wreg, status,2
  7171 ;; Tracked objects:
  7172 ;;		On entry : 0/0
  7173 ;;		On exit  : 0/0
  7174 ;;		Unchanged: 0/0
  7175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7180 ;;Total ram usage:        0 bytes
  7181 ;; Hardware stack levels used:    1
  7182 ;; Hardware stack levels required when called:    2
  7183 ;; This function calls:
  7184 ;;		Nothing
  7185 ;; This function is called by:
  7186 ;;		_main
  7187 ;; This function uses a non-reentrant model
  7188 ;;
  7189                           
  7190                           	psect	text42
  7191  00299E                     __ptext42:
  7192                           	opt stack 0
  7193  00299E                     _GPIO_Init:
  7194                           	opt stack 28
  7195                           
  7196                           ;dio.c: 22: TRISA= 0x3F;
  7197                           
  7198                           ;incstack = 0
  7199  00299E  0E3F               	movlw	63
  7200  0029A0  6E92               	movwf	3986,c	;volatile
  7201                           
  7202                           ;dio.c: 23: LATA= 0x40;
  7203  0029A2  0E40               	movlw	64
  7204  0029A4  6E89               	movwf	3977,c	;volatile
  7205                           
  7206                           ;dio.c: 24: PORTA= 0;
  7207  0029A6  0E00               	movlw	0
  7208  0029A8  6E80               	movwf	3968,c	;volatile
  7209                           
  7210                           ;dio.c: 26: TRISB= 0x3F;
  7211  0029AA  0E3F               	movlw	63
  7212  0029AC  6E93               	movwf	3987,c	;volatile
  7213                           
  7214                           ;dio.c: 27: LATB= 0;
  7215  0029AE  0E00               	movlw	0
  7216  0029B0  6E8A               	movwf	3978,c	;volatile
  7217                           
  7218                           ;dio.c: 28: PORTB= 0;
  7219  0029B2  0E00               	movlw	0
  7220  0029B4  6E81               	movwf	3969,c	;volatile
  7221                           
  7222                           ;dio.c: 30: TRISC= 0x80;
  7223  0029B6  0E80               	movlw	128
  7224  0029B8  6E94               	movwf	3988,c	;volatile
  7225                           
  7226                           ;dio.c: 31: PORTC= 0;
  7227  0029BA  0E00               	movlw	0
  7228  0029BC  6E82               	movwf	3970,c	;volatile
  7229                           
  7230                           ;dio.c: 33: LATC= 0;
  7231  0029BE  0E00               	movlw	0
  7232  0029C0  6E8B               	movwf	3979,c	;volatile
  7233                           
  7234                           ;dio.c: 35: TRISD= 0x00;
  7235  0029C2  0E00               	movlw	0
  7236  0029C4  6E95               	movwf	3989,c	;volatile
  7237                           
  7238                           ;dio.c: 36: LATD= 0;
  7239  0029C6  0E00               	movlw	0
  7240  0029C8  6E8C               	movwf	3980,c	;volatile
  7241                           
  7242                           ;dio.c: 37: PORTD= 0;
  7243  0029CA  0E00               	movlw	0
  7244  0029CC  6E83               	movwf	3971,c	;volatile
  7245                           
  7246                           ;dio.c: 42: INTCON= 0;
  7247  0029CE  0E00               	movlw	0
  7248  0029D0  6EF2               	movwf	intcon,c	;volatile
  7249                           
  7250                           ;dio.c: 43: INTCON2= 128;
  7251  0029D2  0E80               	movlw	128
  7252  0029D4  6EF1               	movwf	intcon2,c	;volatile
  7253                           
  7254                           ;dio.c: 45: INTCON3= 0;
  7255  0029D6  0E00               	movlw	0
  7256  0029D8  6EF0               	movwf	intcon3,c	;volatile
  7257                           
  7258                           ;dio.c: 48: LATAbits.LA6= 1;
  7259  0029DA  8C89               	bsf	3977,6,c	;volatile
  7260  0029DC  0012               	return		;funcret
  7261  0029DE                     __end_of_GPIO_Init:
  7262                           	opt stack 0
  7263                           tblptru	equ	0xFF8
  7264                           tblptrh	equ	0xFF7
  7265                           tblptrl	equ	0xFF6
  7266                           tablat	equ	0xFF5
  7267                           prodh	equ	0xFF4
  7268                           prodl	equ	0xFF3
  7269                           intcon	equ	0xFF2
  7270                           intcon2	equ	0xFF1
  7271                           intcon3	equ	0xFF0
  7272                           postinc0	equ	0xFEE
  7273                           wreg	equ	0xFE8
  7274                           indf2	equ	0xFDF
  7275                           postinc2	equ	0xFDE
  7276                           postdec2	equ	0xFDD
  7277                           fsr2h	equ	0xFDA
  7278                           fsr2l	equ	0xFD9
  7279                           status	equ	0xFD8
  7280                           
  7281 ;; *************** function _BUTTONS_Task *****************
  7282 ;; Defined at:
  7283 ;;		line 31 in file "mid/buttons.c"
  7284 ;; Parameters:    Size  Location     Type
  7285 ;;		None
  7286 ;; Auto vars:     Size  Location     Type
  7287 ;;  u8_ButtonsTe    1   18[BANK0 ] unsigned char 
  7288 ;; Return value:  Size  Location     Type
  7289 ;;                  1    wreg      void 
  7290 ;; Registers used:
  7291 ;;		wreg, status,2, status,0
  7292 ;; Tracked objects:
  7293 ;;		On entry : 0/0
  7294 ;;		On exit  : 0/0
  7295 ;;		Unchanged: 0/0
  7296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7298 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7300 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7301 ;;Total ram usage:        1 bytes
  7302 ;; Hardware stack levels used:    1
  7303 ;; Hardware stack levels required when called:    2
  7304 ;; This function calls:
  7305 ;;		Nothing
  7306 ;; This function is called by:
  7307 ;;		_main
  7308 ;; This function uses a non-reentrant model
  7309 ;;
  7310                           
  7311                           	psect	text43
  7312  0013EC                     __ptext43:
  7313                           	opt stack 0
  7314  0013EC                     _BUTTONS_Task:
  7315                           	opt stack 28
  7316                           
  7317                           ;buttons.c: 35: static uint16_t u16_ButtonsDebounceCounter[8];
  7318                           ;buttons.c: 36: static uint16_t u16_ButtonsHoldCounter[8];
  7319                           ;buttons.c: 37: static uint8_t u8_ButtonsStatusPressed= 0;
  7320                           ;buttons.c: 38: uint8_t u8_ButtonsTemporaryInput= 0xff;
  7321                           
  7322                           ;incstack = 0
  7323  0013EC  0100               	movlb	0	; force () banked
  7324  0013EE  69E3               	setf	BUTTONS_Task@u8_ButtonsTemporaryInput& (0+255),b
  7325                           
  7326                           ; BSR set to: 0
  7327                           ;buttons.c: 49: u8_ButtonsTemporaryInput= (~PORTB) & (1 | 4 | 8 | 16 | 32);
  7328  0013F0  5081               	movf	3969,w,c	;volatile
  7329  0013F2  0AFF               	xorlw	255
  7330  0013F4  0B3D               	andlw	61
  7331  0013F6  0100               	movlb	0	; force () banked
  7332  0013F8  6FE3               	movwf	BUTTONS_Task@u8_ButtonsTemporaryInput& (0+255),b
  7333                           
  7334                           ; BSR set to: 0
  7335                           ;buttons.c: 51: if(u8_ButtonsTemporaryInput)
  7336  0013FA  0100               	movlb	0	; force () banked
  7337  0013FC  51E3               	movf	BUTTONS_Task@u8_ButtonsTemporaryInput& (0+255),w,b
  7338  0013FE  B4D8               	btfsc	status,2,c
  7339  001400  D080               	goto	l205
  7340                           
  7341                           ; BSR set to: 0
  7342                           ;buttons.c: 52: {
  7343                           ;buttons.c: 55: if(u8_ButtonsTemporaryInput & (1<<4))
  7344  001402  0100               	movlb	0	; force () banked
  7345  001404  A9E3               	btfss	BUTTONS_Task@u8_ButtonsTemporaryInput& (0+255),4,b
  7346  001406  D016               	goto	l207
  7347                           
  7348                           ; BSR set to: 0
  7349                           ;buttons.c: 56: {
  7350                           ;buttons.c: 57: u8_ButtonsStatusPressed|= (1<<4);
  7351  001408  0100               	movlb	0	; force () banked
  7352  00140A  89CA               	bsf	BUTTONS_Task@u8_ButtonsStatusPressed& (0+255),4,b
  7353                           
  7354                           ;buttons.c: 58: ++u16_ButtonsHoldCounter[4];
  7355  00140C  0101               	movlb	1	; force () banked
  7356  00140E  4B28               	infsnz	(BUTTONS_Task@u16_ButtonsHoldCounter+8)& (0+255),f,b
  7357  001410  2B29               	incf	(BUTTONS_Task@u16_ButtonsHoldCounter+9)& (0+255),f,b
  7358                           
  7359                           ; BSR set to: 1
  7360                           ;buttons.c: 59: if(u16_ButtonsHoldCounter[4] > 250)
  7361  001412  0101               	movlb	1	; force () banked
  7362  001414  5129               	movf	(BUTTONS_Task@u16_ButtonsHoldCounter+9)& (0+255),w,b
  7363  001416  E104               	bnz	u5040
  7364  001418  0EFB               	movlw	251
  7365  00141A  5D28               	subwf	(BUTTONS_Task@u16_ButtonsHoldCounter+8)& (0+255),w,b
  7366  00141C  A0D8               	btfss	status,0,c
  7367  00141E  D00A               	goto	l207
  7368  001420                     u5040:
  7369                           
  7370                           ; BSR set to: 1
  7371                           ;buttons.c: 60: {
  7372                           ;buttons.c: 61: u8_ButtonSignal[0]= 2;
  7373  001420  0E02               	movlw	2
  7374  001422  0100               	movlb	0	; force () banked
  7375  001424  6F8A               	movwf	_u8_ButtonSignal& (0+255),b
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;buttons.c: 62: u8_ButtonsStatusPressed&= ~(1<<4);
  7379  001426  0100               	movlb	0	; force () banked
  7380  001428  99CA               	bcf	BUTTONS_Task@u8_ButtonsStatusPressed& (0+255),4,b
  7381                           
  7382                           ; BSR set to: 0
  7383                           ;buttons.c: 63: u16_ButtonsHoldCounter[4]= 0;
  7384  00142A  0E00               	movlw	0
  7385  00142C  0101               	movlb	1	; force () banked
  7386  00142E  6F29               	movwf	(BUTTONS_Task@u16_ButtonsHoldCounter+9)& (0+255),b
  7387  001430  0E00               	movlw	0
  7388  001432  6F28               	movwf	(BUTTONS_Task@u16_ButtonsHoldCounter+8)& (0+255),b
  7389  001434                     l207:
  7390                           
  7391                           ;buttons.c: 64: }
  7392                           ;buttons.c: 65: }
  7393                           ;buttons.c: 69: if(u8_ButtonsTemporaryInput & (1<<5))
  7394                           
  7395                           ; BSR set to: 1
  7396                           
  7397                           ; BSR set to: 1
  7398  001434  0100               	movlb	0	; force () banked
  7399  001436  ABE3               	btfss	BUTTONS_Task@u8_ButtonsTemporaryInput& (0+255),5,b
  7400  001438  D016               	goto	l209
  7401                           
  7402                           ; BSR set to: 0
  7403                           ;buttons.c: 70: {
  7404                           ;buttons.c: 71: u8_ButtonsStatusPressed|= (1<<5);
  7405  00143A  0100               	movlb	0	; force () banked
  7406  00143C  8BCA               	bsf	BUTTONS_Task@u8_ButtonsStatusPressed& (0+255),5,b
  7407                           
  7408                           ;buttons.c: 72: ++u16_ButtonsHoldCounter[5];
  7409  00143E  0101               	movlb	1	; force () banked
  7410  001440  4B2A               	infsnz	(BUTTONS_Task@u16_ButtonsHoldCounter+10)& (0+255),f,b
  7411  001442  2B2B               	incf	(BUTTONS_Task@u16_ButtonsHoldCounter+11)& (0+255),f,b
  7412                           
  7413                           ; BSR set to: 1
  7414                           ;buttons.c: 73: if(u16_ButtonsHoldCounter[5] > 250)
  7415  001444  0101               	movlb	1	; force () banked
  7416  001446  512B               	movf	(BUTTONS_Task@u16_ButtonsHoldCounter+11)& (0+255),w,b
  7417  001448  E104               	bnz	u5060
  7418  00144A  0EFB               	movlw	251
  7419  00144C  5D2A               	subwf	(BUTTONS_Task@u16_ButtonsHoldCounter+10)& (0+255),w,b
  7420  00144E  A0D8               	btfss	status,0,c
  7421  001450  D00A               	goto	l209
  7422  001452                     u5060:
  7423                           
  7424                           ; BSR set to: 1
  7425                           ;buttons.c: 74: {
  7426                           ;buttons.c: 75: u8_ButtonSignal[1]= 2;
  7427  001452  0E02               	movlw	2
  7428  001454  0100               	movlb	0	; force () banked
  7429  001456  6F8B               	movwf	(_u8_ButtonSignal+1)& (0+255),b
  7430                           
  7431                           ; BSR set to: 0
  7432                           ;buttons.c: 76: u8_ButtonsStatusPressed&= ~(1<<5);
  7433  001458  0100               	movlb	0	; force () banked
  7434  00145A  9BCA               	bcf	BUTTONS_Task@u8_ButtonsStatusPressed& (0+255),5,b
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;buttons.c: 77: u16_ButtonsHoldCounter[5]= 0;
  7438  00145C  0E00               	movlw	0
  7439  00145E  0101               	movlb	1	; force () banked
  7440  001460  6F2B               	movwf	(BUTTONS_Task@u16_ButtonsHoldCounter+11)& (0+255),b
  7441  001462  0E00               	movlw	0
  7442  001464  6F2A               	movwf	(BUTTONS_Task@u16_ButtonsHoldCounter+10)& (0+255),b
  7443  001466                     l209:
  7444                           
  7445                           ;buttons.c: 78: }
  7446                           ;buttons.c: 79: }
  7447                           ;buttons.c: 83: if(u8_ButtonsTemporaryInput & (1<<0))
  7448                           
  7449                           ; BSR set to: 1
  7450                           
  7451                           ; BSR set to: 1
  7452  001466  0100               	movlb	0	; force () banked
  7453  001468  A1E3               	btfss	BUTTONS_Task@u8_ButtonsTemporaryInput& (0+255),0,b
  7454  00146A  D018               	goto	l211
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;buttons.c: 84: {
  7458                           ;buttons.c: 85: u8_ButtonsStatusPressed|= (1<<0);
  7459  00146C  0100               	movlb	0	; force () banked
  7460  00146E  81CA               	bsf	BUTTONS_Task@u8_ButtonsStatusPressed& (0+255),0,b
  7461                           
  7462                           ;buttons.c: 86: ++u16_ButtonsHoldCounter[0];
  7463  001470  0101               	movlb	1	; force () banked
  7464  001472  4B20               	infsnz	BUTTONS_Task@u16_ButtonsHoldCounter& (0+255),f,b
  7465  001474  2B21               	incf	(BUTTONS_Task@u16_ButtonsHoldCounter+1)& (0+255),f,b
  7466                           
  7467                           ; BSR set to: 1
  7468                           ;buttons.c: 87: if(++u16_ButtonsHoldCounter[0] > 2000)
  7469  001476  0101               	movlb	1	; force () banked
  7470  001478  4B20               	infsnz	BUTTONS_Task@u16_ButtonsHoldCounter& (0+255),f,b
  7471  00147A  2B21               	incf	(BUTTONS_Task@u16_ButtonsHoldCounter+1)& (0+255),f,b
  7472  00147C  0ED1               	movlw	209
  7473  00147E  5D20               	subwf	BUTTONS_Task@u16_ButtonsHoldCounter& (0+255),w,b
  7474  001480  0E07               	movlw	7
  7475  001482  5921               	subwfb	(BUTTONS_Task@u16_ButtonsHoldCounter+1)& (0+255),w,b
  7476  001484  A0D8               	btfss	status,0,c
  7477  001486  D00A               	goto	l211
  7478                           
  7479                           ; BSR set to: 1
  7480                           ;buttons.c: 88: {
  7481                           ;buttons.c: 89: u8_ButtonSignal[2]= 2;
  7482  001488  0E02               	movlw	2
  7483  00148A  0100               	movlb	0	; force () banked
  7484  00148C  6F8C               	movwf	(_u8_ButtonSignal+2)& (0+255),b
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;buttons.c: 90: u8_ButtonsStatusPressed&= ~(1<<0);
  7488  00148E  0100               	movlb	0	; force () banked
  7489  001490  91CA               	bcf	BUTTONS_Task@u8_ButtonsStatusPressed& (0+255),0,b
  7490                           
  7491                           ; BSR set to: 0
  7492                           ;buttons.c: 91: u16_ButtonsHoldCounter[0]= 0;
  7493  001492  0E00               	movlw	0
  7494  001494  0101               	movlb	1	; force () banked
  7495  001496  6F21               	movwf	(BUTTONS_Task@u16_ButtonsHoldCounter+1)& (0+255),b
  7496  001498  0E00               	movlw	0
  7497  00149A  6F20               	movwf	BUTTONS_Task@u16_ButtonsHoldCounter& (0+255),b
  7498  00149C                     l211:
  7499                           
  7500                           ;buttons.c: 92: }
  7501                           ;buttons.c: 93: }
  7502                           ;buttons.c: 97: if(u8_ButtonsTemporaryInput & (1<<2))
  7503                           
  7504                           ; BSR set to: 1
  7505                           
  7506                           ; BSR set to: 1
  7507  00149C  0100               	movlb	0	; force () banked
  7508  00149E  A5E3               	btfss	BUTTONS_Task@u8_ButtonsTemporaryInput& (0+255),2,b
  7509  0014A0  D016               	goto	l213
  7510                           
  7511                           ; BSR set to: 0
  7512                           ;buttons.c: 98: {
  7513                           ;buttons.c: 99: u8_ButtonsStatusPressed|= (1<<2);
  7514  0014A2  0100               	movlb	0	; force () banked
  7515  0014A4  85CA               	bsf	BUTTONS_Task@u8_ButtonsStatusPressed& (0+255),2,b
  7516                           
  7517                           ;buttons.c: 100: ++u16_ButtonsHoldCounter[2];
  7518  0014A6  0101               	movlb	1	; force () banked
  7519  0014A8  4B24               	infsnz	(BUTTONS_Task@u16_ButtonsHoldCounter+4)& (0+255),f,b
  7520  0014AA  2B25               	incf	(BUTTONS_Task@u16_ButtonsHoldCounter+5)& (0+255),f,b
  7521                           
  7522                           ; BSR set to: 1
  7523                           ;buttons.c: 101: if(u16_ButtonsHoldCounter[2] > 2000)
  7524  0014AC  0ED1               	movlw	209
  7525  0014AE  0101               	movlb	1	; force () banked
  7526  0014B0  5D24               	subwf	(BUTTONS_Task@u16_ButtonsHoldCounter+4)& (0+255),w,b
  7527  0014B2  0E07               	movlw	7
  7528  0014B4  5925               	subwfb	(BUTTONS_Task@u16_ButtonsHoldCounter+5)& (0+255),w,b
  7529  0014B6  A0D8               	btfss	status,0,c
  7530  0014B8  D00A               	goto	l213
  7531                           
  7532                           ; BSR set to: 1
  7533                           ;buttons.c: 102: {
  7534                           ;buttons.c: 103: u8_ButtonSignal[3]= 2;
  7535  0014BA  0E02               	movlw	2
  7536  0014BC  0100               	movlb	0	; force () banked
  7537  0014BE  6F8D               	movwf	(_u8_ButtonSignal+3)& (0+255),b
  7538                           
  7539                           ; BSR set to: 0
  7540                           ;buttons.c: 104: u8_ButtonsStatusPressed&= ~(1<<2);
  7541  0014C0  0100               	movlb	0	; force () banked
  7542  0014C2  95CA               	bcf	BUTTONS_Task@u8_ButtonsStatusPressed& (0+255),2,b
  7543                           
  7544                           ; BSR set to: 0
  7545                           ;buttons.c: 105: u16_ButtonsHoldCounter[2]= 0;
  7546  0014C4  0E00               	movlw	0
  7547  0014C6  0101               	movlb	1	; force () banked
  7548  0014C8  6F25               	movwf	(BUTTONS_Task@u16_ButtonsHoldCounter+5)& (0+255),b
  7549  0014CA  0E00               	movlw	0
  7550  0014CC  6F24               	movwf	(BUTTONS_Task@u16_ButtonsHoldCounter+4)& (0+255),b
  7551  0014CE                     l213:
  7552                           
  7553                           ;buttons.c: 106: }
  7554                           ;buttons.c: 107: }
  7555                           ;buttons.c: 111: if(u8_ButtonsTemporaryInput & (1<<3))
  7556                           
  7557                           ; BSR set to: 1
  7558                           
  7559                           ; BSR set to: 1
  7560  0014CE  0100               	movlb	0	; force () banked
  7561  0014D0  A7E3               	btfss	BUTTONS_Task@u8_ButtonsTemporaryInput& (0+255),3,b
  7562  0014D2  0012               	return	
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;buttons.c: 112: {
  7566                           ;buttons.c: 113: u8_ButtonsStatusPressed|= (1<<3);
  7567  0014D4  0100               	movlb	0	; force () banked
  7568  0014D6  87CA               	bsf	BUTTONS_Task@u8_ButtonsStatusPressed& (0+255),3,b
  7569                           
  7570                           ;buttons.c: 114: ++u16_ButtonsHoldCounter[3];
  7571  0014D8  0101               	movlb	1	; force () banked
  7572  0014DA  4B26               	infsnz	(BUTTONS_Task@u16_ButtonsHoldCounter+6)& (0+255),f,b
  7573  0014DC  2B27               	incf	(BUTTONS_Task@u16_ButtonsHoldCounter+7)& (0+255),f,b
  7574                           
  7575                           ; BSR set to: 1
  7576                           ;buttons.c: 115: if(u16_ButtonsHoldCounter[3] > 2000)
  7577  0014DE  0ED1               	movlw	209
  7578  0014E0  0101               	movlb	1	; force () banked
  7579  0014E2  5D26               	subwf	(BUTTONS_Task@u16_ButtonsHoldCounter+6)& (0+255),w,b
  7580  0014E4  0E07               	movlw	7
  7581  0014E6  5927               	subwfb	(BUTTONS_Task@u16_ButtonsHoldCounter+7)& (0+255),w,b
  7582  0014E8  A0D8               	btfss	status,0,c
  7583  0014EA  0012               	return	
  7584                           
  7585                           ; BSR set to: 1
  7586                           ;buttons.c: 116: {
  7587                           ;buttons.c: 117: u8_ButtonSignal[4]= 2;
  7588  0014EC  0E02               	movlw	2
  7589  0014EE  0100               	movlb	0	; force () banked
  7590  0014F0  6F8E               	movwf	(_u8_ButtonSignal+4)& (0+255),b
  7591                           
  7592                           ; BSR set to: 0
  7593                           ;buttons.c: 118: u8_ButtonsStatusPressed&= ~(1<<3);
  7594  0014F2  0100               	movlb	0	; force () banked
  7595  0014F4  97CA               	bcf	BUTTONS_Task@u8_ButtonsStatusPressed& (0+255),3,b
  7596                           
  7597                           ; BSR set to: 0
  7598                           ;buttons.c: 119: u16_ButtonsHoldCounter[3]= 0;
  7599  0014F6  0E00               	movlw	0
  7600  0014F8  0101               	movlb	1	; force () banked
  7601  0014FA  6F27               	movwf	(BUTTONS_Task@u16_ButtonsHoldCounter+7)& (0+255),b
  7602  0014FC  0E00               	movlw	0
  7603  0014FE  6F26               	movwf	(BUTTONS_Task@u16_ButtonsHoldCounter+6)& (0+255),b
  7604                           
  7605                           ; BSR set to: 1
  7606                           ;buttons.c: 120: }
  7607                           ;buttons.c: 121: }
  7608                           ;buttons.c: 122: }
  7609                           
  7610                           ; BSR set to: 1
  7611  001500  0012               	return	
  7612  001502                     l205:
  7613                           
  7614                           ;buttons.c: 123: else
  7615                           ;buttons.c: 124: {
  7616                           ;buttons.c: 127: if(u8_ButtonsStatusPressed == (1<<4))
  7617                           
  7618                           ; BSR set to: 1
  7619  001502  0E10               	movlw	16
  7620  001504  0100               	movlb	0	; force () banked
  7621  001506  19CA               	xorwf	BUTTONS_Task@u8_ButtonsStatusPressed& (0+255),w,b
  7622  001508  A4D8               	btfss	status,2,c
  7623  00150A  D01A               	goto	l217
  7624                           
  7625                           ; BSR set to: 0
  7626                           ;buttons.c: 128: {
  7627                           ;buttons.c: 129: ++u16_ButtonsDebounceCounter[4];
  7628  00150C  0101               	movlb	1	; force () banked
  7629  00150E  4B38               	infsnz	(BUTTONS_Task@u16_ButtonsDebounceCounter+8)& (0+255),f,b
  7630  001510  2B39               	incf	(BUTTONS_Task@u16_ButtonsDebounceCounter+9)& (0+255),f,b
  7631                           
  7632                           ; BSR set to: 1
  7633                           ;buttons.c: 130: if(u16_ButtonsDebounceCounter[4] > 20)
  7634  001512  0101               	movlb	1	; force () banked
  7635  001514  5139               	movf	(BUTTONS_Task@u16_ButtonsDebounceCounter+9)& (0+255),w,b
  7636  001516  E104               	bnz	u5140
  7637  001518  0E15               	movlw	21
  7638  00151A  5D38               	subwf	(BUTTONS_Task@u16_ButtonsDebounceCounter+8)& (0+255),w,b
  7639  00151C  A0D8               	btfss	status,0,c
  7640  00151E  D013               	goto	l219
  7641  001520                     u5140:
  7642                           
  7643                           ; BSR set to: 1
  7644                           ;buttons.c: 131: {
  7645                           ;buttons.c: 132: u8_ButtonSignal[0]= 1;
  7646  001520  0E01               	movlw	1
  7647  001522  0100               	movlb	0	; force () banked
  7648  001524  6F8A               	movwf	_u8_ButtonSignal& (0+255),b
  7649                           
  7650                           ;buttons.c: 133: u16_ButtonsDebounceCounter[4]= 0;
  7651  001526  0E00               	movlw	0
  7652  001528  0101               	movlb	1	; force () banked
  7653  00152A  6F39               	movwf	(BUTTONS_Task@u16_ButtonsDebounceCounter+9)& (0+255),b
  7654  00152C  0E00               	movlw	0
  7655  00152E  6F38               	movwf	(BUTTONS_Task@u16_ButtonsDebounceCounter+8)& (0+255),b
  7656                           
  7657                           ;buttons.c: 134: u16_ButtonsHoldCounter[4]= 0;
  7658  001530  0E00               	movlw	0
  7659  001532  0101               	movlb	1	; force () banked
  7660  001534  6F29               	movwf	(BUTTONS_Task@u16_ButtonsHoldCounter+9)& (0+255),b
  7661  001536  0E00               	movlw	0
  7662  001538  6F28               	movwf	(BUTTONS_Task@u16_ButtonsHoldCounter+8)& (0+255),b
  7663                           
  7664                           ; BSR set to: 1
  7665                           ;buttons.c: 135: u8_ButtonsStatusPressed&= ~(1<<4);
  7666  00153A  0100               	movlb	0	; force () banked
  7667  00153C  99CA               	bcf	BUTTONS_Task@u8_ButtonsStatusPressed& (0+255),4,b
  7668                           
  7669                           ; BSR set to: 0
  7670                           ;buttons.c: 136: }
  7671                           ;buttons.c: 137: }
  7672  00153E  D003               	goto	l219
  7673  001540                     l217:
  7674                           
  7675                           ; BSR set to: 0
  7676                           ;buttons.c: 138: else
  7677                           ;buttons.c: 139: {
  7678                           ;buttons.c: 140: u8_ButtonSignal[0]= 0;
  7679                           
  7680                           ; BSR set to: 0
  7681  001540  0E00               	movlw	0
  7682  001542  0100               	movlb	0	; force () banked
  7683  001544  6F8A               	movwf	_u8_ButtonSignal& (0+255),b
  7684  001546                     l219:
  7685                           
  7686                           ;buttons.c: 141: }
  7687                           ;buttons.c: 145: if(u8_ButtonsStatusPressed == (1<<5))
  7688                           
  7689                           ; BSR set to: 0
  7690  001546  0E20               	movlw	32
  7691  001548  0100               	movlb	0	; force () banked
  7692  00154A  19CA               	xorwf	BUTTONS_Task@u8_ButtonsStatusPressed& (0+255),w,b
  7693  00154C  A4D8               	btfss	status,2,c
  7694  00154E  D01A               	goto	l220
  7695                           
  7696                           ; BSR set to: 0
  7697                           ;buttons.c: 146: {
  7698                           ;buttons.c: 147: ++u16_ButtonsDebounceCounter[5];
  7699  001550  0101               	movlb	1	; force () banked
  7700  001552  4B3A               	infsnz	(BUTTONS_Task@u16_ButtonsDebounceCounter+10)& (0+255),f,b
  7701  001554  2B3B               	incf	(BUTTONS_Task@u16_ButtonsDebounceCounter+11)& (0+255),f,b
  7702                           
  7703                           ; BSR set to: 1
  7704                           ;buttons.c: 148: if(u16_ButtonsDebounceCounter[5] > 20)
  7705  001556  0101               	movlb	1	; force () banked
  7706  001558  513B               	movf	(BUTTONS_Task@u16_ButtonsDebounceCounter+11)& (0+255),w,b
  7707  00155A  E104               	bnz	u5160
  7708  00155C  0E15               	movlw	21
  7709  00155E  5D3A               	subwf	(BUTTONS_Task@u16_ButtonsDebounceCounter+10)& (0+255),w,b
  7710  001560  A0D8               	btfss	status,0,c
  7711  001562  D013               	goto	l222
  7712  001564                     u5160:
  7713                           
  7714                           ; BSR set to: 1
  7715                           ;buttons.c: 149: {
  7716                           ;buttons.c: 150: u8_ButtonSignal[1]= 1;
  7717  001564  0E01               	movlw	1
  7718  001566  0100               	movlb	0	; force () banked
  7719  001568  6F8B               	movwf	(_u8_ButtonSignal+1)& (0+255),b
  7720                           
  7721                           ;buttons.c: 151: u16_ButtonsDebounceCounter[5]= 0;
  7722  00156A  0E00               	movlw	0
  7723  00156C  0101               	movlb	1	; force () banked
  7724  00156E  6F3B               	movwf	(BUTTONS_Task@u16_ButtonsDebounceCounter+11)& (0+255),b
  7725  001570  0E00               	movlw	0
  7726  001572  6F3A               	movwf	(BUTTONS_Task@u16_ButtonsDebounceCounter+10)& (0+255),b
  7727                           
  7728                           ;buttons.c: 152: u16_ButtonsHoldCounter[5]= 0;
  7729  001574  0E00               	movlw	0
  7730  001576  0101               	movlb	1	; force () banked
  7731  001578  6F2B               	movwf	(BUTTONS_Task@u16_ButtonsHoldCounter+11)& (0+255),b
  7732  00157A  0E00               	movlw	0
  7733  00157C  6F2A               	movwf	(BUTTONS_Task@u16_ButtonsHoldCounter+10)& (0+255),b
  7734                           
  7735                           ; BSR set to: 1
  7736                           ;buttons.c: 153: u8_ButtonsStatusPressed&= ~(1<<5);
  7737  00157E  0100               	movlb	0	; force () banked
  7738  001580  9BCA               	bcf	BUTTONS_Task@u8_ButtonsStatusPressed& (0+255),5,b
  7739                           
  7740                           ; BSR set to: 0
  7741                           ;buttons.c: 154: }
  7742                           ;buttons.c: 155: }
  7743  001582  D003               	goto	l222
  7744  001584                     l220:
  7745                           
  7746                           ; BSR set to: 0
  7747                           ;buttons.c: 156: else
  7748                           ;buttons.c: 157: {
  7749                           ;buttons.c: 158: u8_ButtonSignal[1]= 0;
  7750                           
  7751                           ; BSR set to: 0
  7752  001584  0E00               	movlw	0
  7753  001586  0100               	movlb	0	; force () banked
  7754  001588  6F8B               	movwf	(_u8_ButtonSignal+1)& (0+255),b
  7755  00158A                     l222:
  7756                           
  7757                           ;buttons.c: 159: }
  7758                           ;buttons.c: 163: if(u8_ButtonsStatusPressed == (1<<0))
  7759                           
  7760                           ; BSR set to: 0
  7761  00158A  0100               	movlb	0	; force () banked
  7762  00158C  05CA               	decf	BUTTONS_Task@u8_ButtonsStatusPressed& (0+255),w,b
  7763  00158E  A4D8               	btfss	status,2,c
  7764  001590  D01A               	goto	l223
  7765                           
  7766                           ; BSR set to: 0
  7767                           ;buttons.c: 164: {
  7768                           ;buttons.c: 165: ++u16_ButtonsDebounceCounter[0];
  7769  001592  0101               	movlb	1	; force () banked
  7770  001594  4B30               	infsnz	BUTTONS_Task@u16_ButtonsDebounceCounter& (0+255),f,b
  7771  001596  2B31               	incf	(BUTTONS_Task@u16_ButtonsDebounceCounter+1)& (0+255),f,b
  7772                           
  7773                           ; BSR set to: 1
  7774                           ;buttons.c: 166: if(u16_ButtonsDebounceCounter[0] > 20)
  7775  001598  0101               	movlb	1	; force () banked
  7776  00159A  5131               	movf	(BUTTONS_Task@u16_ButtonsDebounceCounter+1)& (0+255),w,b
  7777  00159C  E104               	bnz	u5180
  7778  00159E  0E15               	movlw	21
  7779  0015A0  5D30               	subwf	BUTTONS_Task@u16_ButtonsDebounceCounter& (0+255),w,b
  7780  0015A2  A0D8               	btfss	status,0,c
  7781  0015A4  D018               	goto	l225
  7782  0015A6                     u5180:
  7783                           
  7784                           ; BSR set to: 1
  7785                           ;buttons.c: 167: {
  7786                           ;buttons.c: 168: u8_ButtonSignal[2]= 1;
  7787  0015A6  0E01               	movlw	1
  7788  0015A8  0100               	movlb	0	; force () banked
  7789  0015AA  6F8C               	movwf	(_u8_ButtonSignal+2)& (0+255),b
  7790                           
  7791                           ;buttons.c: 169: u16_ButtonsDebounceCounter[0]= 0;
  7792  0015AC  0E00               	movlw	0
  7793  0015AE  0101               	movlb	1	; force () banked
  7794  0015B0  6F31               	movwf	(BUTTONS_Task@u16_ButtonsDebounceCounter+1)& (0+255),b
  7795  0015B2  0E00               	movlw	0
  7796  0015B4  6F30               	movwf	BUTTONS_Task@u16_ButtonsDebounceCounter& (0+255),b
  7797                           
  7798                           ;buttons.c: 170: u16_ButtonsHoldCounter[0]= 0;
  7799  0015B6  0E00               	movlw	0
  7800  0015B8  0101               	movlb	1	; force () banked
  7801  0015BA  6F21               	movwf	(BUTTONS_Task@u16_ButtonsHoldCounter+1)& (0+255),b
  7802  0015BC  0E00               	movlw	0
  7803  0015BE  6F20               	movwf	BUTTONS_Task@u16_ButtonsHoldCounter& (0+255),b
  7804                           
  7805                           ; BSR set to: 1
  7806                           ;buttons.c: 171: u8_ButtonsStatusPressed&= ~(1<<0);
  7807  0015C0  0100               	movlb	0	; force () banked
  7808  0015C2  91CA               	bcf	BUTTONS_Task@u8_ButtonsStatusPressed& (0+255),0,b
  7809                           
  7810                           ; BSR set to: 0
  7811                           ;buttons.c: 172: }
  7812                           ;buttons.c: 173: }
  7813  0015C4  D008               	goto	l225
  7814  0015C6                     l223:
  7815                           
  7816                           ; BSR set to: 0
  7817                           ;buttons.c: 174: else
  7818                           ;buttons.c: 175: {
  7819                           ;buttons.c: 176: u8_ButtonSignal[2]= 0;
  7820                           
  7821                           ; BSR set to: 0
  7822  0015C6  0E00               	movlw	0
  7823  0015C8  0100               	movlb	0	; force () banked
  7824  0015CA  6F8C               	movwf	(_u8_ButtonSignal+2)& (0+255),b
  7825                           
  7826                           ;buttons.c: 177: u16_ButtonsHoldCounter[0]= 0;
  7827  0015CC  0E00               	movlw	0
  7828  0015CE  0101               	movlb	1	; force () banked
  7829  0015D0  6F21               	movwf	(BUTTONS_Task@u16_ButtonsHoldCounter+1)& (0+255),b
  7830  0015D2  0E00               	movlw	0
  7831  0015D4  6F20               	movwf	BUTTONS_Task@u16_ButtonsHoldCounter& (0+255),b
  7832  0015D6                     l225:
  7833                           
  7834                           ;buttons.c: 178: }
  7835                           ;buttons.c: 182: if(u8_ButtonsStatusPressed == (1<<2))
  7836                           
  7837                           ; BSR set to: 1
  7838  0015D6  0E04               	movlw	4
  7839  0015D8  0100               	movlb	0	; force () banked
  7840  0015DA  19CA               	xorwf	BUTTONS_Task@u8_ButtonsStatusPressed& (0+255),w,b
  7841  0015DC  A4D8               	btfss	status,2,c
  7842  0015DE  D01A               	goto	l226
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;buttons.c: 183: {
  7846                           ;buttons.c: 184: ++u16_ButtonsDebounceCounter[2];
  7847  0015E0  0101               	movlb	1	; force () banked
  7848  0015E2  4B34               	infsnz	(BUTTONS_Task@u16_ButtonsDebounceCounter+4)& (0+255),f,b
  7849  0015E4  2B35               	incf	(BUTTONS_Task@u16_ButtonsDebounceCounter+5)& (0+255),f,b
  7850                           
  7851                           ; BSR set to: 1
  7852                           ;buttons.c: 185: if(u16_ButtonsDebounceCounter[2] > 20)
  7853  0015E6  0101               	movlb	1	; force () banked
  7854  0015E8  5135               	movf	(BUTTONS_Task@u16_ButtonsDebounceCounter+5)& (0+255),w,b
  7855  0015EA  E104               	bnz	u5200
  7856  0015EC  0E15               	movlw	21
  7857  0015EE  5D34               	subwf	(BUTTONS_Task@u16_ButtonsDebounceCounter+4)& (0+255),w,b
  7858  0015F0  A0D8               	btfss	status,0,c
  7859  0015F2  D018               	goto	l228
  7860  0015F4                     u5200:
  7861                           
  7862                           ; BSR set to: 1
  7863                           ;buttons.c: 186: {
  7864                           ;buttons.c: 187: u8_ButtonSignal[3]= 1;
  7865  0015F4  0E01               	movlw	1
  7866  0015F6  0100               	movlb	0	; force () banked
  7867  0015F8  6F8D               	movwf	(_u8_ButtonSignal+3)& (0+255),b
  7868                           
  7869                           ;buttons.c: 188: u16_ButtonsDebounceCounter[2]= 0;
  7870  0015FA  0E00               	movlw	0
  7871  0015FC  0101               	movlb	1	; force () banked
  7872  0015FE  6F35               	movwf	(BUTTONS_Task@u16_ButtonsDebounceCounter+5)& (0+255),b
  7873  001600  0E00               	movlw	0
  7874  001602  6F34               	movwf	(BUTTONS_Task@u16_ButtonsDebounceCounter+4)& (0+255),b
  7875                           
  7876                           ;buttons.c: 189: u16_ButtonsHoldCounter[2]= 0;
  7877  001604  0E00               	movlw	0
  7878  001606  0101               	movlb	1	; force () banked
  7879  001608  6F25               	movwf	(BUTTONS_Task@u16_ButtonsHoldCounter+5)& (0+255),b
  7880  00160A  0E00               	movlw	0
  7881  00160C  6F24               	movwf	(BUTTONS_Task@u16_ButtonsHoldCounter+4)& (0+255),b
  7882                           
  7883                           ; BSR set to: 1
  7884                           ;buttons.c: 190: u8_ButtonsStatusPressed&= ~(1<<2);
  7885  00160E  0100               	movlb	0	; force () banked
  7886  001610  95CA               	bcf	BUTTONS_Task@u8_ButtonsStatusPressed& (0+255),2,b
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;buttons.c: 191: }
  7890                           ;buttons.c: 192: }
  7891  001612  D008               	goto	l228
  7892  001614                     l226:
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;buttons.c: 193: else
  7896                           ;buttons.c: 194: {
  7897                           ;buttons.c: 195: u8_ButtonSignal[3]= 0;
  7898                           
  7899                           ; BSR set to: 0
  7900  001614  0E00               	movlw	0
  7901  001616  0100               	movlb	0	; force () banked
  7902  001618  6F8D               	movwf	(_u8_ButtonSignal+3)& (0+255),b
  7903                           
  7904                           ;buttons.c: 196: u16_ButtonsHoldCounter[2]= 0;
  7905  00161A  0E00               	movlw	0
  7906  00161C  0101               	movlb	1	; force () banked
  7907  00161E  6F25               	movwf	(BUTTONS_Task@u16_ButtonsHoldCounter+5)& (0+255),b
  7908  001620  0E00               	movlw	0
  7909  001622  6F24               	movwf	(BUTTONS_Task@u16_ButtonsHoldCounter+4)& (0+255),b
  7910  001624                     l228:
  7911                           
  7912                           ;buttons.c: 197: }
  7913                           ;buttons.c: 201: if(u8_ButtonsStatusPressed == (1<<3))
  7914                           
  7915                           ; BSR set to: 1
  7916  001624  0E08               	movlw	8
  7917  001626  0100               	movlb	0	; force () banked
  7918  001628  19CA               	xorwf	BUTTONS_Task@u8_ButtonsStatusPressed& (0+255),w,b
  7919  00162A  A4D8               	btfss	status,2,c
  7920  00162C  D01A               	goto	l229
  7921                           
  7922                           ; BSR set to: 0
  7923                           ;buttons.c: 202: {
  7924                           ;buttons.c: 203: ++u16_ButtonsDebounceCounter[3];
  7925  00162E  0101               	movlb	1	; force () banked
  7926  001630  4B36               	infsnz	(BUTTONS_Task@u16_ButtonsDebounceCounter+6)& (0+255),f,b
  7927  001632  2B37               	incf	(BUTTONS_Task@u16_ButtonsDebounceCounter+7)& (0+255),f,b
  7928                           
  7929                           ; BSR set to: 1
  7930                           ;buttons.c: 204: if(u16_ButtonsDebounceCounter[3] > 20)
  7931  001634  0101               	movlb	1	; force () banked
  7932  001636  5137               	movf	(BUTTONS_Task@u16_ButtonsDebounceCounter+7)& (0+255),w,b
  7933  001638  E104               	bnz	u5220
  7934  00163A  0E15               	movlw	21
  7935  00163C  5D36               	subwf	(BUTTONS_Task@u16_ButtonsDebounceCounter+6)& (0+255),w,b
  7936  00163E  A0D8               	btfss	status,0,c
  7937  001640  0012               	return	
  7938  001642                     u5220:
  7939                           
  7940                           ; BSR set to: 1
  7941                           ;buttons.c: 205: {
  7942                           ;buttons.c: 206: u8_ButtonSignal[4]= 1;
  7943  001642  0E01               	movlw	1
  7944  001644  0100               	movlb	0	; force () banked
  7945  001646  6F8E               	movwf	(_u8_ButtonSignal+4)& (0+255),b
  7946                           
  7947                           ;buttons.c: 207: u16_ButtonsDebounceCounter[3]= 0;
  7948  001648  0E00               	movlw	0
  7949  00164A  0101               	movlb	1	; force () banked
  7950  00164C  6F37               	movwf	(BUTTONS_Task@u16_ButtonsDebounceCounter+7)& (0+255),b
  7951  00164E  0E00               	movlw	0
  7952  001650  6F36               	movwf	(BUTTONS_Task@u16_ButtonsDebounceCounter+6)& (0+255),b
  7953                           
  7954                           ;buttons.c: 208: u16_ButtonsHoldCounter[3]= 0;
  7955  001652  0E00               	movlw	0
  7956  001654  0101               	movlb	1	; force () banked
  7957  001656  6F27               	movwf	(BUTTONS_Task@u16_ButtonsHoldCounter+7)& (0+255),b
  7958  001658  0E00               	movlw	0
  7959  00165A  6F26               	movwf	(BUTTONS_Task@u16_ButtonsHoldCounter+6)& (0+255),b
  7960                           
  7961                           ; BSR set to: 1
  7962                           ;buttons.c: 209: u8_ButtonsStatusPressed&= ~(1<<3);
  7963  00165C  0100               	movlb	0	; force () banked
  7964  00165E  97CA               	bcf	BUTTONS_Task@u8_ButtonsStatusPressed& (0+255),3,b
  7965                           
  7966                           ; BSR set to: 0
  7967                           ;buttons.c: 210: }
  7968                           ;buttons.c: 211: }
  7969  001660  0012               	return	
  7970  001662                     l229:
  7971                           
  7972                           ; BSR set to: 0
  7973                           ;buttons.c: 212: else
  7974                           ;buttons.c: 213: {
  7975                           ;buttons.c: 214: u8_ButtonSignal[4]= 0;
  7976                           
  7977                           ; BSR set to: 0
  7978  001662  0E00               	movlw	0
  7979  001664  0100               	movlb	0	; force () banked
  7980  001666  6F8E               	movwf	(_u8_ButtonSignal+4)& (0+255),b
  7981                           
  7982                           ;buttons.c: 215: u16_ButtonsHoldCounter[3]= 0;
  7983  001668  0E00               	movlw	0
  7984  00166A  0101               	movlb	1	; force () banked
  7985  00166C  6F27               	movwf	(BUTTONS_Task@u16_ButtonsHoldCounter+7)& (0+255),b
  7986  00166E  0E00               	movlw	0
  7987  001670  6F26               	movwf	(BUTTONS_Task@u16_ButtonsHoldCounter+6)& (0+255),b
  7988                           
  7989                           ; BSR set to: 1
  7990  001672  0012               	return	
  7991  001674                     __end_of_BUTTONS_Task:
  7992                           	opt stack 0
  7993                           tblptru	equ	0xFF8
  7994                           tblptrh	equ	0xFF7
  7995                           tblptrl	equ	0xFF6
  7996                           tablat	equ	0xFF5
  7997                           prodh	equ	0xFF4
  7998                           prodl	equ	0xFF3
  7999                           intcon	equ	0xFF2
  8000                           intcon2	equ	0xFF1
  8001                           intcon3	equ	0xFF0
  8002                           postinc0	equ	0xFEE
  8003                           wreg	equ	0xFE8
  8004                           indf2	equ	0xFDF
  8005                           postinc2	equ	0xFDE
  8006                           postdec2	equ	0xFDD
  8007                           fsr2h	equ	0xFDA
  8008                           fsr2l	equ	0xFD9
  8009                           status	equ	0xFD8
  8010                           
  8011 ;; *************** function _ADC_Task *****************
  8012 ;; Defined at:
  8013 ;;		line 66 in file "hal/adc.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;		None
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;  si32_AdcTemp    4   10[BANK1 ] long 
  8018 ;;  u16_AdcResul    2    8[BANK1 ] unsigned int 
  8019 ;; Return value:  Size  Location     Type
  8020 ;;                  1    wreg      void 
  8021 ;; Registers used:
  8022 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8023 ;; Tracked objects:
  8024 ;;		On entry : 0/0
  8025 ;;		On exit  : 0/0
  8026 ;;		Unchanged: 0/0
  8027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8029 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8030 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8031 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8032 ;;Total ram usage:       14 bytes
  8033 ;; Hardware stack levels used:    1
  8034 ;; Hardware stack levels required when called:    4
  8035 ;; This function calls:
  8036 ;;		_ADC_GetVoltageFiltered
  8037 ;;		___aldiv
  8038 ;;		___lldiv
  8039 ;;		___lmul
  8040 ;; This function is called by:
  8041 ;;		_main
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           	psect	text44
  8046  001674                     __ptext44:
  8047                           	opt stack 0
  8048  001674                     _ADC_Task:
  8049                           	opt stack 26
  8050                           
  8051                           ;adc.c: 68: int32_t si32_AdcTemporary= 0;
  8052                           
  8053                           ;incstack = 0
  8054  001674  0E00               	movlw	0
  8055  001676  0101               	movlb	1	; force () banked
  8056  001678  6F69               	movwf	ADC_Task@si32_AdcTemporary& (0+255),b
  8057  00167A  0E00               	movlw	0
  8058  00167C  6F6A               	movwf	(ADC_Task@si32_AdcTemporary+1)& (0+255),b
  8059  00167E  0E00               	movlw	0
  8060  001680  6F6B               	movwf	(ADC_Task@si32_AdcTemporary+2)& (0+255),b
  8061  001682  0E00               	movlw	0
  8062  001684  6F6C               	movwf	(ADC_Task@si32_AdcTemporary+3)& (0+255),b
  8063                           
  8064                           ;adc.c: 69: uint16_t u16_AdcResult= 0;
  8065  001686  0E00               	movlw	0
  8066  001688  0101               	movlb	1	; force () banked
  8067  00168A  6F68               	movwf	(ADC_Task@u16_AdcResult+1)& (0+255),b
  8068  00168C  0E00               	movlw	0
  8069  00168E  6F67               	movwf	ADC_Task@u16_AdcResult& (0+255),b
  8070                           
  8071                           ; BSR set to: 1
  8072                           ;adc.c: 70: if(ADCON0bits.GO == 0)
  8073  001690  B2C2               	btfsc	4034,1,c	;volatile
  8074  001692  0012               	return	
  8075                           
  8076                           ; BSR set to: 1
  8077                           ;adc.c: 71: {
  8078                           ;adc.c: 72: u16_AdcResult= ADRES;
  8079  001694  CFC3 F167          	movff	4035,ADC_Task@u16_AdcResult	;volatile
  8080  001698  CFC4 F168          	movff	4036,ADC_Task@u16_AdcResult+1	;volatile
  8081                           
  8082                           ; BSR set to: 1
  8083                           ;adc.c: 73: u16_AdcVoltageMV= (u32_AdcLsb*(uint32_t)ADC_GetVoltageFiltered(u16_AdcResult
      +                          ))/(uint32_t)1000;
  8084  00169C  C167  F0E3         	movff	ADC_Task@u16_AdcResult,ADC_GetVoltageFiltered@u16_Input
  8085  0016A0  C168  F0E4         	movff	ADC_Task@u16_AdcResult+1,ADC_GetVoltageFiltered@u16_Input+1
  8086  0016A4  EC13  F011         	call	_ADC_GetVoltageFiltered	;wreg free
  8087  0016A8  0100               	movlb	0	; force () banked
  8088  0016AA  C0E3  F163         	movff	?_ADC_GetVoltageFiltered,_ADC_Task$1620
  8089  0016AE  C0E4  F164         	movff	?_ADC_GetVoltageFiltered+1,_ADC_Task$1620+1
  8090  0016B2  0101               	movlb	1	; force () banked
  8091  0016B4  6B65               	clrf	(_ADC_Task$1620+2)& (0+255),b
  8092  0016B6  6B66               	clrf	(_ADC_Task$1620+3)& (0+255),b
  8093                           
  8094                           ; BSR set to: 1
  8095                           ;adc.c: 73: u16_AdcVoltageMV= (u32_AdcLsb*(uint32_t)ADC_GetVoltageFiltered(u16_AdcResult
      +                          ))/(uint32_t)1000;
  8096  0016B8  C163  F001         	movff	_ADC_Task$1620,___lmul@multiplier
  8097  0016BC  C164  F002         	movff	_ADC_Task$1620+1,___lmul@multiplier+1
  8098  0016C0  C165  F003         	movff	_ADC_Task$1620+2,___lmul@multiplier+2
  8099  0016C4  C166  F004         	movff	_ADC_Task$1620+3,___lmul@multiplier+3
  8100  0016C8  0E01               	movlw	low _u32_AdcLsb
  8101  0016CA  6EF6               	movwf	tblptrl,c
  8102  0016CC                     	if	1	;There is more than 1 active tblptr byte
  8103  0016CC  0E10               	movlw	high _u32_AdcLsb
  8104  0016CE  6EF7               	movwf	tblptrh,c
  8105  0016D0                     	endif
  8106  0016D0                     	if	1	;There are 3 active tblptr bytes
  8107  0016D0  0E00               	movlw	low (_u32_AdcLsb shr (0+16))
  8108  0016D2  6EF8               	movwf	tblptru,c
  8109  0016D4                     	endif
  8110  0016D4  0009               	tblrd		*+
  8111  0016D6  CFF5 F005          	movff	tablat,___lmul@multiplicand
  8112  0016DA  0009               	tblrd		*+
  8113  0016DC  CFF5 F006          	movff	tablat,___lmul@multiplicand+1
  8114  0016E0  0009               	tblrd		*+
  8115  0016E2  CFF5 F007          	movff	tablat,___lmul@multiplicand+2
  8116  0016E6  000A               	tblrd		*-
  8117  0016E8  CFF5 F008          	movff	tablat,___lmul@multiplicand+3
  8118  0016EC  ECE1  F013         	call	___lmul	;wreg free
  8119  0016F0  C001  F01B         	movff	?___lmul,___lldiv@dividend
  8120  0016F4  C002  F01C         	movff	?___lmul+1,___lldiv@dividend+1
  8121  0016F8  C003  F01D         	movff	?___lmul+2,___lldiv@dividend+2
  8122  0016FC  C004  F01E         	movff	?___lmul+3,___lldiv@dividend+3
  8123  001700  0EE8               	movlw	232
  8124  001702  0100               	movlb	0	; force () banked
  8125  001704  6F1F               	movwf	___lldiv@divisor& (0+255),b
  8126  001706  0E03               	movlw	3
  8127  001708  6F20               	movwf	(___lldiv@divisor+1)& (0+255),b
  8128  00170A  0E00               	movlw	0
  8129  00170C  6F21               	movwf	(___lldiv@divisor+2)& (0+255),b
  8130  00170E  0E00               	movlw	0
  8131  001710  6F22               	movwf	(___lldiv@divisor+3)& (0+255),b
  8132  001712  ECCD  F012         	call	___lldiv	;wreg free
  8133  001716  C01B  F0B1         	movff	?___lldiv,_u16_AdcVoltageMV
  8134  00171A  C01C  F0B2         	movff	?___lldiv+1,_u16_AdcVoltageMV+1
  8135                           
  8136                           ;adc.c: 75: si32_AdcTemporary= (u32_AdcLsb*(uint32_t)u16_AdcResult)/(uint32_t)1000;
  8137  00171E  C167  F001         	movff	ADC_Task@u16_AdcResult,___lmul@multiplier
  8138  001722  C168  F002         	movff	ADC_Task@u16_AdcResult+1,___lmul@multiplier+1
  8139  001726  0100               	movlb	0	; force () banked
  8140  001728  6B03               	clrf	(___lmul@multiplier+2)& (0+255),b
  8141  00172A  6B04               	clrf	(___lmul@multiplier+3)& (0+255),b
  8142  00172C  0E01               	movlw	low _u32_AdcLsb
  8143  00172E  6EF6               	movwf	tblptrl,c
  8144  001730                     	if	1	;There is more than 1 active tblptr byte
  8145  001730  0E10               	movlw	high _u32_AdcLsb
  8146  001732  6EF7               	movwf	tblptrh,c
  8147  001734                     	endif
  8148  001734                     	if	1	;There are 3 active tblptr bytes
  8149  001734  0E00               	movlw	low (_u32_AdcLsb shr (0+16))
  8150  001736  6EF8               	movwf	tblptru,c
  8151  001738                     	endif
  8152  001738  0009               	tblrd		*+
  8153  00173A  CFF5 F005          	movff	tablat,___lmul@multiplicand
  8154  00173E  0009               	tblrd		*+
  8155  001740  CFF5 F006          	movff	tablat,___lmul@multiplicand+1
  8156  001744  0009               	tblrd		*+
  8157  001746  CFF5 F007          	movff	tablat,___lmul@multiplicand+2
  8158  00174A  000A               	tblrd		*-
  8159  00174C  CFF5 F008          	movff	tablat,___lmul@multiplicand+3
  8160  001750  ECE1  F013         	call	___lmul	;wreg free
  8161  001754  C001  F01B         	movff	?___lmul,___lldiv@dividend
  8162  001758  C002  F01C         	movff	?___lmul+1,___lldiv@dividend+1
  8163  00175C  C003  F01D         	movff	?___lmul+2,___lldiv@dividend+2
  8164  001760  C004  F01E         	movff	?___lmul+3,___lldiv@dividend+3
  8165  001764  0EE8               	movlw	232
  8166  001766  0100               	movlb	0	; force () banked
  8167  001768  6F1F               	movwf	___lldiv@divisor& (0+255),b
  8168  00176A  0E03               	movlw	3
  8169  00176C  6F20               	movwf	(___lldiv@divisor+1)& (0+255),b
  8170  00176E  0E00               	movlw	0
  8171  001770  6F21               	movwf	(___lldiv@divisor+2)& (0+255),b
  8172  001772  0E00               	movlw	0
  8173  001774  6F22               	movwf	(___lldiv@divisor+3)& (0+255),b
  8174  001776  ECCD  F012         	call	___lldiv	;wreg free
  8175  00177A  C01B  F169         	movff	?___lldiv,ADC_Task@si32_AdcTemporary
  8176  00177E  C01C  F16A         	movff	?___lldiv+1,ADC_Task@si32_AdcTemporary+1
  8177  001782  C01D  F16B         	movff	?___lldiv+2,ADC_Task@si32_AdcTemporary+2
  8178  001786  C01E  F16C         	movff	?___lldiv+3,ADC_Task@si32_AdcTemporary+3
  8179                           
  8180                           ;adc.c: 76: si32_AdcTemporary= (si32_AdcTemporary * si32_TempSensorGain) / 1000;
  8181  00178A  C169  F001         	movff	ADC_Task@si32_AdcTemporary,___lmul@multiplier
  8182  00178E  C16A  F002         	movff	ADC_Task@si32_AdcTemporary+1,___lmul@multiplier+1
  8183  001792  C16B  F003         	movff	ADC_Task@si32_AdcTemporary+2,___lmul@multiplier+2
  8184  001796  C16C  F004         	movff	ADC_Task@si32_AdcTemporary+3,___lmul@multiplier+3
  8185  00179A  0E09               	movlw	low _si32_TempSensorGain
  8186  00179C  6EF6               	movwf	tblptrl,c
  8187  00179E                     	if	1	;There is more than 1 active tblptr byte
  8188  00179E  0E10               	movlw	high _si32_TempSensorGain
  8189  0017A0  6EF7               	movwf	tblptrh,c
  8190  0017A2                     	endif
  8191  0017A2                     	if	1	;There are 3 active tblptr bytes
  8192  0017A2  0E00               	movlw	low (_si32_TempSensorGain shr (0+16))
  8193  0017A4  6EF8               	movwf	tblptru,c
  8194  0017A6                     	endif
  8195  0017A6  0009               	tblrd		*+
  8196  0017A8  CFF5 F005          	movff	tablat,___lmul@multiplicand
  8197  0017AC  0009               	tblrd		*+
  8198  0017AE  CFF5 F006          	movff	tablat,___lmul@multiplicand+1
  8199  0017B2  0009               	tblrd		*+
  8200  0017B4  CFF5 F007          	movff	tablat,___lmul@multiplicand+2
  8201  0017B8  000A               	tblrd		*-
  8202  0017BA  CFF5 F008          	movff	tablat,___lmul@multiplicand+3
  8203  0017BE  ECE1  F013         	call	___lmul	;wreg free
  8204  0017C2  C001  F00D         	movff	?___lmul,___aldiv@dividend
  8205  0017C6  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  8206  0017CA  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  8207  0017CE  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  8208  0017D2  0EE8               	movlw	232
  8209  0017D4  0100               	movlb	0	; force () banked
  8210  0017D6  6F11               	movwf	___aldiv@divisor& (0+255),b
  8211  0017D8  0E03               	movlw	3
  8212  0017DA  6F12               	movwf	(___aldiv@divisor+1)& (0+255),b
  8213  0017DC  0E00               	movlw	0
  8214  0017DE  6F13               	movwf	(___aldiv@divisor+2)& (0+255),b
  8215  0017E0  0E00               	movlw	0
  8216  0017E2  6F14               	movwf	(___aldiv@divisor+3)& (0+255),b
  8217  0017E4  EC79  F011         	call	___aldiv	;wreg free
  8218  0017E8  C00D  F169         	movff	?___aldiv,ADC_Task@si32_AdcTemporary
  8219  0017EC  C00E  F16A         	movff	?___aldiv+1,ADC_Task@si32_AdcTemporary+1
  8220  0017F0  C00F  F16B         	movff	?___aldiv+2,ADC_Task@si32_AdcTemporary+2
  8221  0017F4  C010  F16C         	movff	?___aldiv+3,ADC_Task@si32_AdcTemporary+3
  8222                           
  8223                           ;adc.c: 77: si32_AdcTemporary= si32_AdcTemporary + si32_TempSensorOffset;
  8224  0017F8  0E05               	movlw	low _si32_TempSensorOffset
  8225  0017FA  6EF6               	movwf	tblptrl,c
  8226  0017FC                     	if	1	;There is more than 1 active tblptr byte
  8227  0017FC  0E10               	movlw	high _si32_TempSensorOffset
  8228  0017FE  6EF7               	movwf	tblptrh,c
  8229  001800                     	endif
  8230  001800                     	if	1	;There are 3 active tblptr bytes
  8231  001800  0E00               	movlw	low (_si32_TempSensorOffset shr (0+16))
  8232  001802  6EF8               	movwf	tblptru,c
  8233  001804                     	endif
  8234  001804  0009               	tblrd		*+
  8235  001806  CFF5 F15F          	movff	tablat,??_ADC_Task
  8236  00180A  0009               	tblrd		*+
  8237  00180C  CFF5 F160          	movff	tablat,??_ADC_Task+1
  8238  001810  0009               	tblrd		*+
  8239  001812  CFF5 F161          	movff	tablat,??_ADC_Task+2
  8240  001816  0009               	tblrd		*+
  8241  001818  CFF5 F162          	movff	tablat,??_ADC_Task+3
  8242  00181C  0101               	movlb	1	; force () banked
  8243  00181E  515F               	movf	??_ADC_Task& (0+255),w,b
  8244  001820  0101               	movlb	1	; force () banked
  8245  001822  2569               	addwf	ADC_Task@si32_AdcTemporary& (0+255),w,b
  8246  001824  6F69               	movwf	ADC_Task@si32_AdcTemporary& (0+255),b
  8247  001826  0101               	movlb	1	; force () banked
  8248  001828  5160               	movf	(??_ADC_Task+1)& (0+255),w,b
  8249  00182A  0101               	movlb	1	; force () banked
  8250  00182C  216A               	addwfc	(ADC_Task@si32_AdcTemporary+1)& (0+255),w,b
  8251  00182E  6F6A               	movwf	(ADC_Task@si32_AdcTemporary+1)& (0+255),b
  8252  001830  0101               	movlb	1	; force () banked
  8253  001832  5161               	movf	(??_ADC_Task+2)& (0+255),w,b
  8254  001834  0101               	movlb	1	; force () banked
  8255  001836  216B               	addwfc	(ADC_Task@si32_AdcTemporary+2)& (0+255),w,b
  8256  001838  6F6B               	movwf	(ADC_Task@si32_AdcTemporary+2)& (0+255),b
  8257  00183A  0101               	movlb	1	; force () banked
  8258  00183C  5162               	movf	(??_ADC_Task+3)& (0+255),w,b
  8259  00183E  0101               	movlb	1	; force () banked
  8260  001840  216C               	addwfc	(ADC_Task@si32_AdcTemporary+3)& (0+255),w,b
  8261  001842  6F6C               	movwf	(ADC_Task@si32_AdcTemporary+3)& (0+255),b
  8262                           
  8263                           ; BSR set to: 1
  8264                           ;adc.c: 79: s16_TemperatureCelcius= si32_AdcTemporary;
  8265  001844  C169  F093         	movff	ADC_Task@si32_AdcTemporary,_s16_TemperatureCelcius
  8266  001848  C16A  F094         	movff	ADC_Task@si32_AdcTemporary+1,_s16_TemperatureCelcius+1
  8267  00184C  C16B  F095         	movff	ADC_Task@si32_AdcTemporary+2,_s16_TemperatureCelcius+2
  8268  001850  C16C  F096         	movff	ADC_Task@si32_AdcTemporary+3,_s16_TemperatureCelcius+3
  8269                           
  8270                           ;adc.c: 81: if(s16_TemperatureCelcius > 460)
  8271  001854  0100               	movlb	0	; force () banked
  8272  001856  BF96               	btfsc	(_s16_TemperatureCelcius+3)& (0+255),7,b
  8273  001858  D00B               	goto	l117
  8274  00185A  5196               	movf	(_s16_TemperatureCelcius+3)& (0+255),w,b
  8275  00185C  1195               	iorwf	(_s16_TemperatureCelcius+2)& (0+255),w,b
  8276  00185E  E106               	bnz	u5550
  8277  001860  0ECD               	movlw	205
  8278  001862  5D93               	subwf	_s16_TemperatureCelcius& (0+255),w,b
  8279  001864  0E01               	movlw	1
  8280  001866  5994               	subwfb	(_s16_TemperatureCelcius+1)& (0+255),w,b
  8281  001868  A0D8               	btfss	status,0,c
  8282  00186A  D002               	goto	l117
  8283  00186C                     u5550:
  8284                           
  8285                           ; BSR set to: 0
  8286                           ;adc.c: 82: {
  8287                           ;adc.c: 83: u8_ErrorRegister|= 1;
  8288  00186C  0100               	movlb	0	; force () banked
  8289  00186E  81CB               	bsf	_u8_ErrorRegister& (0+255),0,b	;volatile
  8290  001870                     l117:
  8291                           
  8292                           ; BSR set to: 0
  8293                           ;adc.c: 84: }
  8294                           ;adc.c: 86: if(s16_TemperatureCelcius < 0)
  8295                           
  8296                           ; BSR set to: 0
  8297  001870  0100               	movlb	0	; force () banked
  8298  001872  AF96               	btfss	(_s16_TemperatureCelcius+3)& (0+255),7,b
  8299  001874  D009               	goto	l118
  8300                           
  8301                           ; BSR set to: 0
  8302                           ;adc.c: 87: {
  8303                           ;adc.c: 88: s16_TemperatureCelcius= 0;
  8304  001876  0E00               	movlw	0
  8305  001878  0100               	movlb	0	; force () banked
  8306  00187A  6F93               	movwf	_s16_TemperatureCelcius& (0+255),b
  8307  00187C  0E00               	movlw	0
  8308  00187E  6F94               	movwf	(_s16_TemperatureCelcius+1)& (0+255),b
  8309  001880  0E00               	movlw	0
  8310  001882  6F95               	movwf	(_s16_TemperatureCelcius+2)& (0+255),b
  8311  001884  0E00               	movlw	0
  8312  001886  6F96               	movwf	(_s16_TemperatureCelcius+3)& (0+255),b
  8313  001888                     l118:
  8314                           
  8315                           ; BSR set to: 0
  8316                           ;adc.c: 89: }
  8317                           ;adc.c: 91: ADCON0= 4 | 1;
  8318  001888  0E05               	movlw	5
  8319  00188A  6EC2               	movwf	4034,c	;volatile
  8320                           
  8321                           ; BSR set to: 0
  8322                           ;adc.c: 92: ADCON0bits.GO= 1;
  8323  00188C  82C2               	bsf	4034,1,c	;volatile
  8324  00188E  0012               	return	
  8325  001890                     __end_of_ADC_Task:
  8326                           	opt stack 0
  8327                           tblptru	equ	0xFF8
  8328                           tblptrh	equ	0xFF7
  8329                           tblptrl	equ	0xFF6
  8330                           tablat	equ	0xFF5
  8331                           prodh	equ	0xFF4
  8332                           prodl	equ	0xFF3
  8333                           intcon	equ	0xFF2
  8334                           intcon2	equ	0xFF1
  8335                           intcon3	equ	0xFF0
  8336                           postinc0	equ	0xFEE
  8337                           wreg	equ	0xFE8
  8338                           indf2	equ	0xFDF
  8339                           postinc2	equ	0xFDE
  8340                           postdec2	equ	0xFDD
  8341                           fsr2h	equ	0xFDA
  8342                           fsr2l	equ	0xFD9
  8343                           status	equ	0xFD8
  8344                           
  8345 ;; *************** function ___lldiv *****************
  8346 ;; Defined at:
  8347 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  8348 ;; Parameters:    Size  Location     Type
  8349 ;;  dividend        4   26[COMRAM] unsigned long 
  8350 ;;  divisor         4   30[COMRAM] unsigned long 
  8351 ;; Auto vars:     Size  Location     Type
  8352 ;;  quotient        4   34[COMRAM] unsigned long 
  8353 ;;  counter         1   38[COMRAM] unsigned char 
  8354 ;; Return value:  Size  Location     Type
  8355 ;;                  4   26[COMRAM] unsigned long 
  8356 ;; Registers used:
  8357 ;;		wreg, status,2, status,0
  8358 ;; Tracked objects:
  8359 ;;		On entry : 0/0
  8360 ;;		On exit  : 0/0
  8361 ;;		Unchanged: 0/0
  8362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8363 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8364 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8366 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8367 ;;Total ram usage:       13 bytes
  8368 ;; Hardware stack levels used:    1
  8369 ;; Hardware stack levels required when called:    2
  8370 ;; This function calls:
  8371 ;;		Nothing
  8372 ;; This function is called by:
  8373 ;;		_ADC_Task
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           	psect	text45
  8378  00259A                     __ptext45:
  8379                           	opt stack 0
  8380  00259A                     ___lldiv:
  8381                           	opt stack 27
  8382                           
  8383                           ;incstack = 0
  8384  00259A  0E00               	movlw	0
  8385  00259C  6E23               	movwf	___lldiv@quotient,c
  8386  00259E  0E00               	movlw	0
  8387  0025A0  6E24               	movwf	___lldiv@quotient+1,c
  8388  0025A2  0E00               	movlw	0
  8389  0025A4  6E25               	movwf	___lldiv@quotient+2,c
  8390  0025A6  0E00               	movlw	0
  8391  0025A8  6E26               	movwf	___lldiv@quotient+3,c
  8392  0025AA  501F               	movf	___lldiv@divisor,w,c
  8393  0025AC  1020               	iorwf	___lldiv@divisor+1,w,c
  8394  0025AE  1021               	iorwf	___lldiv@divisor+2,w,c
  8395  0025B0  1022               	iorwf	___lldiv@divisor+3,w,c
  8396  0025B2  B4D8               	btfsc	status,2,c
  8397  0025B4  D02A               	goto	l1188
  8398  0025B6  0E01               	movlw	1
  8399  0025B8  6E27               	movwf	___lldiv@counter,c
  8400  0025BA  D006               	goto	l1183
  8401  0025BC  90D8               	bcf	status,0,c
  8402  0025BE  361F               	rlcf	___lldiv@divisor,f,c
  8403  0025C0  3620               	rlcf	___lldiv@divisor+1,f,c
  8404  0025C2  3621               	rlcf	___lldiv@divisor+2,f,c
  8405  0025C4  3622               	rlcf	___lldiv@divisor+3,f,c
  8406  0025C6  2A27               	incf	___lldiv@counter,f,c
  8407  0025C8                     l1183:
  8408  0025C8  AE22               	btfss	___lldiv@divisor+3,7,c
  8409  0025CA  D7F8               	goto	l1184
  8410  0025CC                     u4620:
  8411  0025CC  90D8               	bcf	status,0,c
  8412  0025CE  3623               	rlcf	___lldiv@quotient,f,c
  8413  0025D0  3624               	rlcf	___lldiv@quotient+1,f,c
  8414  0025D2  3625               	rlcf	___lldiv@quotient+2,f,c
  8415  0025D4  3626               	rlcf	___lldiv@quotient+3,f,c
  8416  0025D6  501F               	movf	___lldiv@divisor,w,c
  8417  0025D8  5C1B               	subwf	___lldiv@dividend,w,c
  8418  0025DA  5020               	movf	___lldiv@divisor+1,w,c
  8419  0025DC  581C               	subwfb	___lldiv@dividend+1,w,c
  8420  0025DE  5021               	movf	___lldiv@divisor+2,w,c
  8421  0025E0  581D               	subwfb	___lldiv@dividend+2,w,c
  8422  0025E2  5022               	movf	___lldiv@divisor+3,w,c
  8423  0025E4  581E               	subwfb	___lldiv@dividend+3,w,c
  8424  0025E6  A0D8               	btfss	status,0,c
  8425  0025E8  D009               	goto	l1187
  8426  0025EA  501F               	movf	___lldiv@divisor,w,c
  8427  0025EC  5E1B               	subwf	___lldiv@dividend,f,c
  8428  0025EE  5020               	movf	___lldiv@divisor+1,w,c
  8429  0025F0  5A1C               	subwfb	___lldiv@dividend+1,f,c
  8430  0025F2  5021               	movf	___lldiv@divisor+2,w,c
  8431  0025F4  5A1D               	subwfb	___lldiv@dividend+2,f,c
  8432  0025F6  5022               	movf	___lldiv@divisor+3,w,c
  8433  0025F8  5A1E               	subwfb	___lldiv@dividend+3,f,c
  8434  0025FA  8023               	bsf	___lldiv@quotient,0,c
  8435  0025FC                     l1187:
  8436  0025FC  90D8               	bcf	status,0,c
  8437  0025FE  3222               	rrcf	___lldiv@divisor+3,f,c
  8438  002600  3221               	rrcf	___lldiv@divisor+2,f,c
  8439  002602  3220               	rrcf	___lldiv@divisor+1,f,c
  8440  002604  321F               	rrcf	___lldiv@divisor,f,c
  8441  002606  2E27               	decfsz	___lldiv@counter,f,c
  8442  002608  D7E1               	goto	u4620
  8443  00260A                     l1188:
  8444  00260A  C023  F01B         	movff	___lldiv@quotient,?___lldiv
  8445  00260E  C024  F01C         	movff	___lldiv@quotient+1,?___lldiv+1
  8446  002612  C025  F01D         	movff	___lldiv@quotient+2,?___lldiv+2
  8447  002616  C026  F01E         	movff	___lldiv@quotient+3,?___lldiv+3
  8448  00261A  0012               	return		;funcret
  8449  00261C                     __end_of___lldiv:
  8450                           	opt stack 0
  8451                           tblptru	equ	0xFF8
  8452                           tblptrh	equ	0xFF7
  8453                           tblptrl	equ	0xFF6
  8454                           tablat	equ	0xFF5
  8455                           prodh	equ	0xFF4
  8456                           prodl	equ	0xFF3
  8457                           intcon	equ	0xFF2
  8458                           intcon2	equ	0xFF1
  8459                           intcon3	equ	0xFF0
  8460                           postinc0	equ	0xFEE
  8461                           wreg	equ	0xFE8
  8462                           indf2	equ	0xFDF
  8463                           postinc2	equ	0xFDE
  8464                           postdec2	equ	0xFDD
  8465                           fsr2h	equ	0xFDA
  8466                           fsr2l	equ	0xFD9
  8467                           status	equ	0xFD8
  8468                           
  8469 ;; *************** function _ADC_GetVoltageFiltered *****************
  8470 ;; Defined at:
  8471 ;;		line 52 in file "hal/adc.c"
  8472 ;; Parameters:    Size  Location     Type
  8473 ;;  u16_Input       2   18[BANK0 ] unsigned int 
  8474 ;; Auto vars:     Size  Location     Type
  8475 ;;  s32_FilterTe    4   22[BANK0 ] long 
  8476 ;; Return value:  Size  Location     Type
  8477 ;;                  2   18[BANK0 ] unsigned int 
  8478 ;; Registers used:
  8479 ;;		wreg, status,2, status,0, cstack
  8480 ;; Tracked objects:
  8481 ;;		On entry : 0/0
  8482 ;;		On exit  : 0/0
  8483 ;;		Unchanged: 0/0
  8484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8485 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8486 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8487 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8488 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8489 ;;Total ram usage:        8 bytes
  8490 ;; Hardware stack levels used:    1
  8491 ;; Hardware stack levels required when called:    3
  8492 ;; This function calls:
  8493 ;;		___aldiv
  8494 ;;		___lmul
  8495 ;; This function is called by:
  8496 ;;		_ADC_Task
  8497 ;; This function uses a non-reentrant model
  8498 ;;
  8499                           
  8500                           	psect	text46
  8501  002226                     __ptext46:
  8502                           	opt stack 0
  8503  002226                     _ADC_GetVoltageFiltered:
  8504                           	opt stack 26
  8505                           
  8506                           ;adc.c: 54: int32_t s32_FilterTemporary= 0;
  8507                           
  8508                           ;incstack = 0
  8509  002226  0E00               	movlw	0
  8510  002228  0100               	movlb	0	; force () banked
  8511  00222A  6FE7               	movwf	ADC_GetVoltageFiltered@s32_FilterTemporary& (0+255),b
  8512  00222C  0E00               	movlw	0
  8513  00222E  6FE8               	movwf	(ADC_GetVoltageFiltered@s32_FilterTemporary+1)& (0+255),b
  8514  002230  0E00               	movlw	0
  8515  002232  6FE9               	movwf	(ADC_GetVoltageFiltered@s32_FilterTemporary+2)& (0+255),b
  8516  002234  0E00               	movlw	0
  8517  002236  6FEA               	movwf	(ADC_GetVoltageFiltered@s32_FilterTemporary+3)& (0+255),b
  8518                           
  8519                           ; BSR set to: 0
  8520                           ;adc.c: 55: static uint16_t u16_OutputBefore= 0;
  8521                           ;adc.c: 57: s32_FilterTemporary= (int32_t)(u16_Input*1 - u16_OutputBefore) * 160;
  8522  002238  C0AF  F0E5         	movff	ADC_GetVoltageFiltered@u16_OutputBefore,??_ADC_GetVoltageFiltered
  8523  00223C  C0B0  F0E6         	movff	ADC_GetVoltageFiltered@u16_OutputBefore+1,??_ADC_GetVoltageFiltered+1
  8524  002240  0100               	movlb	0	; force () banked
  8525  002242  1FE5               	comf	??_ADC_GetVoltageFiltered& (0+255),f,b
  8526  002244  1FE6               	comf	(??_ADC_GetVoltageFiltered+1)& (0+255),f,b
  8527  002246  4BE5               	infsnz	??_ADC_GetVoltageFiltered& (0+255),f,b
  8528  002248  2BE6               	incf	(??_ADC_GetVoltageFiltered+1)& (0+255),f,b
  8529  00224A  0100               	movlb	0	; force () banked
  8530  00224C  51E3               	movf	ADC_GetVoltageFiltered@u16_Input& (0+255),w,b
  8531  00224E  0100               	movlb	0	; force () banked
  8532  002250  27E5               	addwf	??_ADC_GetVoltageFiltered& (0+255),f,b
  8533  002252  0100               	movlb	0	; force () banked
  8534  002254  51E4               	movf	(ADC_GetVoltageFiltered@u16_Input+1)& (0+255),w,b
  8535  002256  0100               	movlb	0	; force () banked
  8536  002258  23E6               	addwfc	(??_ADC_GetVoltageFiltered+1)& (0+255),f,b
  8537  00225A  C0E5  F001         	movff	??_ADC_GetVoltageFiltered,___lmul@multiplier
  8538  00225E  C0E6  F002         	movff	??_ADC_GetVoltageFiltered+1,___lmul@multiplier+1
  8539  002262  0100               	movlb	0	; force () banked
  8540  002264  6B03               	clrf	(___lmul@multiplier+2)& (0+255),b
  8541  002266  6B04               	clrf	(___lmul@multiplier+3)& (0+255),b
  8542  002268  0EA0               	movlw	160
  8543  00226A  0100               	movlb	0	; force () banked
  8544  00226C  6F05               	movwf	___lmul@multiplicand& (0+255),b
  8545  00226E  0E00               	movlw	0
  8546  002270  6F06               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8547  002272  0E00               	movlw	0
  8548  002274  6F07               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8549  002276  0E00               	movlw	0
  8550  002278  6F08               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8551  00227A  ECE1  F013         	call	___lmul	;wreg free
  8552  00227E  C001  F0E7         	movff	?___lmul,ADC_GetVoltageFiltered@s32_FilterTemporary
  8553  002282  C002  F0E8         	movff	?___lmul+1,ADC_GetVoltageFiltered@s32_FilterTemporary+1
  8554  002286  C003  F0E9         	movff	?___lmul+2,ADC_GetVoltageFiltered@s32_FilterTemporary+2
  8555  00228A  C004  F0EA         	movff	?___lmul+3,ADC_GetVoltageFiltered@s32_FilterTemporary+3
  8556                           
  8557                           ;adc.c: 58: s32_FilterTemporary= (s32_FilterTemporary/1000) + u16_OutputBefore;
  8558  00228E  C0E7  F00D         	movff	ADC_GetVoltageFiltered@s32_FilterTemporary,___aldiv@dividend
  8559  002292  C0E8  F00E         	movff	ADC_GetVoltageFiltered@s32_FilterTemporary+1,___aldiv@dividend+1
  8560  002296  C0E9  F00F         	movff	ADC_GetVoltageFiltered@s32_FilterTemporary+2,___aldiv@dividend+2
  8561  00229A  C0EA  F010         	movff	ADC_GetVoltageFiltered@s32_FilterTemporary+3,___aldiv@dividend+3
  8562  00229E  0EE8               	movlw	232
  8563  0022A0  0100               	movlb	0	; force () banked
  8564  0022A2  6F11               	movwf	___aldiv@divisor& (0+255),b
  8565  0022A4  0E03               	movlw	3
  8566  0022A6  6F12               	movwf	(___aldiv@divisor+1)& (0+255),b
  8567  0022A8  0E00               	movlw	0
  8568  0022AA  6F13               	movwf	(___aldiv@divisor+2)& (0+255),b
  8569  0022AC  0E00               	movlw	0
  8570  0022AE  6F14               	movwf	(___aldiv@divisor+3)& (0+255),b
  8571  0022B0  EC79  F011         	call	___aldiv	;wreg free
  8572  0022B4  0100               	movlb	0	; force () banked
  8573  0022B6  51AF               	movf	ADC_GetVoltageFiltered@u16_OutputBefore& (0+255),w,b
  8574  0022B8  0100               	movlb	0	; force () banked
  8575  0022BA  250D               	addwf	?___aldiv& (0+255),w,b
  8576  0022BC  0100               	movlb	0	; force () banked
  8577  0022BE  6FE7               	movwf	ADC_GetVoltageFiltered@s32_FilterTemporary& (0+255),b
  8578  0022C0  0100               	movlb	0	; force () banked
  8579  0022C2  51B0               	movf	(ADC_GetVoltageFiltered@u16_OutputBefore+1)& (0+255),w,b
  8580  0022C4  0100               	movlb	0	; force () banked
  8581  0022C6  210E               	addwfc	(?___aldiv+1)& (0+255),w,b
  8582  0022C8  0100               	movlb	0	; force () banked
  8583  0022CA  6FE8               	movwf	(ADC_GetVoltageFiltered@s32_FilterTemporary+1)& (0+255),b
  8584  0022CC  0E00               	movlw	0
  8585  0022CE  0100               	movlb	0	; force () banked
  8586  0022D0  210F               	addwfc	(?___aldiv+2)& (0+255),w,b
  8587  0022D2  0100               	movlb	0	; force () banked
  8588  0022D4  6FE9               	movwf	(ADC_GetVoltageFiltered@s32_FilterTemporary+2)& (0+255),b
  8589  0022D6  0E00               	movlw	0
  8590  0022D8  0100               	movlb	0	; force () banked
  8591  0022DA  2110               	addwfc	(?___aldiv+3)& (0+255),w,b
  8592  0022DC  0100               	movlb	0	; force () banked
  8593  0022DE  6FEA               	movwf	(ADC_GetVoltageFiltered@s32_FilterTemporary+3)& (0+255),b
  8594                           
  8595                           ; BSR set to: 0
  8596                           ;adc.c: 59: u16_OutputBefore= (uint16_t) s32_FilterTemporary;
  8597  0022E0  C0E7  F0AF         	movff	ADC_GetVoltageFiltered@s32_FilterTemporary,ADC_GetVoltageFiltered@u16_OutputBefor
      +                          e
  8598  0022E4  C0E8  F0B0         	movff	ADC_GetVoltageFiltered@s32_FilterTemporary+1,ADC_GetVoltageFiltered@u16_OutputBef
      +                          ore+1
  8599                           
  8600                           ; BSR set to: 0
  8601                           ;adc.c: 60: return u16_OutputBefore;
  8602  0022E8  C0AF  F0E3         	movff	ADC_GetVoltageFiltered@u16_OutputBefore,?_ADC_GetVoltageFiltered
  8603  0022EC  C0B0  F0E4         	movff	ADC_GetVoltageFiltered@u16_OutputBefore+1,?_ADC_GetVoltageFiltered+1
  8604  0022F0  0012               	return	
  8605  0022F2                     __end_of_ADC_GetVoltageFiltered:
  8606                           	opt stack 0
  8607                           tblptru	equ	0xFF8
  8608                           tblptrh	equ	0xFF7
  8609                           tblptrl	equ	0xFF6
  8610                           tablat	equ	0xFF5
  8611                           prodh	equ	0xFF4
  8612                           prodl	equ	0xFF3
  8613                           intcon	equ	0xFF2
  8614                           intcon2	equ	0xFF1
  8615                           intcon3	equ	0xFF0
  8616                           postinc0	equ	0xFEE
  8617                           wreg	equ	0xFE8
  8618                           indf2	equ	0xFDF
  8619                           postinc2	equ	0xFDE
  8620                           postdec2	equ	0xFDD
  8621                           fsr2h	equ	0xFDA
  8622                           fsr2l	equ	0xFD9
  8623                           status	equ	0xFD8
  8624                           
  8625 ;; *************** function ___lmul *****************
  8626 ;; Defined at:
  8627 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  8628 ;; Parameters:    Size  Location     Type
  8629 ;;  multiplier      4    0[COMRAM] unsigned long 
  8630 ;;  multiplicand    4    4[COMRAM] unsigned long 
  8631 ;; Auto vars:     Size  Location     Type
  8632 ;;  product         4    8[COMRAM] unsigned long 
  8633 ;; Return value:  Size  Location     Type
  8634 ;;                  4    0[COMRAM] unsigned long 
  8635 ;; Registers used:
  8636 ;;		wreg, status,2, status,0
  8637 ;; Tracked objects:
  8638 ;;		On entry : 0/0
  8639 ;;		On exit  : 0/0
  8640 ;;		Unchanged: 0/0
  8641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8642 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8643 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8645 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8646 ;;Total ram usage:       12 bytes
  8647 ;; Hardware stack levels used:    1
  8648 ;; Hardware stack levels required when called:    2
  8649 ;; This function calls:
  8650 ;;		Nothing
  8651 ;; This function is called by:
  8652 ;;		_ADC_GetVoltageFiltered
  8653 ;;		_ADC_Task
  8654 ;;		_CONTROL_Task
  8655 ;; This function uses a non-reentrant model
  8656 ;;
  8657                           
  8658                           	psect	text47
  8659  0027C2                     __ptext47:
  8660                           	opt stack 0
  8661  0027C2                     ___lmul:
  8662                           	opt stack 27
  8663                           
  8664                           ; BSR set to: 0
  8665                           ;incstack = 0
  8666  0027C2  0E00               	movlw	0
  8667  0027C4  6E09               	movwf	___lmul@product,c
  8668  0027C6  0E00               	movlw	0
  8669  0027C8  6E0A               	movwf	___lmul@product+1,c
  8670  0027CA  0E00               	movlw	0
  8671  0027CC  6E0B               	movwf	___lmul@product+2,c
  8672  0027CE  0E00               	movlw	0
  8673  0027D0  6E0C               	movwf	___lmul@product+3,c
  8674  0027D2  A001               	btfss	___lmul@multiplier,0,c
  8675  0027D4  D008               	goto	l845
  8676  0027D6  5005               	movf	___lmul@multiplicand,w,c
  8677  0027D8  2609               	addwf	___lmul@product,f,c
  8678  0027DA  5006               	movf	___lmul@multiplicand+1,w,c
  8679  0027DC  220A               	addwfc	___lmul@product+1,f,c
  8680  0027DE  5007               	movf	___lmul@multiplicand+2,w,c
  8681  0027E0  220B               	addwfc	___lmul@product+2,f,c
  8682  0027E2  5008               	movf	___lmul@multiplicand+3,w,c
  8683  0027E4  220C               	addwfc	___lmul@product+3,f,c
  8684  0027E6                     l845:
  8685  0027E6  90D8               	bcf	status,0,c
  8686  0027E8  3605               	rlcf	___lmul@multiplicand,f,c
  8687  0027EA  3606               	rlcf	___lmul@multiplicand+1,f,c
  8688  0027EC  3607               	rlcf	___lmul@multiplicand+2,f,c
  8689  0027EE  3608               	rlcf	___lmul@multiplicand+3,f,c
  8690  0027F0  90D8               	bcf	status,0,c
  8691  0027F2  3204               	rrcf	___lmul@multiplier+3,f,c
  8692  0027F4  3203               	rrcf	___lmul@multiplier+2,f,c
  8693  0027F6  3202               	rrcf	___lmul@multiplier+1,f,c
  8694  0027F8  3201               	rrcf	___lmul@multiplier,f,c
  8695  0027FA  5001               	movf	___lmul@multiplier,w,c
  8696  0027FC  1002               	iorwf	___lmul@multiplier+1,w,c
  8697  0027FE  1003               	iorwf	___lmul@multiplier+2,w,c
  8698  002800  1004               	iorwf	___lmul@multiplier+3,w,c
  8699  002802  A4D8               	btfss	status,2,c
  8700  002804  D7E6               	goto	l844
  8701  002806  C009  F001         	movff	___lmul@product,?___lmul
  8702  00280A  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  8703  00280E  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  8704  002812  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  8705  002816  0012               	return		;funcret
  8706  002818                     __end_of___lmul:
  8707                           	opt stack 0
  8708                           tblptru	equ	0xFF8
  8709                           tblptrh	equ	0xFF7
  8710                           tblptrl	equ	0xFF6
  8711                           tablat	equ	0xFF5
  8712                           prodh	equ	0xFF4
  8713                           prodl	equ	0xFF3
  8714                           intcon	equ	0xFF2
  8715                           intcon2	equ	0xFF1
  8716                           intcon3	equ	0xFF0
  8717                           postinc0	equ	0xFEE
  8718                           wreg	equ	0xFE8
  8719                           indf2	equ	0xFDF
  8720                           postinc2	equ	0xFDE
  8721                           postdec2	equ	0xFDD
  8722                           fsr2h	equ	0xFDA
  8723                           fsr2l	equ	0xFD9
  8724                           status	equ	0xFD8
  8725                           
  8726 ;; *************** function ___aldiv *****************
  8727 ;; Defined at:
  8728 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  8729 ;; Parameters:    Size  Location     Type
  8730 ;;  dividend        4   12[COMRAM] long 
  8731 ;;  divisor         4   16[COMRAM] long 
  8732 ;; Auto vars:     Size  Location     Type
  8733 ;;  quotient        4   22[COMRAM] long 
  8734 ;;  sign            1   21[COMRAM] unsigned char 
  8735 ;;  counter         1   20[COMRAM] unsigned char 
  8736 ;; Return value:  Size  Location     Type
  8737 ;;                  4   12[COMRAM] long 
  8738 ;; Registers used:
  8739 ;;		wreg, status,2, status,0
  8740 ;; Tracked objects:
  8741 ;;		On entry : 0/0
  8742 ;;		On exit  : 0/0
  8743 ;;		Unchanged: 0/0
  8744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8745 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8746 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8748 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8749 ;;Total ram usage:       14 bytes
  8750 ;; Hardware stack levels used:    1
  8751 ;; Hardware stack levels required when called:    2
  8752 ;; This function calls:
  8753 ;;		Nothing
  8754 ;; This function is called by:
  8755 ;;		_ADC_GetVoltageFiltered
  8756 ;;		_ADC_Task
  8757 ;;		_CONTROL_Task
  8758 ;; This function uses a non-reentrant model
  8759 ;;
  8760                           
  8761                           	psect	text48
  8762  0022F2                     __ptext48:
  8763                           	opt stack 0
  8764  0022F2                     ___aldiv:
  8765                           	opt stack 27
  8766                           
  8767                           ;incstack = 0
  8768  0022F2  0E00               	movlw	0
  8769  0022F4  6E16               	movwf	___aldiv@sign,c
  8770  0022F6  AE14               	btfss	___aldiv@divisor+3,7,c
  8771  0022F8  D00A               	goto	l888
  8772  0022FA  1E14               	comf	___aldiv@divisor+3,f,c
  8773  0022FC  1E13               	comf	___aldiv@divisor+2,f,c
  8774  0022FE  1E12               	comf	___aldiv@divisor+1,f,c
  8775  002300  6C11               	negf	___aldiv@divisor,c
  8776  002302  0E00               	movlw	0
  8777  002304  2212               	addwfc	___aldiv@divisor+1,f,c
  8778  002306  2213               	addwfc	___aldiv@divisor+2,f,c
  8779  002308  2214               	addwfc	___aldiv@divisor+3,f,c
  8780  00230A  0E01               	movlw	1
  8781  00230C  6E16               	movwf	___aldiv@sign,c
  8782  00230E                     l888:
  8783  00230E  AE10               	btfss	___aldiv@dividend+3,7,c
  8784  002310  D00A               	goto	l889
  8785  002312  1E10               	comf	___aldiv@dividend+3,f,c
  8786  002314  1E0F               	comf	___aldiv@dividend+2,f,c
  8787  002316  1E0E               	comf	___aldiv@dividend+1,f,c
  8788  002318  6C0D               	negf	___aldiv@dividend,c
  8789  00231A  0E00               	movlw	0
  8790  00231C  220E               	addwfc	___aldiv@dividend+1,f,c
  8791  00231E  220F               	addwfc	___aldiv@dividend+2,f,c
  8792  002320  2210               	addwfc	___aldiv@dividend+3,f,c
  8793  002322  0E01               	movlw	1
  8794  002324  1A16               	xorwf	___aldiv@sign,f,c
  8795  002326                     l889:
  8796  002326  0E00               	movlw	0
  8797  002328  6E17               	movwf	___aldiv@quotient,c
  8798  00232A  0E00               	movlw	0
  8799  00232C  6E18               	movwf	___aldiv@quotient+1,c
  8800  00232E  0E00               	movlw	0
  8801  002330  6E19               	movwf	___aldiv@quotient+2,c
  8802  002332  0E00               	movlw	0
  8803  002334  6E1A               	movwf	___aldiv@quotient+3,c
  8804  002336  5011               	movf	___aldiv@divisor,w,c
  8805  002338  1012               	iorwf	___aldiv@divisor+1,w,c
  8806  00233A  1013               	iorwf	___aldiv@divisor+2,w,c
  8807  00233C  1014               	iorwf	___aldiv@divisor+3,w,c
  8808  00233E  B4D8               	btfsc	status,2,c
  8809  002340  D02A               	goto	l896
  8810  002342  0E01               	movlw	1
  8811  002344  6E15               	movwf	___aldiv@counter,c
  8812  002346  D006               	goto	l891
  8813  002348  90D8               	bcf	status,0,c
  8814  00234A  3611               	rlcf	___aldiv@divisor,f,c
  8815  00234C  3612               	rlcf	___aldiv@divisor+1,f,c
  8816  00234E  3613               	rlcf	___aldiv@divisor+2,f,c
  8817  002350  3614               	rlcf	___aldiv@divisor+3,f,c
  8818  002352  2A15               	incf	___aldiv@counter,f,c
  8819  002354                     l891:
  8820  002354  AE14               	btfss	___aldiv@divisor+3,7,c
  8821  002356  D7F8               	goto	l892
  8822  002358                     u4270:
  8823  002358  90D8               	bcf	status,0,c
  8824  00235A  3617               	rlcf	___aldiv@quotient,f,c
  8825  00235C  3618               	rlcf	___aldiv@quotient+1,f,c
  8826  00235E  3619               	rlcf	___aldiv@quotient+2,f,c
  8827  002360  361A               	rlcf	___aldiv@quotient+3,f,c
  8828  002362  5011               	movf	___aldiv@divisor,w,c
  8829  002364  5C0D               	subwf	___aldiv@dividend,w,c
  8830  002366  5012               	movf	___aldiv@divisor+1,w,c
  8831  002368  580E               	subwfb	___aldiv@dividend+1,w,c
  8832  00236A  5013               	movf	___aldiv@divisor+2,w,c
  8833  00236C  580F               	subwfb	___aldiv@dividend+2,w,c
  8834  00236E  5014               	movf	___aldiv@divisor+3,w,c
  8835  002370  5810               	subwfb	___aldiv@dividend+3,w,c
  8836  002372  A0D8               	btfss	status,0,c
  8837  002374  D009               	goto	l895
  8838  002376  5011               	movf	___aldiv@divisor,w,c
  8839  002378  5E0D               	subwf	___aldiv@dividend,f,c
  8840  00237A  5012               	movf	___aldiv@divisor+1,w,c
  8841  00237C  5A0E               	subwfb	___aldiv@dividend+1,f,c
  8842  00237E  5013               	movf	___aldiv@divisor+2,w,c
  8843  002380  5A0F               	subwfb	___aldiv@dividend+2,f,c
  8844  002382  5014               	movf	___aldiv@divisor+3,w,c
  8845  002384  5A10               	subwfb	___aldiv@dividend+3,f,c
  8846  002386  8017               	bsf	___aldiv@quotient,0,c
  8847  002388                     l895:
  8848  002388  90D8               	bcf	status,0,c
  8849  00238A  3214               	rrcf	___aldiv@divisor+3,f,c
  8850  00238C  3213               	rrcf	___aldiv@divisor+2,f,c
  8851  00238E  3212               	rrcf	___aldiv@divisor+1,f,c
  8852  002390  3211               	rrcf	___aldiv@divisor,f,c
  8853  002392  2E15               	decfsz	___aldiv@counter,f,c
  8854  002394  D7E1               	goto	u4270
  8855  002396                     l896:
  8856  002396  5016               	movf	___aldiv@sign,w,c
  8857  002398  B4D8               	btfsc	status,2,c
  8858  00239A  D008               	goto	l897
  8859  00239C  1E1A               	comf	___aldiv@quotient+3,f,c
  8860  00239E  1E19               	comf	___aldiv@quotient+2,f,c
  8861  0023A0  1E18               	comf	___aldiv@quotient+1,f,c
  8862  0023A2  6C17               	negf	___aldiv@quotient,c
  8863  0023A4  0E00               	movlw	0
  8864  0023A6  2218               	addwfc	___aldiv@quotient+1,f,c
  8865  0023A8  2219               	addwfc	___aldiv@quotient+2,f,c
  8866  0023AA  221A               	addwfc	___aldiv@quotient+3,f,c
  8867  0023AC                     l897:
  8868  0023AC  C017  F00D         	movff	___aldiv@quotient,?___aldiv
  8869  0023B0  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
  8870  0023B4  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
  8871  0023B8  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
  8872  0023BC  0012               	return	
  8873  0023BE                     __end_of___aldiv:
  8874                           	opt stack 0
  8875                           tblptru	equ	0xFF8
  8876                           tblptrh	equ	0xFF7
  8877                           tblptrl	equ	0xFF6
  8878                           tablat	equ	0xFF5
  8879                           prodh	equ	0xFF4
  8880                           prodl	equ	0xFF3
  8881                           intcon	equ	0xFF2
  8882                           intcon2	equ	0xFF1
  8883                           intcon3	equ	0xFF0
  8884                           postinc0	equ	0xFEE
  8885                           wreg	equ	0xFE8
  8886                           indf2	equ	0xFDF
  8887                           postinc2	equ	0xFDE
  8888                           postdec2	equ	0xFDD
  8889                           fsr2h	equ	0xFDA
  8890                           fsr2l	equ	0xFD9
  8891                           status	equ	0xFD8
  8892                           
  8893 ;; *************** function _ADC_Init *****************
  8894 ;; Defined at:
  8895 ;;		line 25 in file "hal/adc.c"
  8896 ;; Parameters:    Size  Location     Type
  8897 ;;		None
  8898 ;; Auto vars:     Size  Location     Type
  8899 ;;		None
  8900 ;; Return value:  Size  Location     Type
  8901 ;;                  1    wreg      void 
  8902 ;; Registers used:
  8903 ;;		wreg, status,2
  8904 ;; Tracked objects:
  8905 ;;		On entry : 0/0
  8906 ;;		On exit  : 0/0
  8907 ;;		Unchanged: 0/0
  8908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8913 ;;Total ram usage:        0 bytes
  8914 ;; Hardware stack levels used:    1
  8915 ;; Hardware stack levels required when called:    2
  8916 ;; This function calls:
  8917 ;;		Nothing
  8918 ;; This function is called by:
  8919 ;;		_main
  8920 ;; This function uses a non-reentrant model
  8921 ;;
  8922                           
  8923                           	psect	text49
  8924  002BA4                     __ptext49:
  8925                           	opt stack 0
  8926  002BA4                     _ADC_Init:
  8927                           	opt stack 28
  8928                           
  8929                           ;adc.c: 27: ADCON0= 0;
  8930                           
  8931                           ;incstack = 0
  8932  002BA4  0E00               	movlw	0
  8933  002BA6  6EC2               	movwf	4034,c	;volatile
  8934                           
  8935                           ;adc.c: 28: ADCON1= 0x07;
  8936  002BA8  0E07               	movlw	7
  8937  002BAA  6EC1               	movwf	4033,c	;volatile
  8938                           
  8939                           ;adc.c: 29: ADCON2= 0;
  8940  002BAC  0E00               	movlw	0
  8941  002BAE  6EC0               	movwf	4032,c	;volatile
  8942                           
  8943                           ;adc.c: 31: ADCON0= 1 | 4;
  8944  002BB0  0E05               	movlw	5
  8945  002BB2  6EC2               	movwf	4034,c	;volatile
  8946                           
  8947                           ;adc.c: 33: ADCON2= 128 | 0 | 7;
  8948  002BB4  0E87               	movlw	135
  8949  002BB6  6EC0               	movwf	4032,c	;volatile
  8950                           
  8951                           ;adc.c: 35: LATDbits.LD7= 1;
  8952  002BB8  8E8C               	bsf	3980,7,c	;volatile
  8953                           
  8954                           ;adc.c: 36: ADCON0= 4 | 1;
  8955  002BBA  0E05               	movlw	5
  8956  002BBC  6EC2               	movwf	4034,c	;volatile
  8957                           
  8958                           ;adc.c: 37: ADCON0bits.GO= 1;
  8959  002BBE  82C2               	bsf	4034,1,c	;volatile
  8960  002BC0  0012               	return		;funcret
  8961  002BC2                     __end_of_ADC_Init:
  8962                           	opt stack 0
  8963                           tblptru	equ	0xFF8
  8964                           tblptrh	equ	0xFF7
  8965                           tblptrl	equ	0xFF6
  8966                           tablat	equ	0xFF5
  8967                           prodh	equ	0xFF4
  8968                           prodl	equ	0xFF3
  8969                           intcon	equ	0xFF2
  8970                           intcon2	equ	0xFF1
  8971                           intcon3	equ	0xFF0
  8972                           postinc0	equ	0xFEE
  8973                           wreg	equ	0xFE8
  8974                           indf2	equ	0xFDF
  8975                           postinc2	equ	0xFDE
  8976                           postdec2	equ	0xFDD
  8977                           fsr2h	equ	0xFDA
  8978                           fsr2l	equ	0xFD9
  8979                           status	equ	0xFD8
  8980                           
  8981 ;; *************** function _ISR *****************
  8982 ;; Defined at:
  8983 ;;		line 84 in file "main.c"
  8984 ;; Parameters:    Size  Location     Type
  8985 ;;		None
  8986 ;; Auto vars:     Size  Location     Type
  8987 ;;		None
  8988 ;; Return value:  Size  Location     Type
  8989 ;;                  1    wreg      void 
  8990 ;; Registers used:
  8991 ;;		wreg, status,2, status,0, cstack
  8992 ;; Tracked objects:
  8993 ;;		On entry : 0/0
  8994 ;;		On exit  : 0/0
  8995 ;;		Unchanged: 0/0
  8996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8999 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9000 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9001 ;;Total ram usage:       18 bytes
  9002 ;; Hardware stack levels used:    1
  9003 ;; Hardware stack levels required when called:    1
  9004 ;; This function calls:
  9005 ;;		_PWM_SetSyncTrigger
  9006 ;;		_TIMER_IncrementSysTick
  9007 ;;		_TIMER_SetSysTickFlag
  9008 ;; This function is called by:
  9009 ;;		Interrupt level 2
  9010 ;; This function uses a non-reentrant model
  9011 ;;
  9012                           
  9013                           	psect	intcode
  9014  000008                     __pintcode:
  9015                           	opt stack 0
  9016  000008                     _ISR:
  9017                           	opt stack 25
  9018                           
  9019                           ;incstack = 0
  9020  000008  8228               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9021  00000A  EDDF  F011         	call	int_func,f	;refresh shadow registers
  9022                           tblptru	equ	0xFF8
  9023                           tblptrh	equ	0xFF7
  9024                           tblptrl	equ	0xFF6
  9025                           tablat	equ	0xFF5
  9026                           prodh	equ	0xFF4
  9027                           prodl	equ	0xFF3
  9028                           intcon	equ	0xFF2
  9029                           intcon2	equ	0xFF1
  9030                           intcon3	equ	0xFF0
  9031                           postinc0	equ	0xFEE
  9032                           wreg	equ	0xFE8
  9033                           indf2	equ	0xFDF
  9034                           postinc2	equ	0xFDE
  9035                           postdec2	equ	0xFDD
  9036                           fsr2h	equ	0xFDA
  9037                           fsr2l	equ	0xFD9
  9038                           status	equ	0xFD8
  9039                           
  9040                           	psect	intcode_body
  9041  0023BE                     __pintcode_body:
  9042                           	opt stack 25
  9043  0023BE                     int_func:
  9044                           	opt stack 25
  9045  0023BE  0006               	pop		; remove dummy address from shadow register refresh
  9046  0023C0  CFFA F0D1          	movff	pclath,??_ISR
  9047  0023C4  CFFB F0D2          	movff	pclatu,??_ISR+1
  9048  0023C8  CFE9 F0D3          	movff	fsr0l,??_ISR+2
  9049  0023CC  CFEA F0D4          	movff	fsr0h,??_ISR+3
  9050  0023D0  CFE1 F0D5          	movff	fsr1l,??_ISR+4
  9051  0023D4  CFE2 F0D6          	movff	fsr1h,??_ISR+5
  9052  0023D8  CFD9 F0D7          	movff	fsr2l,??_ISR+6
  9053  0023DC  CFDA F0D8          	movff	fsr2h,??_ISR+7
  9054  0023E0  CFF3 F0D9          	movff	prodl,??_ISR+8
  9055  0023E4  CFF4 F0DA          	movff	prodh,??_ISR+9
  9056  0023E8  CFF6 F0DB          	movff	tblptrl,??_ISR+10
  9057  0023EC  CFF7 F0DC          	movff	tblptrh,??_ISR+11
  9058  0023F0  CFF8 F0DD          	movff	tblptru,??_ISR+12
  9059  0023F4  CFF5 F0DE          	movff	tablat,??_ISR+13
  9060  0023F8  C028  F0DF         	movff	btemp,??_ISR+14
  9061  0023FC  C029  F0E0         	movff	btemp+1,??_ISR+15
  9062  002400  C02A  F0E1         	movff	btemp+2,??_ISR+16
  9063  002404  C02B  F0E2         	movff	btemp+3,??_ISR+17
  9064                           
  9065                           ;main.c: 87: if(PIR1bits.TMR2IF == 1)
  9066  002408  A29E               	btfss	3998,1,c	;volatile
  9067  00240A  D005               	goto	i2l73
  9068                           
  9069                           ;main.c: 88: {
  9070                           ;main.c: 89: PIR1bits.TMR2IF = 0;
  9071  00240C  929E               	bcf	3998,1,c	;volatile
  9072                           
  9073                           ;main.c: 90: TIMER_IncrementSysTick();
  9074  00240E  EC14  F016         	call	_TIMER_IncrementSysTick	;wreg free
  9075                           
  9076                           ;main.c: 91: TIMER_SetSysTickFlag();
  9077  002412  EC2E  F016         	call	_TIMER_SetSysTickFlag	;wreg free
  9078  002416                     i2l73:
  9079                           
  9080                           ;main.c: 92: }
  9081                           ;main.c: 95: if(INTCON3bits.INT1F == 1)
  9082  002416  A0F0               	btfss	intcon3,0,c	;volatile
  9083  002418  D004               	goto	i2l74
  9084                           
  9085                           ;main.c: 96: {
  9086                           ;main.c: 97: INTCON3bits.INT1F= 0;
  9087  00241A  90F0               	bcf	intcon3,0,c	;volatile
  9088                           
  9089                           ;main.c: 98: PWM_SetSyncTrigger();
  9090  00241C  EC32  F016         	call	_PWM_SetSyncTrigger	;wreg free
  9091                           
  9092                           ;main.c: 100: LATAbits.LA6= 1;
  9093  002420  8C89               	bsf	3977,6,c	;volatile
  9094  002422                     i2l74:
  9095  002422  C0E2  F02B         	movff	??_ISR+17,btemp+3
  9096  002426  C0E1  F02A         	movff	??_ISR+16,btemp+2
  9097  00242A  C0E0  F029         	movff	??_ISR+15,btemp+1
  9098  00242E  C0DF  F028         	movff	??_ISR+14,btemp
  9099  002432  C0DE  FFF5         	movff	??_ISR+13,tablat
  9100  002436  C0DD  FFF8         	movff	??_ISR+12,tblptru
  9101  00243A  C0DC  FFF7         	movff	??_ISR+11,tblptrh
  9102  00243E  C0DB  FFF6         	movff	??_ISR+10,tblptrl
  9103  002442  C0DA  FFF4         	movff	??_ISR+9,prodh
  9104  002446  C0D9  FFF3         	movff	??_ISR+8,prodl
  9105  00244A  C0D8  FFDA         	movff	??_ISR+7,fsr2h
  9106  00244E  C0D7  FFD9         	movff	??_ISR+6,fsr2l
  9107  002452  C0D6  FFE2         	movff	??_ISR+5,fsr1h
  9108  002456  C0D5  FFE1         	movff	??_ISR+4,fsr1l
  9109  00245A  C0D4  FFEA         	movff	??_ISR+3,fsr0h
  9110  00245E  C0D3  FFE9         	movff	??_ISR+2,fsr0l
  9111  002462  C0D2  FFFB         	movff	??_ISR+1,pclatu
  9112  002466  C0D1  FFFA         	movff	??_ISR,pclath
  9113  00246A  9228               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9114  00246C  0011               	retfie		f
  9115  00246E                     __end_of_ISR:
  9116                           	opt stack 0
  9117                           pclatu	equ	0xFFB
  9118                           pclath	equ	0xFFA
  9119                           tblptru	equ	0xFF8
  9120                           tblptrh	equ	0xFF7
  9121                           tblptrl	equ	0xFF6
  9122                           tablat	equ	0xFF5
  9123                           prodh	equ	0xFF4
  9124                           prodl	equ	0xFF3
  9125                           intcon	equ	0xFF2
  9126                           intcon2	equ	0xFF1
  9127                           intcon3	equ	0xFF0
  9128                           postinc0	equ	0xFEE
  9129                           fsr0h	equ	0xFEA
  9130                           fsr0l	equ	0xFE9
  9131                           wreg	equ	0xFE8
  9132                           fsr1h	equ	0xFE2
  9133                           fsr1l	equ	0xFE1
  9134                           indf2	equ	0xFDF
  9135                           postinc2	equ	0xFDE
  9136                           postdec2	equ	0xFDD
  9137                           fsr2h	equ	0xFDA
  9138                           fsr2l	equ	0xFD9
  9139                           status	equ	0xFD8
  9140                           
  9141 ;; *************** function _TIMER_SetSysTickFlag *****************
  9142 ;; Defined at:
  9143 ;;		line 57 in file "hal/timer.c"
  9144 ;; Parameters:    Size  Location     Type
  9145 ;;		None
  9146 ;; Auto vars:     Size  Location     Type
  9147 ;;		None
  9148 ;; Return value:  Size  Location     Type
  9149 ;;                  1    wreg      void 
  9150 ;; Registers used:
  9151 ;;		wreg, status,2
  9152 ;; Tracked objects:
  9153 ;;		On entry : 0/0
  9154 ;;		On exit  : 0/0
  9155 ;;		Unchanged: 0/0
  9156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9161 ;;Total ram usage:        0 bytes
  9162 ;; Hardware stack levels used:    1
  9163 ;; This function calls:
  9164 ;;		Nothing
  9165 ;; This function is called by:
  9166 ;;		_ISR
  9167 ;; This function uses a non-reentrant model
  9168 ;;
  9169                           
  9170                           	psect	text51
  9171  002C5C                     __ptext51:
  9172                           	opt stack 0
  9173  002C5C                     _TIMER_SetSysTickFlag:
  9174                           	opt stack 25
  9175                           
  9176                           ;timer.c: 59: bFlag_SysTick= 1;
  9177                           
  9178                           ;incstack = 0
  9179  002C5C  0E01               	movlw	1
  9180  002C5E  0100               	movlb	0	; force () banked
  9181  002C60  6FBD               	movwf	_bFlag_SysTick& (0+255),b
  9182                           
  9183                           ; BSR set to: 0
  9184  002C62  0012               	return		;funcret
  9185  002C64                     __end_of_TIMER_SetSysTickFlag:
  9186                           	opt stack 0
  9187                           pclatu	equ	0xFFB
  9188                           pclath	equ	0xFFA
  9189                           tblptru	equ	0xFF8
  9190                           tblptrh	equ	0xFF7
  9191                           tblptrl	equ	0xFF6
  9192                           tablat	equ	0xFF5
  9193                           prodh	equ	0xFF4
  9194                           prodl	equ	0xFF3
  9195                           intcon	equ	0xFF2
  9196                           intcon2	equ	0xFF1
  9197                           intcon3	equ	0xFF0
  9198                           postinc0	equ	0xFEE
  9199                           fsr0h	equ	0xFEA
  9200                           fsr0l	equ	0xFE9
  9201                           wreg	equ	0xFE8
  9202                           fsr1h	equ	0xFE2
  9203                           fsr1l	equ	0xFE1
  9204                           indf2	equ	0xFDF
  9205                           postinc2	equ	0xFDE
  9206                           postdec2	equ	0xFDD
  9207                           fsr2h	equ	0xFDA
  9208                           fsr2l	equ	0xFD9
  9209                           status	equ	0xFD8
  9210                           
  9211 ;; *************** function _TIMER_IncrementSysTick *****************
  9212 ;; Defined at:
  9213 ;;		line 46 in file "hal/timer.c"
  9214 ;; Parameters:    Size  Location     Type
  9215 ;;		None
  9216 ;; Auto vars:     Size  Location     Type
  9217 ;;		None
  9218 ;; Return value:  Size  Location     Type
  9219 ;;                  1    wreg      void 
  9220 ;; Registers used:
  9221 ;;		wreg, status,2, status,0
  9222 ;; Tracked objects:
  9223 ;;		On entry : 0/0
  9224 ;;		On exit  : 0/0
  9225 ;;		Unchanged: 0/0
  9226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9231 ;;Total ram usage:        0 bytes
  9232 ;; Hardware stack levels used:    1
  9233 ;; This function calls:
  9234 ;;		Nothing
  9235 ;; This function is called by:
  9236 ;;		_ISR
  9237 ;; This function uses a non-reentrant model
  9238 ;;
  9239                           
  9240                           	psect	text52
  9241  002C28                     __ptext52:
  9242                           	opt stack 0
  9243  002C28                     _TIMER_IncrementSysTick:
  9244                           	opt stack 25
  9245                           
  9246                           ;timer.c: 48: ++u32_SysTickCounter;
  9247                           
  9248                           ; BSR set to: 0
  9249                           ;incstack = 0
  9250  002C28  0E01               	movlw	1
  9251  002C2A  0101               	movlb	1	; force () banked
  9252  002C2C  2757               	addwf	_u32_SysTickCounter& (0+255),f,b
  9253  002C2E  0E00               	movlw	0
  9254  002C30  2358               	addwfc	(_u32_SysTickCounter+1)& (0+255),f,b
  9255  002C32  2359               	addwfc	(_u32_SysTickCounter+2)& (0+255),f,b
  9256  002C34  235A               	addwfc	(_u32_SysTickCounter+3)& (0+255),f,b
  9257                           
  9258                           ; BSR set to: 1
  9259  002C36  0012               	return		;funcret
  9260  002C38                     __end_of_TIMER_IncrementSysTick:
  9261                           	opt stack 0
  9262                           pclatu	equ	0xFFB
  9263                           pclath	equ	0xFFA
  9264                           tblptru	equ	0xFF8
  9265                           tblptrh	equ	0xFF7
  9266                           tblptrl	equ	0xFF6
  9267                           tablat	equ	0xFF5
  9268                           prodh	equ	0xFF4
  9269                           prodl	equ	0xFF3
  9270                           intcon	equ	0xFF2
  9271                           intcon2	equ	0xFF1
  9272                           intcon3	equ	0xFF0
  9273                           postinc0	equ	0xFEE
  9274                           fsr0h	equ	0xFEA
  9275                           fsr0l	equ	0xFE9
  9276                           wreg	equ	0xFE8
  9277                           fsr1h	equ	0xFE2
  9278                           fsr1l	equ	0xFE1
  9279                           indf2	equ	0xFDF
  9280                           postinc2	equ	0xFDE
  9281                           postdec2	equ	0xFDD
  9282                           fsr2h	equ	0xFDA
  9283                           fsr2l	equ	0xFD9
  9284                           status	equ	0xFD8
  9285                           
  9286 ;; *************** function _PWM_SetSyncTrigger *****************
  9287 ;; Defined at:
  9288 ;;		line 74 in file "hal/pwm.c"
  9289 ;; Parameters:    Size  Location     Type
  9290 ;;		None
  9291 ;; Auto vars:     Size  Location     Type
  9292 ;;		None
  9293 ;; Return value:  Size  Location     Type
  9294 ;;                  1    wreg      void 
  9295 ;; Registers used:
  9296 ;;		wreg, status,2
  9297 ;; Tracked objects:
  9298 ;;		On entry : 0/0
  9299 ;;		On exit  : 0/0
  9300 ;;		Unchanged: 0/0
  9301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9306 ;;Total ram usage:        0 bytes
  9307 ;; Hardware stack levels used:    1
  9308 ;; This function calls:
  9309 ;;		Nothing
  9310 ;; This function is called by:
  9311 ;;		_ISR
  9312 ;; This function uses a non-reentrant model
  9313 ;;
  9314                           
  9315                           	psect	text53
  9316  002C64                     __ptext53:
  9317                           	opt stack 0
  9318  002C64                     _PWM_SetSyncTrigger:
  9319                           	opt stack 25
  9320                           
  9321                           ;pwm.c: 76: bFlag_SyncTrigger= 1;
  9322                           
  9323                           ; BSR set to: 1
  9324                           ;incstack = 0
  9325  002C64  0E01               	movlw	1
  9326  002C66  0100               	movlb	0	; force () banked
  9327  002C68  6FB8               	movwf	_bFlag_SyncTrigger& (0+255),b
  9328                           
  9329                           ; BSR set to: 0
  9330  002C6A  0012               	return		;funcret
  9331  002C6C                     __end_of_PWM_SetSyncTrigger:
  9332                           	opt stack 0
  9333                           pclatu	equ	0xFFB
  9334                           pclath	equ	0xFFA
  9335                           tblptru	equ	0xFF8
  9336                           tblptrh	equ	0xFF7
  9337                           tblptrl	equ	0xFF6
  9338                           tablat	equ	0xFF5
  9339                           prodh	equ	0xFF4
  9340                           prodl	equ	0xFF3
  9341                           intcon	equ	0xFF2
  9342                           intcon2	equ	0xFF1
  9343                           intcon3	equ	0xFF0
  9344                           postinc0	equ	0xFEE
  9345                           fsr0h	equ	0xFEA
  9346                           fsr0l	equ	0xFE9
  9347                           wreg	equ	0xFE8
  9348                           fsr1h	equ	0xFE2
  9349                           fsr1l	equ	0xFE1
  9350                           indf2	equ	0xFDF
  9351                           postinc2	equ	0xFDE
  9352                           postdec2	equ	0xFDD
  9353                           fsr2h	equ	0xFDA
  9354                           fsr2l	equ	0xFD9
  9355                           status	equ	0xFD8
  9356                           pclatu	equ	0xFFB
  9357                           pclath	equ	0xFFA
  9358                           tblptru	equ	0xFF8
  9359                           tblptrh	equ	0xFF7
  9360                           tblptrl	equ	0xFF6
  9361                           tablat	equ	0xFF5
  9362                           prodh	equ	0xFF4
  9363                           prodl	equ	0xFF3
  9364                           intcon	equ	0xFF2
  9365                           intcon2	equ	0xFF1
  9366                           intcon3	equ	0xFF0
  9367                           postinc0	equ	0xFEE
  9368                           fsr0h	equ	0xFEA
  9369                           fsr0l	equ	0xFE9
  9370                           wreg	equ	0xFE8
  9371                           fsr1h	equ	0xFE2
  9372                           fsr1l	equ	0xFE1
  9373                           indf2	equ	0xFDF
  9374                           postinc2	equ	0xFDE
  9375                           postdec2	equ	0xFDD
  9376                           fsr2h	equ	0xFDA
  9377                           fsr2l	equ	0xFD9
  9378                           status	equ	0xFD8
  9379                           
  9380                           	psect	param0
  9381  0000                     pclatu	equ	0xFFB
  9382                           pclath	equ	0xFFA
  9383                           tblptru	equ	0xFF8
  9384                           tblptrh	equ	0xFF7
  9385                           tblptrl	equ	0xFF6
  9386                           tablat	equ	0xFF5
  9387                           prodh	equ	0xFF4
  9388                           prodl	equ	0xFF3
  9389                           intcon	equ	0xFF2
  9390                           intcon2	equ	0xFF1
  9391                           intcon3	equ	0xFF0
  9392                           postinc0	equ	0xFEE
  9393                           fsr0h	equ	0xFEA
  9394                           fsr0l	equ	0xFE9
  9395                           wreg	equ	0xFE8
  9396                           fsr1h	equ	0xFE2
  9397                           fsr1l	equ	0xFE1
  9398                           indf2	equ	0xFDF
  9399                           postinc2	equ	0xFDE
  9400                           postdec2	equ	0xFDD
  9401                           fsr2h	equ	0xFDA
  9402                           fsr2l	equ	0xFD9
  9403                           status	equ	0xFD8
  9404                           
  9405                           	psect	temp
  9406  000028                     btemp:
  9407                           	opt stack 0
  9408  000028                     	ds	1
  9409  0000                     int$flags	set	btemp
  9410  0000                     wtemp6	set	btemp+1
  9411                           pclatu	equ	0xFFB
  9412                           pclath	equ	0xFFA
  9413                           tblptru	equ	0xFF8
  9414                           tblptrh	equ	0xFF7
  9415                           tblptrl	equ	0xFF6
  9416                           tablat	equ	0xFF5
  9417                           prodh	equ	0xFF4
  9418                           prodl	equ	0xFF3
  9419                           intcon	equ	0xFF2
  9420                           intcon2	equ	0xFF1
  9421                           intcon3	equ	0xFF0
  9422                           postinc0	equ	0xFEE
  9423                           fsr0h	equ	0xFEA
  9424                           fsr0l	equ	0xFE9
  9425                           wreg	equ	0xFE8
  9426                           fsr1h	equ	0xFE2
  9427                           fsr1l	equ	0xFE1
  9428                           indf2	equ	0xFDF
  9429                           postinc2	equ	0xFDE
  9430                           postdec2	equ	0xFDD
  9431                           fsr2h	equ	0xFDA
  9432                           fsr2l	equ	0xFD9
  9433                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    18
    Data        0
    BSS         176
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     39      39
    BANK0           128     29     110
    BANK1           256     20     115
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15          128      0       0

Pointer List with Targets:

    LCD_Dec2Bcd@ptrBCD	PTR unsigned char  size(2) Largest target is 3
		 -> LCD_SetPresetDigits@u8_TempArray(BANK1[3]), LCD_SetMainDigits@u8_TempArray(BANK1[3]), 

    BUTTONS_GetState@t_Buttons	PTR struct . size(2) Largest target is 5
		 -> t_Buttons(BANK0[5]), 


Critical Paths under _main in COMRAM

    _LCD_Dec2Bcd->___lwmod
    ___lwmod->___lwdiv
    _ADC_Task->___lldiv
    _ADC_GetVoltageFiltered->___aldiv
    ___aldiv->___lmul

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_LCD_Init
    _main->_LCD_Task
    _USER_Task->_LCD_SetPresetDigits
    _USER_TemperatureFilter->_ADC_GetTemperature
    _LCD_SetMainDigits->_LCD_Dec2Bcd
    _LCD_SetMainDigits->_LCD_SetData
    _USER_Init->_LCD_SetPresetDigits
    _LCD_SetPresetDigits->_LCD_Dec2Bcd
    _LCD_SetPresetDigits->_LCD_SetData
    _LCD_SetIcons->_LCD_SetData
    _LCD_Clear->_LCD_SetData
    _LCD_Task->_I2C_Start
    _LCD_Init->_I2C_Start
    _I2C_Start->_TIMER_GetSysTick
    _ADC_Task->_ADC_GetVoltageFiltered
    ___lldiv->_ADC_GetVoltageFiltered

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ADC_Task
    _USER_Task->_LCD_SetMainDigits
    _USER_Task->_LCD_SetPresetDigits
    _USER_Init->_LCD_SetPresetDigits

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     1      5   49382
                                             14 BANK1      6     1      5
                           _ADC_Init
                           _ADC_Task
                       _BUTTONS_Task
                          _GPIO_Init
                           _I2C_Init
                           _LCD_Init
                           _LCD_Task
                         _LCD_Update
                           _NVM_Init
                           _NVM_Task
                           _PWM_Task
            _SYSTEM_EnableInterrupts
                        _SYSTEM_Init
               _TIMER_GetSysTickFlag
                         _TIMER_Init
             _TIMER_ResetSysTickFlag
                          _USER_Init
                          _USER_Task
 ---------------------------------------------------------------------------------
 (1) _USER_Task                                            2     2      0   24322
                                              3 BANK1      2     2      0
                   _ADC_GetVoltageMV
                   _BUTTONS_GetState
                          _LCD_Clear
                       _LCD_SetIcons
                  _LCD_SetMainDigits
                _LCD_SetPresetDigits
                           _NVM_Read
                          _NVM_Write
                   _PWM_SetDutyCycle
             _USER_DecrementSetpoint
         _USER_FastDecrementSetpoint
         _USER_FastIncrementSetpoint
             _USER_IncrementSetpoint
             _USER_TemperatureFilter
 ---------------------------------------------------------------------------------
 (2) _USER_TemperatureFilter                               4     2      2      40
                                             20 BANK0      4     2      2
                 _ADC_GetTemperature
 ---------------------------------------------------------------------------------
 (3) _ADC_GetTemperature                                   2     0      2       0
                                             18 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _USER_IncrementSetpoint                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USER_FastIncrementSetpoint                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USER_FastDecrementSetpoint                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USER_DecrementSetpoint                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_SetDutyCycle                                     2     0      2     335
                                             18 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _NVM_Write                                            5     3      2     453
                                             18 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _LCD_SetMainDigits                                    8     5      3    7384
                                             22 BANK0      5     2      3
                                              0 BANK1      3     3      0
                    _LCD_Bcd2Segment
                        _LCD_Dec2Bcd
                        _LCD_SetData
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_GetState                                     2     0      2     245
                                             18 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_GetVoltageMV                                     2     0      2       0
                                             18 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _USER_Init                                            4     4      0   16063
                                              3 BANK1      4     4      0
                          _LCD_Clear
                       _LCD_SetIcons
                _LCD_SetPresetDigits
                         _LCD_Update
                           _NVM_Read
 ---------------------------------------------------------------------------------
 (2) _NVM_Read                                             4     2      2     797
                                             18 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _LCD_Update                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_SetPresetDigits                                  9     5      4    8971
                                             22 BANK0      6     2      4
                                              0 BANK1      3     3      0
                    _LCD_Bcd2Segment
                        _LCD_Dec2Bcd
                        _LCD_SetData
 ---------------------------------------------------------------------------------
 (3) _LCD_Dec2Bcd                                          4     0      4    1779
                                             18 BANK0      4     0      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     592
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     601
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Bcd2Segment                                      2     1      1    1303
                                             18 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _LCD_SetIcons                                         2     2      0    3047
                                             22 BANK0      2     2      0
                        _LCD_GetData
                        _LCD_SetData
 ---------------------------------------------------------------------------------
 (3) _LCD_GetData                                          3     3      0      62
                                             18 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            1     1      0    2982
                                             22 BANK0      1     1      0
                        _LCD_SetData
 ---------------------------------------------------------------------------------
 (1) _TIMER_ResetSysTickFlag                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TIMER_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TIMER_GetSysTickFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Task                                             5     5      0       0
                                             18 BANK0      5     5      0
               _PWM_ResetSyncTrigger
 ---------------------------------------------------------------------------------
 (2) _PWM_ResetSyncTrigger                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _NVM_Task                                             2     2      0       0
                                             18 BANK0      2     2      0
           _SYSTEM_DisableInterrupts
            _SYSTEM_EnableInterrupts
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_EnableInterrupts                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_DisableInterrupts                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _NVM_Init                                             2     2      0     102
                                             18 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Task                                             2     2      0     130
                                             27 BANK0      2     2      0
                       _I2C_SendData
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    3211
                                             27 BANK0      2     2      0
                       _I2C_SendData
                          _I2C_Start
                           _I2C_Stop
                        _LCD_SetData
 ---------------------------------------------------------------------------------
 (3) _LCD_SetData                                          4     3      1    2883
                                             18 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            5     5      0      99
                                             22 BANK0      5     5      0
                   _TIMER_GetSysTick
 ---------------------------------------------------------------------------------
 (3) _TIMER_GetSysTick                                     4     0      4       0
                                             18 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _I2C_SendData                                         2     2      0      31
                                             18 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_Task                                         1     1      0     192
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Task                                            14    14      0    5322
                                              0 BANK1     14    14      0
             _ADC_GetVoltageFiltered
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     601
                                             26 COMRAM    13     5      8
             _ADC_GetVoltageFiltered (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_GetVoltageFiltered                               8     6      2    2353
                                             18 BANK0      8     6      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1176
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     985
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 18    18      0       0
                                              0 BANK0     18    18      0
                 _PWM_SetSyncTrigger
             _TIMER_IncrementSysTick
               _TIMER_SetSysTickFlag
 ---------------------------------------------------------------------------------
 (6) _TIMER_SetSysTickFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TIMER_IncrementSysTick                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PWM_SetSyncTrigger                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Task
     _ADC_GetVoltageFiltered
       ___aldiv
         ___lmul (ARG)
       ___lmul
     ___aldiv
       ___lmul (ARG)
     ___lldiv
       _ADC_GetVoltageFiltered (ARG)
         ___aldiv
           ___lmul (ARG)
         ___lmul
       ___lmul (ARG)
     ___lmul
   _BUTTONS_Task
   _GPIO_Init
   _I2C_Init
   _LCD_Init
     _I2C_SendData
     _I2C_Start
       _TIMER_GetSysTick
     _I2C_Stop
     _LCD_SetData
   _LCD_Task
     _I2C_SendData
     _I2C_Start
       _TIMER_GetSysTick
     _I2C_Stop
   _LCD_Update
   _NVM_Init
   _NVM_Task
     _SYSTEM_DisableInterrupts
     _SYSTEM_EnableInterrupts
   _PWM_Task
     _PWM_ResetSyncTrigger
   _SYSTEM_EnableInterrupts
   _SYSTEM_Init
   _TIMER_GetSysTickFlag
   _TIMER_Init
   _TIMER_ResetSysTickFlag
   _USER_Init
     _LCD_Clear
       _LCD_SetData
     _LCD_SetIcons
       _LCD_GetData
       _LCD_SetData
     _LCD_SetPresetDigits
       _LCD_Bcd2Segment
       _LCD_Dec2Bcd
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _LCD_SetData
     _LCD_Update
     _NVM_Read
   _USER_Task
     _ADC_GetVoltageMV
     _BUTTONS_GetState
     _LCD_Clear
       _LCD_SetData
     _LCD_SetIcons
       _LCD_GetData
       _LCD_SetData
     _LCD_SetMainDigits
       _LCD_Bcd2Segment
       _LCD_Dec2Bcd
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _LCD_SetData
     _LCD_SetPresetDigits
       _LCD_Bcd2Segment
       _LCD_Dec2Bcd
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _LCD_SetData
     _NVM_Read
     _NVM_Write
     _PWM_SetDutyCycle
     _USER_DecrementSetpoint
     _USER_FastDecrementSetpoint
     _USER_FastIncrementSetpoint
     _USER_IncrementSetpoint
     _USER_TemperatureFilter
       _ADC_GetTemperature

 _ISR (ROOT)
   _PWM_SetSyncTrigger
   _TIMER_IncrementSysTick
   _TIMER_SetSysTickFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     14      73       8       44.9%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     1D      6E       5       85.9%
BIGRAM_1            80      0       0      37        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     27      27       1       31.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     108       6        0.0%
DATA                 0      0     108       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Jul 08 11:11:54 2018

                   __end_of_TIMER_ResetSysTickFlag 2C54                                       ?_LCD_GetData 0001  
                           _s16_TemperatureCelcius 0093                                    LCD_Init@u8_Temp 00ED  
                               __size_of_I2C_Start 0084                                                 l63 272C  
                                               l64 274A                                                 l65 2760  
                                      ?_LCD_Update 0001                                        __CFG_BORV$3 000000  
                                     __CFG_CP0$OFF 000000                                       __CFG_CP1$OFF 000000  
                                     __CFG_CP2$OFF 000000          ADC_GetVoltageFiltered@s32_FilterTemporary 00E7  
                                     __CFG_CP3$OFF 000000                                       ?_LCD_SetData 00E3  
                                              l211 149C                                                l220 1584  
                          ?_TIMER_IncrementSysTick 0001                                                l117 1870  
                                              l205 1502                                                l213 14CE  
                                              l118 1888                                                l222 158A  
                                              l223 15C6                                                l207 1434  
                                              l225 15D6                                                l217 1540  
                                              l209 1466                                                l226 1614  
                                              l330 1B40                                                l322 1AC6  
                                              l219 1546                                                l228 1624  
                                              l172 2C08                                                l404 1A58  
                                              l229 1662                                                l333 1B4A  
                                              l325 1AEE                                                l501 217E  
                                              l421 1EEE                                                l405 19B0  
                                              l262 2596                                                l342 1BAE  
                                              l502 21A0                                                l414 1FAC  
                                              l430 1F20                                                l422 1EF2  
                                              l271 2B24                                                l319 1A9E  
                                              l175 2C10                                                l415 1ECC  
                                              l407 19DA                                                l264 253C  
                                              l344 1BD8                                                l336 1B6E  
                                              l328 1B16                                                l440 1F5C  
                                              l432 1F2E                                                l424 1EFE  
                                              l408 1A04                                                l265 257C  
                                              l433 1F32                                                l425 1F02  
                                              l417 1ED0                                                l409 1A2E  
                                              l506 21E4                                                l442 1F6A  
                                              l418 1EDC                                                l347 1BE2  
                                              l339 1B86                                                l451 1F94  
                                              l443 1F6E                                                l435 1F3E  
                                              l427 1F0E                                                l419 1EE0  
                                              l452 1F98                                                l460 2486  
                                              l453 1F9C                                                l445 1F72  
                                              l437 1F4C                                                l429 1F1C  
                                              l381 2128                                                l454 1FA0  
                                              l446 1F7E                                                l438 1F50  
                                              l382 20B6                                                l471 290C  
                                              l455 1FA4                                                l391 1908  
                                              l631 1110                                                l464 2A4A  
                                              l456 1FA8                                                l448 1F8C  
                                              l392 18F8                                                l384 20DC  
                                              l376 204E                                                l640 11AC  
                                              l624 105C                                                l481 2B58  
                                              l465 2A28                                                l449 1F90  
                                              l393 18E8                                                l385 2102  
                                              l625 1116                                                l378 2072  
                                              l642 11B8                                                l634 1144  
                                              l626 10BE                                                l651 12D8  
                                              l643 11E0                                                l627 1092  
                                              l476 2AB6                                                l652 1300  
                                              l636 1176                                                l397 1968  
                                              l645 1218                                                l637 1192  
                                              l629 10D4                                                l398 1958  
                                              l590 1DBC                                                l654 131E  
                                              l646 1240                                                l399 1948  
                                              l591 1DC6                                                l655 1328  
                                              l639 119E                                                l496 21FE  
                                              l592 1DF4                                                l816 2B80  
                                              l656 13D8                                                l648 1278  
                                              l497 2152                                                l593 1DFE  
                                              l657 138A                                                l649 12A0  
                                              l498 2172                                                l594 1E2C  
                                              l771 1C70                                                l595 1E36  
                                              l844 27D2                                                l596 1E64  
                                              l845 27E6                                                l781 1CFC  
                                              l773 1C8C                                                l765 1C26  
                                              l597 1E6E                                                l783 1D1A  
                                              l775 1CA8                                                l791 2860  
                                              l768 1D2C                                                l785 1D66  
                                              l777 1CC4                                                l769 1C54  
                                              l891 2354                                                l779 1CE0  
                                              l892 2348                                                l895 2388  
                                              l896 2396                                                l888 230E  
                                              l897 23AC                                                l889 2326  
                                     __CFG_CPB$OFF 000000                                                _PR2 000FCB  
                                              _PEN 007E2A                                       __CFG_CPD$OFF 000000  
                                              _ISR 0008                                                _SEN 007E28  
                               _PWM_SetSyncTrigger 2C64                          __size_of_BUTTONS_GetState 0056  
                           PWM_Task@u8_PeriodCount 00B5                                                prod 000FF3  
                                              wreg 000FE8                                _u16_NVM_WriteBuffer 0140  
                                     __CFG_LVP$OFF 000000                      __size_of_TIMER_GetSysTickFlag 0006  
                                    ?_LCD_SetIcons 0001                                ?_PWM_SetSyncTrigger 0001  
                                             ?_ISR 0001                                       __CFG_WDT$OFF 000000  
                                             l1240 28AA                                               l1241 28B4  
                                             l1250 298A                                               l1251 2994  
                                             l1236 288A                                               l1237 2882  
                                             l1246 2972                                               l1183 25C8  
                                             l1247 296A                                               l1184 25BC  
                                             l1187 25FC                                               l1188 260A  
                                             l5014 1BCE                                               l5034 291A  
                                             l5044 294C                                               l4710 2B4E  
                                             l5374 131E                                               l4984 1B36  
                                             _LATA 000F89                                               _LATB 000F8A  
                                             _LATC 000F8B                                               _LATD 000F8C  
                                             u4020 288E                                               u4050 2976  
                                             u5200 15F4                                               u5040 1420  
                                             u4330 2578                                               u4410 203E  
                                             _IOFS 007E9A                                               u5220 1642  
                                             u5140 1520                                               u5060 1452  
                                             u4420 2062                                               u4270 2358  
                                             u5160 1564                                               u4440 18BC  
                                             u4520 2B76                                               u4620 25CC  
                                             u5180 15A6                                               u4604 2A0E  
                                             u4605 2A0A                                               u4480 191C  
                                             u5520 1380                                               u5280 107A  
                                             u4570 2BD0                                               u5530 13A0  
                                             u5550 186C                                               u4590 2AD4  
                                             u4930 294C                                               u4790 1B68  
                                             u5744 1D44                                               i2l73 2416  
                                             u5745 1D40                                               i2l74 2422  
                                             u4890 1C00                                               _TMR2 000FCC  
                                    ?_BUTTONS_Task 0001                                         _DebugState 00C4  
                  ADC_GetVoltageFiltered@u16_Input 00E3                                               _main 2702  
                               __size_of_LCD_Clear 0020                                   __end_of_I2C_Init 2BA4  
                                             fsr0h 000FEA                                               fsr1h 000FE2  
                                             fsr2h 000FDA                                               fsr0l 000FE9  
                                             indf2 000FDF                                               fsr1l 000FE1  
                                             fsr2l 000FD9                                               btemp 0028  
                                 __end_of_I2C_Stop 2C82                                   __end_of_ADC_Init 2BC2  
                                 __end_of_ADC_Task 1890                            main@u8_TaskCounter100ms 0172  
                                             prodh 000FF4                                               prodl 000FF3  
                                             start 000E                              __size_of_I2C_SendData 0022  
                               __size_of_GPIO_Init 0040                                      __CFG_IESO$OFF 000000  
                         ??_ADC_GetVoltageFiltered 00E5                       ??_USER_FastIncrementSetpoint 00E3  
                                      _SYSTEM_Init 2C04                                       ___param_bank 000000  
                             ??_PWM_SetSyncTrigger 00D1                                              ??_ISR 00D1  
            USER_TemperatureFilter@u16_FilterArray 014A                                   __end_of_LCD_Init 1C18  
                                 __end_of_LCD_Task 2226                     __end_of_TIMER_IncrementSysTick 2C38  
                  __size_of_USER_TemperatureFilter 007A                                    __end_of___aldiv 23BE  
                                            ?_main 016D                       __end_of_PWM_ResetSyncTrigger 2C5C  
                                            _ADRES 000FC3                                              _EEADR 000FA9  
                      __end_of_si32_TempSensorGain 100D                                    __end_of___lldiv 261C  
                                            _T2CON 000FCA                                        ?_TIMER_Init 0001  
                                  __end_of___lwdiv 28BE                                    __end_of___lwmod 299E  
                                            _PLLEN 007CDE                                              _PORTA 000F80  
                                            _PORTB 000F81                                              _PORTC 000F82  
                                            _PORTD 000F83                                              _TRISA 000F92  
                                            _TRISB 000F93                                              _TRISC 000F94  
                                            _TRISD 000F95                                      __CFG_PWRT$OFF 000000  
                                    __CFG_WRT0$OFF 000000                                      __CFG_WRT1$OFF 000000  
                                    __CFG_WRT2$OFF 000000                                ___lmul@multiplicand 0005  
                                    __CFG_WRT3$OFF 000000                                     __CFG_EBTR0$OFF 000000  
                                   __CFG_FCMEN$OFF 000000                                     __CFG_EBTR1$OFF 000000  
                                   __CFG_EBTR2$OFF 000000                                     __CFG_EBTR3$OFF 000000  
                                    __CFG_WRTB$OFF 000000                                      __CFG_WRTC$OFF 000000  
                                    __CFG_WRTD$OFF 000000                         __end_of_u8_SoftwareVersion 100F  
                                   ??_LCD_SetIcons 00E7                                I2C_SendData@u8_Data 00E4  
                                   __CFG_EBTRB$OFF 000000                               NVM_Init@u16_TempData 00E3  
                                       _u32_AdcLsb 1001                                   __end_of_NVM_Init 295C  
                                 __end_of_NVM_Read 286C                                   __end_of_NVM_Task 1D7A  
                                     _I2C_SendData 2B06                    NVM_Task@bFlag_StateWriteLowByte 00BA  
                                   ??_BUTTONS_Task 00E3                                  __end_of_I2C_Start 259A  
                                   __CFG_BOREN$OFF 000000                                              pclath 000FFA  
                                            tablat 000FF5                                   __end_of_PWM_Task 2702  
                                   _u8_LCD_ModeSet 1011                    __size_of_USER_DecrementSetpoint 0018  
                              __size_of_LCD_Update 0016                                 __size_of_NVM_Write 003E  
                                            status 000FD8                                              wtemp6 0029  
                               __size_of_USER_Init 014C                                 __size_of_USER_Task 03D8  
                             _TIMER_SetSysTickFlag 2C5C                                     __CFG_MCLRE$OFF 000000  
                                  __initialization 2AE4                                  NVM_Write@u16_Data 00E3  
                                     __end_of_main 276C                   __size_of_SYSTEM_EnableInterrupts 0006  
                                           ??_main 00EE                                  __end_of_LCD_Clear 2B68  
                                    __activetblptr 000003                                   _TIMER_GetSysTick 2C16  
                                __end_of_GPIO_Init 29DE                 BUTTONS_Task@u16_ButtonsHoldCounter 0120  
                                       _bFlag_Menu 00C3                        __size_of_ADC_GetTemperature 000A  
                                           _ADCON0 000FC2                                             _ADCON1 000FC1  
                                           _ADCON2 000FC0                                             _EEDATA 000FA8  
                                           _EECON1 000FA6                                             _EECON2 000FA7  
                           __end_of_u8_LCD_ModeSet 1012                                             _INTCON 000FF2  
                           _USER_TemperatureFilter 261C                           __end_of_PWM_SetDutyCycle 2B86  
                                           _OSCCON 000FD3                                             _TMR2IP 007CF9  
                     __size_of_LCD_SetPresetDigits 01F6                   __end_of_SYSTEM_DisableInterrupts 2C7E  
                                           _SSPADD 000FC8                                             _TRISC3 007CA3  
                                           _TRISC4 007CA4                                             _SSPBUF 000FC9  
                              __size_of_TIMER_Init 0014                              ?_TIMER_SetSysTickFlag 0001  
                  __size_of_ADC_GetVoltageFiltered 00CC                                     __CFG_XINST$OFF 000000  
                             __size_of_LCD_Dec2Bcd 00A8                                             ___lmul 27C2  
                                        ??___aldiv 0015  USER_FastDecrementSetpoint@u8_FastDecrementCounter 00BE  
                                  _u8_LCD_Data_Ext 0100                           __end_of_ADC_GetVoltageMV 2C4C  
                                        ??___lldiv 0023                                          ??___lwdiv 0005  
                                        ??___lwmod 000C                                             _t_Menu 0152  
                           _USER_DecrementSetpoint 2BC2                                             clear_0 2AEA  
                                           clear_1 2AF6                               __size_of_LCD_GetData 0032  
                                __end_of_NVM_Write 2A1C                           __size_of_LCD_Bcd2Segment 014C  
                                 _BUTTONS_GetState 276C                                  __end_of_USER_Init 1EC6  
                                __end_of_USER_Task 13EC                                          ?_I2C_Init 0001  
                             __size_of_LCD_SetData 0052                                          ?_I2C_Stop 0001  
                            CONTROL_Task@s16_Error 00A9                                          ?_ADC_Init 0001  
                                        ?_ADC_Task 0001                                       __mediumconst 0000  
                                           tblptrh 000FF7                                             tblptrl 000FF6  
                                           tblptru 000FF8                        ?_USER_FastDecrementSetpoint 0001  
                              LCD_SetIcons@u8_Icon 00E7                                LCD_SetIcons@u8_Temp 00E8  
                                _LCD_SetMainDigits 2012             ADC_GetVoltageFiltered@u16_OutputBefore 00AF  
                                       __accesstop 0080                            __end_of__initialization 2AFC  
                     USER_Task@u32_WatchdogCounter 008F                                          ?_LCD_Init 0001  
                                  __CFG_PBADEN$OFF 000000                                          ?_LCD_Task 0001  
                               ?_LCD_SetMainDigits 00E7                 __end_of_USER_FastIncrementSetpoint 2A88  
                       _USER_FastIncrementSetpoint 2A56                               _PWM_ResetSyncTrigger 2C54  
                 USER_Task@u8_DisplayChangeCounter 00C1                                      ___rparam_used 000000  
                                   _t_Temperatures 0080                                     __pcstackCOMRAM 0001  
                                    _ADC_Task$1620 0163                                ??_LCD_SetMainDigits 00EA  
                             __end_of_LCD_SetIcons 2A56                           ??_USER_IncrementSetpoint 00E3  
                           LCD_GetData@u8_Position 00E5                             LCD_SetData@u8_Position 00E3  
                                     ??_LCD_Update 00E3                               __end_of_BUTTONS_Task 1674  
                                        ?_NVM_Init 0001                                          ?_NVM_Read 00E3  
                                        ?_NVM_Task 0001                                          ?_PWM_Task 0001  
                                       ??_I2C_Init 00E3                             _ADC_GetVoltageFiltered 2226  
                                       ??_I2C_Stop 00E3                                         ??_ADC_Init 00E3  
                                       ??_ADC_Task 015F                                I2C_Start@u8_Address 00E9  
                                  _u8_ButtonSignal 008A                                NVM_Read@u16_Address 00E3  
                        __end_of_LCD_SetMainDigits 2150                                         __pbssBANK0 0080  
                                       __pbssBANK1 0100             BUTTONS_Task@u16_ButtonsDebounceCounter 0130  
                                       ??_LCD_Init 00EC                                         ??_LCD_Task 00EC  
                            ?_PWM_ResetSyncTrigger 0001                                 __end_of_LCD_Update 2BF0  
                           ??_TIMER_SetSysTickFlag 00D1                                 LCD_SetData@u8_Data 00E6  
                                     ?_SYSTEM_Init 0001                           _SYSTEM_DisableInterrupts 2C78  
                     __end_of_TIMER_GetSysTickFlag 2C72                            _SYSTEM_EnableInterrupts 2C72  
                                          ?___lmul 0001                     USER_Task@u16_TemporarySetpoint 00A5  
                                   ___lmul@product 0009                                         ??_NVM_Init 00E3  
                                       ??_NVM_Read 00E5             USER_Task@u16_ShowCurrentSettingCounter 009D  
                                       ??_NVM_Task 00E3  USER_FastIncrementSetpoint@u8_FastIncrementCounter 00BF  
                                       ??_PWM_Task 00E3                                       ??_TIMER_Init 00E3  
                    __end_of_si32_TempSensorOffset 1009                                            _INTCON2 000FF1  
                                          _INTCON3 000FF0                                      _bFlag_SysTick 00BD  
                LCD_SetPresetDigits@u16_PresetData 00E7                                      _DebugVariable 00B3  
                                          _SSPCON1 000FC6                                            _SSPCON2 000FC5  
                                ??_LCD_Bcd2Segment 00E4                                            _SSPSTAT 000FC7  
                                      _u8_LCD_Data 0110                                          _I2C_Start 2516  
                         __end_of_TIMER_GetSysTick 2C28                               _u8_NVM_WriteRegister 00BB  
                               _u8_SoftwareVersion 100D                                            __Hparam 0000  
                               __end_of_TIMER_Init 2C04                                            __Lparam 0000  
                                          ___aldiv 22F2                        __size_of_PWM_SetSyncTrigger 0008  
                                  __size_of___lmul 0056                __size_of_USER_FastDecrementSetpoint 002A  
                                          ___lldiv 259A                               I2C_Start@u16_Timeout 00EA  
                  __size_of_USER_IncrementSetpoint 0020                                            ___lwdiv 286C  
                                          ___lwmod 295C                                       __psmallconst 1000  
                                  __CFG_STVREN$OFF 000000                                            __pcinit 2AE4  
                                          __ramtop 1000                                            __ptext0 2702  
                                          __ptext1 1014                                            __ptext2 261C  
                                          __ptext3 2C38                                            __ptext4 2B28  
                                          __ptext5 2A56                                            __ptext6 2ABA  
                                          __ptext7 2BC2                                            __ptext8 2B68  
                                          __ptext9 29DE                                _LCD_SetPresetDigits 1890  
                        CONTROL_Task@s16_prevError 00A7                                       __size_of_ISR 2466  
                                 ___aldiv@dividend 000D                                          _LCD_Clear 2B48  
                       __size_of_LCD_SetMainDigits 013E                            ?_USER_TemperatureFilter 00E5  
                                LCD_Dec2Bcd@ptrBCD 00E5                        USER_Task@u16_AdcPT20Voltage 0162  
                                        _GPIO_Init 299E                                     __pintcode_body 23BE  
                             end_of_initialization 2AFC                             ??_PWM_ResetSyncTrigger 00E3  
                             ?_LCD_SetPresetDigits 00E7                                  ?_PWM_SetDutyCycle 00E3  
                                          int_func 23BE                                _u8_LCD_DeviceSelect 1012  
                         ??_TIMER_ResetSysTickFlag 00E3                                   LCD_Clear@u8_Temp 00E7  
                                       ?_I2C_Start 0001                           __end_of_BUTTONS_GetState 27C2  
                            __size_of_LCD_SetIcons 003A                          ??_SYSTEM_EnableInterrupts 00E3  
                               ??_PWM_SetDutyCycle 00E5                                    ___lldiv@divisor 001F  
                                  ___lldiv@counter 0027                              __size_of_BUTTONS_Task 0288  
                          ?_USER_DecrementSetpoint 0001                                   ___aldiv@quotient 0017  
                                          postdec2 000FDD                                            postinc0 000FEE  
                                          postinc2 000FDE                                  ?_ADC_GetVoltageMV 00E3  
                               ??_ADC_GetVoltageMV 00E5                              ADC_Task@u16_AdcResult 0167  
                                        _PORTCbits 000F82                         __end_of_ADC_GetTemperature 2C42  
                                     _u16_SyncTime 0097                     __end_of_USER_TemperatureFilter 2696  
                                        _NVM_Write 29DE                                         ?_LCD_Clear 0001  
                                __size_of_I2C_Init 001E                      LCD_SetMainDigits@u16_MainData 00E7  
                     LCD_SetPresetDigits@u8_Preset 00E9                                          _USER_Init 1D7A  
                                __size_of_I2C_Stop 0004                                  __size_of_ADC_Init 001E  
                           LCD_Bcd2Segment@u8_Data 00E4                                          _USER_Task 1014  
                             _TIMER_GetSysTickFlag 2C6C                                  __size_of_ADC_Task 021C  
                           _USER_IncrementSetpoint 2B28                                       _LCD_SetIcons 2A1C  
                                       ?_GPIO_Init 0001                              ??_LCD_SetPresetDigits 00EB  
                                     _BUTTONS_Task 13EC                          ADC_Task@si32_AdcTemporary 0169  
                                    ??_LCD_Dec2Bcd 00E7                        ?_USER_FastIncrementSetpoint 0001  
                                __size_of_LCD_Init 0192                                  __size_of_LCD_Task 00D6  
                   __end_of_USER_DecrementSetpoint 2BDA                           ??_TIMER_IncrementSysTick 00D1  
         USER_Task@u16_TemporaryCurrentTemperature 00A3                    LCD_SetPresetDigits@bFlag_Number 00EA  
                                    ??_LCD_GetData 00E3                               __end_of_u8_LCD_Blink 1011  
                             __size_of_SYSTEM_Init 0012                                     __end_of___lmul 2818  
                               __end_of_u32_AdcLsb 1005                              PWM_Task@u8_PwmCounter 00B6  
                          ?_ADC_GetVoltageFiltered 00E3                                      ??_LCD_SetData 00E4  
                      LCD_Bcd2Segment@u8_DigitType 00E3          USER_TemperatureFilter@u16_FilterTemporary 00E7  
                                __size_of_NVM_Init 004C                                  __size_of_NVM_Read 0054  
                                __size_of_NVM_Task 0162                                start_initialization 2AE4  
                                __size_of_PWM_Task 006C                                        __end_of_ISR 246E  
                                       ?_NVM_Write 00E3                              ?_TIMER_GetSysTickFlag 0001  
                                       ?_USER_Init 0001                                         ?_USER_Task 0001  
                       ??_SYSTEM_DisableInterrupts 00E3                                   __CFG_OSC$INTIO67 000000  
                                      ??_I2C_Start 00E7                    __size_of_TIMER_ResetSysTickFlag 0008  
                                 _u8_ErrorRegister 00CB                                           ??___lmul 0009  
                      LCD_Task@bFlag_SecondaryData 00C5                                __end_of_LCD_Dec2Bcd 2516  
                   __end_of_ADC_GetVoltageFiltered 22F2                                   __CFG_LPT1OSC$OFF 000000  
                                  _LCD_Bcd2Segment 1EC6                                __end_of_LCD_GetData 2ABA  
                                    __pcstackBANK0 00D1                                      __pcstackBANK1 015F  
                                      ??_LCD_Clear 00E7                                __end_of_LCD_SetData 2910  
                              NVM_Write@u8_Address 00E7                                      ?_I2C_SendData 0001  
                                 _bFlag_NVM_Update 00BC                                        ??_GPIO_Init 00E3  
                            USER_Task@u8_ErroState 00C2                                  ?_TIMER_GetSysTick 00E3  
                    __size_of_TIMER_SetSysTickFlag 0008                                   ___lwdiv@dividend 0001  
                                __CFG_CCP2MX$PORTC 000000                                 ??_TIMER_GetSysTick 00E7  
                  __size_of_TIMER_IncrementSysTick 0010                         LCD_Task@u8_LCD_DataCounter 00C7  
                                        __pintcode 0008                                           ?___aldiv 000D  
                              _si32_TempSensorGain 1009                                           ?___lldiv 001B  
                                         ?___lwdiv 0001                                           ?___lwmod 0008  
                                        _t_Buttons 00CC                             _TIMER_ResetSysTickFlag 2C4C  
                                      __smallconst 1000                                  main@u32_TimeStamp 015B  
                                         _I2C_Init 2B86                                 _u8_LCD_Datapointer 00C8  
                                         _I2C_Stop 2C7E                                           _ADC_Init 2BA4  
                                         _ADC_Task 1674                             ??_TIMER_GetSysTickFlag 00E3  
                                _u16_ControlOutput 00AB                                        ??_NVM_Write 00E5  
              __size_of_USER_FastIncrementSetpoint 0032                              _si32_TempSensorOffset 1005  
                                   ??_I2C_SendData 00E3                                        ??_USER_Init 00ED  
                                 ___lwdiv@quotient 0006                                        ??_USER_Task 00ED  
                                  ___aldiv@divisor 0011                                    ___aldiv@counter 0015  
                                         _LCD_Init 1A86                                           _LCD_Task 2150  
                                         _LATAbits 000F89                                           _LATDbits 000F8C  
                               _u32_SysTickCounter 0157                                           _PIE1bits 000F9D  
                    LCD_SetMainDigits@bFlag_Number 00E9                                        _LCD_Dec2Bcd 246E  
                                ?_BUTTONS_GetState 00E3                         __end_of_PWM_SetSyncTrigger 2C6C  
                                         _PIR1bits 000F9E                                       _u8_I2C_State 00C9  
                          __end_of_LCD_Bcd2Segment 2012                                 ??_BUTTONS_GetState 00E5  
                                 __CFG_WDTPS$32768 000000                                        _LCD_GetData 2A88  
                                         _NVM_Init 2910                                           _NVM_Read 2818  
                                         _NVM_Task 1C18                          __size_of_PWM_SetDutyCycle 001E  
                                       _ADCON0bits 000FC2                                        _LCD_SetData 28BE  
                                         _PWM_Task 2696                          NVM_Task@u16_TempWriteData 009B  
                          NVM_Task@u16_TempAddress 0099                            ?_USER_IncrementSetpoint 0001  
                           _TIMER_IncrementSysTick 2C28                BUTTONS_Task@u8_ButtonsStatusPressed 00CA  
                     ??_USER_FastDecrementSetpoint 00E3                          __size_of_ADC_GetVoltageMV 000A  
                                ___lmul@multiplier 0001                                        _INTCON3bits 000FF0  
                                     _u8_LCD_Blink 1010                                       _u8_LCD_State 00AD  
                               _ADC_GetTemperature 2C38                      __size_of_PWM_ResetSyncTrigger 0008  
                                       _EECON1bits 000FA6                                           __Hparam0 0000  
               USER_Task@u16_TemporarySaveSetpoint 00A1                    LCD_SetPresetDigits@u8_TempArray 015F  
                                         __Lparam0 0000                        USER_Init@u16_StartupCounter 0162  
                              ?_ADC_GetTemperature 00E3                                  _u8_LCD_BankSelect 100F  
                                 __size_of___aldiv 00CC                                  _bFlag_SyncTrigger 00B8  
                                 __size_of___lldiv 0082                                   __size_of___lwdiv 0052  
                                 __size_of___lwmod 0042                     __end_of_USER_IncrementSetpoint 2B48  
                                LCD_Task@u8_Status 00C6                                    ___lwdiv@divisor 0003  
                      __end_of_LCD_SetPresetDigits 1A86                               ??_ADC_GetTemperature 00E5  
                                  ___lwdiv@counter 0005                             USER_Task@bFlag_AutoOff 00C0  
                                         __ptext10 2012                                           __ptext11 276C  
                                         __ptext20 1EC6                                           __ptext12 2C42  
                                         __ptext21 2A1C                                           __ptext13 1D7A  
                                         __ptext30 1C18                                           __ptext22 2A88  
                                         __ptext14 2818                                           __ptext31 2C72  
                                         __ptext23 2B48                                           __ptext15 2BDA  
                                         __ptext40 2B06                                           __ptext32 2C78  
                                         __ptext24 2C4C                                           __ptext16 1890  
                                         __ptext41 2B86                                           __ptext33 2910  
                                         __ptext25 2BF0                                           __ptext17 246E  
                                         __ptext42 299E                                           __ptext34 2150  
                                         __ptext26 2C6C                                           __ptext18 295C  
                                         __ptext51 2C5C                                           __ptext43 13EC  
                                         __ptext35 1A86                                           __ptext27 2C04  
                                         __ptext19 286C                                           __ptext52 2C28  
                                         __ptext44 1674                                           __ptext36 28BE  
                                         __ptext28 2696                                           __ptext53 2C64  
                                         __ptext45 259A                                           __ptext37 2C7E  
                                         __ptext29 2C54                                           __ptext46 2226  
                                         __ptext38 2516                                           __ptext47 27C2  
                                         __ptext39 2C16                                           __ptext48 22F2  
                                         __ptext49 2BA4                           ?_SYSTEM_EnableInterrupts 0001  
                                    __size_of_main 006A                                      ??_SYSTEM_Init 00E3  
                        __end_of_u8_LCD_BankSelect 1010                        __end_of_u8_LCD_DeviceSelect 1013  
                                 _u16_AdcVoltageMV 00B1                                   ?_LCD_Bcd2Segment 00E3  
                                         int$flags 0028                               __end_of_I2C_SendData 2B28  
                         USER_Init@u16_TempNvmData 0164                                           main@argc 016D  
                                         main@argv 016F                                         _LCD_Update 2BDA  
                       LCD_Dec2Bcd@u16_DecimalData 00E3                                         _INTCONbits 000FF2  
                                         intlevel2 0000                                       _u8_DutyCycle 00B7  
                                 NVM_Read@u16_Temp 00E5                                   ___lwmod@dividend 0008  
                                 ___lldiv@dividend 001B                          BUTTONS_GetState@t_Buttons 00E3  
                          ?_TIMER_ResetSysTickFlag 0001                  __size_of_SYSTEM_DisableInterrupts 0006  
                        ?_SYSTEM_DisableInterrupts 0001                                   _PWM_SetDutyCycle 2B68  
                         ??_USER_TemperatureFilter 00E7                      PWM_SetDutyCycle@u16_DutyCycle 00E3  
                              __end_of_SYSTEM_Init 2C16                                         _TIMER_Init 2BF0  
                        __size_of_TIMER_GetSysTick 0012                       __end_of_TIMER_SetSysTickFlag 2C64  
                                 ___lldiv@quotient 0023                                    ___lwmod@divisor 000A  
                                  ___lwmod@counter 000C                           NVM_Task@u8_TempWriteFlag 00B9  
               __end_of_USER_FastDecrementSetpoint 2AE4                         _USER_FastDecrementSetpoint 2ABA  
                                     ___aldiv@sign 0016                    __end_of_SYSTEM_EnableInterrupts 2C78  
                                 _ADC_GetVoltageMV 2C42               BUTTONS_Task@u8_ButtonsTemporaryInput 00E3  
                         ??_USER_DecrementSetpoint 00E3             USER_Task@u16_SaveCurrentSettingCounter 009F  
                    LCD_SetMainDigits@u8_TempArray 015F                                       ?_LCD_Dec2Bcd 00E3  
